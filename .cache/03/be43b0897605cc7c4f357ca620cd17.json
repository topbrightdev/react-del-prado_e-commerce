{"id":"../node_modules/webpack/node_modules/locate-path/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/locate-path/package.json","includedInParent":true,"mtime":1594306881686},{"name":"path","loc":{"line":2,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/locate-path/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"path-exists","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/locate-path/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-exists/index.js"},{"name":"p-locate","loc":{"line":4,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/locate-path/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/p-locate/index.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/locate-path/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nvar path = require('path');\n\nvar pathExists = require('path-exists');\n\nvar pLocate = require('p-locate');\n\nmodule.exports = function (iterable, options) {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n  return pLocate(iterable, function (el) {\n    return pathExists(path.resolve(options.cwd, el));\n  }, options);\n};\n\nmodule.exports.sync = function (iterable, options) {\n  options = Object.assign({\n    cwd: process.cwd()\n  }, options);\n\n  for (var el of iterable) {\n    if (pathExists.sync(path.resolve(options.cwd, el))) {\n      return el;\n    }\n  }\n};"},"sourceMaps":null,"error":null,"hash":"47f3c4b7c1a4ee03d5f8324461717639","cacheData":{"env":{}}}