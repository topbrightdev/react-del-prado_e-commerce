{"id":"../node_modules/react-dev-utils/typescriptFormatter.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106},{"name":"os","loc":{"line":10,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/typescriptFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/os-browserify/browser.js"},{"name":"@babel/code-frame","loc":{"line":11,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/typescriptFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/@babel/code-frame/lib/index.js"},{"name":"chalk","loc":{"line":12,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/typescriptFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"fs","loc":{"line":13,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/typescriptFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar os = require('os');\n\nvar codeFrame = require('@babel/code-frame').codeFrameColumns;\n\nvar chalk = require('chalk');\n\nvar fs = require('fs');\n\nfunction formatter(message, useColors) {\n  var colors = new chalk.constructor({\n    enabled: useColors\n  });\n  var messageColor = message.isWarningSeverity() ? colors.yellow : colors.red;\n  var source = message.getFile() && fs.existsSync(message.getFile()) && fs.readFileSync(message.getFile(), 'utf-8');\n  var frame = '';\n\n  if (source) {\n    frame = codeFrame(source, {\n      start: {\n        line: message.line,\n        column: message.character\n      }\n    }, {\n      highlightCode: useColors\n    }).split('\\n').map(function (str) {\n      return '  ' + str;\n    }).join(os.EOL);\n  }\n\n  return [messageColor.bold(\"Type \".concat(message.getSeverity().toLowerCase(), \": \")) + message.getContent() + '  ' + messageColor.underline(\"TS\".concat(message.code)), '', frame].join(os.EOL);\n}\n\nmodule.exports = formatter;"},"sourceMaps":null,"error":null,"hash":"362714caa278643369cac7d4f4675d83","cacheData":{"env":{}}}