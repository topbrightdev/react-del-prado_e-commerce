{"id":"../node_modules/@csstools/convert-colors/lib/lab-xyz.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/@csstools/convert-colors/package.json","includedInParent":true,"mtime":1594306879514},{"name":"./util","loc":{"line":1,"column":60},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/@csstools/convert-colors/lib/lab-xyz.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/@csstools/convert-colors/lib/util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lab2xyz = lab2xyz;\nexports.xyz2lab = xyz2lab;\n\nvar _util = require(\"./util\");\n\n/* Convert between Lab and XYZ\n/* ========================================================================== */\nfunction lab2xyz(labL, labA, labB) {\n  // compute f, starting with the luminance-related term\n  const f2 = (labL + 16) / 116;\n  const f1 = labA / 500 + f2;\n  const f3 = f2 - labB / 200; // compute pre-scaled XYZ\n\n  const [initX, initY, initZ] = [Math.pow(f1, 3) > _util.epsilon ? Math.pow(f1, 3) : (116 * f1 - 16) / _util.kappa, labL > _util.kappa * _util.epsilon ? Math.pow((labL + 16) / 116, 3) : labL / _util.kappa, Math.pow(f3, 3) > _util.epsilon ? Math.pow(f3, 3) : (116 * f3 - 16) / _util.kappa];\n  const [xyzX, xyzY, xyzZ] = (0, _util.matrix)( // compute XYZ by scaling pre-scaled XYZ by reference white\n  [initX * _util.wd50X, initY * _util.wd50Y, initZ * _util.wd50Z], // calculate D65 XYZ from D50 XYZ\n  [[0.9555766, -0.0230393, 0.0631636], [-0.0282895, 1.0099416, 0.0210077], [0.0122982, -0.0204830, 1.3299098]]);\n  return [xyzX, xyzY, xyzZ];\n}\n\nfunction xyz2lab(xyzX, xyzY, xyzZ) {\n  // calculate D50 XYZ from D65 XYZ\n  const [d50X, d50Y, d50Z] = (0, _util.matrix)([xyzX, xyzY, xyzZ], [[1.0478112, 0.0228866, -0.0501270], [0.0295424, 0.9904844, -0.0170491], [-0.0092345, 0.0150436, 0.7521316]]); // calculate f\n\n  const [f1, f2, f3] = [d50X / _util.wd50X, d50Y / _util.wd50Y, d50Z / _util.wd50Z].map(value => value > _util.epsilon ? Math.cbrt(value) : (_util.kappa * value + 16) / 116);\n  const [labL, labA, labB] = [116 * f2 - 16, 500 * (f1 - f2), 200 * (f2 - f3)];\n  return [labL, labA, labB];\n}\n/*\n\nReferences\n----------\n\n- https://www.w3.org/TR/css-color-4/#rgb-to-lab\n- https://www.w3.org/TR/css-color-4/#color-conversion-code\n- https://www.easyrgb.com/en/math.php\n\n/* ========================================================================== */"},"sourceMaps":null,"error":null,"hash":"40fccf0e78fb5520557273c2a14bfba3","cacheData":{"env":{}}}