{"id":"../node_modules/postcss-media-minmax/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-media-minmax/package.json","includedInParent":true,"mtime":1594306880590},{"name":"postcss","loc":{"line":1,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-media-minmax/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-media-minmax/node_modules/postcss/lib/postcss.js"}],"generated":{"js":"var postcss = require('postcss');\n\nmodule.exports = postcss.plugin('postcss-media-minmax', function () {\n  return function (css) {\n    var feature_unit = {\n      'width': 'px',\n      'height': 'px',\n      'device-width': 'px',\n      'device-height': 'px',\n      'aspect-ratio': '',\n      'device-aspect-ratio': '',\n      'color': '',\n      'color-index': '',\n      'monochrome': '',\n      'resolution': 'dpi'\n    }; //支持 min-/max- 前缀的属性\n\n    var feature_name = Object.keys(feature_unit);\n    var step = .001; // smallest even number that won’t break complex queries (1in = 96px)\n\n    var power = {\n      '>': 1,\n      '<': -1\n    };\n    var minmax = {\n      '>': 'min',\n      '<': 'max'\n    };\n\n    function create_query(name, gtlt, eq, value, params) {\n      return value.replace(/([-\\d\\.]+)(.*)/, function (match, number, unit) {\n        var initialNumber = parseFloat(number);\n\n        if (parseFloat(number) || eq) {\n          // if eq is true, then number remains same\n          if (!eq) {\n            // change integer pixels value only on integer pixel\n            if (unit === 'px' && initialNumber === parseInt(number, 10)) {\n              number = initialNumber + power[gtlt];\n            } else {\n              number = Number(Math.round(parseFloat(number) + step * power[gtlt] + 'e6') + 'e-6');\n            }\n          }\n        } else {\n          number = power[gtlt] + feature_unit[name];\n        }\n\n        return '(' + minmax[gtlt] + '-' + name + ': ' + number + unit + ')';\n      });\n    } // 读取 media-feature\n\n\n    css.walkAtRules(function (rule, i) {\n      if (rule.name !== \"media\" && rule.name !== \"custom-media\") {\n        return;\n      }\n      /**\n       * 转换 <mf-name> <|>= <mf-value>\n       *    $1  $2   $3\n       * (width >= 300px) => (min-width: 300px)\n       * (width <= 900px) => (max-width: 900px)\n       */\n      //取值不支持负值\n      //But -0 is always equivalent to 0 in CSS, and so is also accepted as a valid <mq-boolean> value.\n\n\n      rule.params = rule.params.replace(/\\(\\s*([a-z-]+?)\\s*([<>])(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function ($0, $1, $2, $3, $4) {\n        var params = '';\n\n        if (feature_name.indexOf($1) > -1) {\n          return create_query($1, $2, $3, $4, rule.params);\n        } //如果不是指定的属性，不做替换\n\n\n        return $0;\n      });\n      /**\n       * 转换  <mf-value> <|<= <mf-name> <|<= <mf-value>\n       * 转换  <mf-value> >|>= <mf-name> >|>= <mf-value>\n       *   $1  $2$3 $4  $5$6  $7\n       * (500px <= width <= 1200px) => (min-width: 500px) and (max-width: 1200px)\n       * (500px < width <= 1200px) => (min-width: 501px) and (max-width: 1200px)\n       * (900px >= width >= 300px)  => (min-width: 300px) and (max-width: 900px)\n       */\n\n      rule.params = rule.params.replace(/\\(\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*(<|>)(=?)\\s*([a-z-]+)\\s*(<|>)(=?)\\s*((?:-?\\d*\\.?(?:\\s*\\/?\\s*)?\\d+[a-z]*)?)\\s*\\)/gi, function ($0, $1, $2, $3, $4, $5, $6, $7) {\n        if (feature_name.indexOf($4) > -1) {\n          if ($2 === '<' && $5 === '<' || $2 === '>' && $5 === '>') {\n            var min = $2 === '<' ? $1 : $7;\n            var max = $2 === '<' ? $7 : $1; // output differently depended on expression direction\n            // <mf-value> <|<= <mf-name> <|<= <mf-value>\n            // or\n            // <mf-value> >|>= <mf-name> >|>= <mf-value>\n\n            var equals_for_min = $3;\n            var equals_for_max = $6;\n\n            if ($2 === '>') {\n              equals_for_min = $6;\n              equals_for_max = $3;\n            }\n\n            return create_query($4, '>', equals_for_min, min) + ' and ' + create_query($4, '<', equals_for_max, max);\n          }\n        } //如果不是指定的属性，不做替换\n\n\n        return $0;\n      });\n    });\n  };\n});"},"sourceMaps":null,"error":null,"hash":"6f23931aed05abc074375da366080fda","cacheData":{"env":{}}}