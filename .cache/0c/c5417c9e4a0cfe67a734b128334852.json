{"id":"../node_modules/postcss-env-function/index.es.mjs","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/package.json","includedInParent":true,"mtime":1594306880506},{"name":"postcss-values-parser","loc":{"line":1,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-values-parser/lib/index.js"},{"name":"fs","loc":{"line":2,"column":15},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":3,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"postcss","loc":{"line":4,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-env-function/node_modules/postcss/lib/postcss.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcssValuesParser = _interopRequireDefault(require(\"postcss-values-parser\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar dashedMatch = /^--/; // returns the value of a css function as a string\n\nvar getFnValue = function (node) {\n  var value = String(node.nodes.slice(1, -1));\n  return dashedMatch.test(value) ? value : undefined;\n};\n\nvar updateEnvValue = function (node, variables) {\n  // get the value of a css function as a string\n  var value = getFnValue(node);\n\n  if (typeof value === 'string' && value in variables) {\n    node.replaceWith.apply(node, _toConsumableArray(asClonedArrayWithBeforeSpacing(variables[value], node.raws.before)));\n  }\n}; // return an array with its nodes cloned, preserving the raw\n\n\nvar asClonedArrayWithBeforeSpacing = function (array, beforeSpacing) {\n  var clonedArray = asClonedArray(array, null);\n\n  if (clonedArray[0]) {\n    clonedArray[0].raws.before = beforeSpacing;\n  }\n\n  return clonedArray;\n}; // return an array with its nodes cloned\n\n\nvar asClonedArray = function (array, parent) {\n  return array.map(function (node) {\n    return asClonedNode(node, parent);\n  });\n}; // return a cloned node\n\n\nvar asClonedNode = function (node, parent) {\n  var cloneNode = new node.constructor(node);\n\n  for (var key in node) {\n    if (key === 'parent') {\n      cloneNode.parent = parent;\n    } else if (Object(node[key]).constructor === Array) {\n      cloneNode[key] = asClonedArray(node.nodes, cloneNode);\n    } else if (Object(node[key]).constructor === Object) {\n      cloneNode[key] = Object.assign({}, node[key]);\n    }\n  }\n\n  return cloneNode;\n}; // returns whether a node is a css env() function\n\n\nvar isEnvFunc = function (node) {\n  return node && node.type === 'func' && node.value === 'env';\n};\n\nfunction walk(node, fn) {\n  node.nodes.slice(0).forEach(function (childNode) {\n    if (childNode.nodes) {\n      walk(childNode, fn);\n    }\n\n    if (isEnvFunc(childNode)) {\n      fn(childNode);\n    }\n  });\n}\n\nvar getReplacedValue = function (originalValue, variables) {\n  // get the ast of the original value\n  var ast = (0, _postcssValuesParser.default)(originalValue).parse(); // walk all of the css env() functions\n\n  walk(ast, function (node) {\n    // update the environment value for the css env() function\n    updateEnvValue(node, variables);\n  }); // return the stringified ast\n\n  return String(ast);\n}; // returns whether a node is an at-rule\n\n\nvar isAtrule = function (node) {\n  return node && node.type === 'atrule';\n}; // returns whether a node is a declaration\n\n\nvar isDecl = function (node) {\n  return node && node.type === 'decl';\n};\n\nvar getSupportedValue = function (node) {\n  return isAtrule(node) && node.params || isDecl(node) && node.value;\n};\n\nfunction setSupportedValue(node, value) {\n  if (isAtrule(node)) {\n    node.params = value;\n  }\n\n  if (isDecl(node)) {\n    node.value = value;\n  }\n}\n/* Import Custom Properties from Object\n/* ========================================================================== */\n\n\nfunction importEnvironmentVariablesFromObject(object) {\n  var environmentVariables = Object.assign({}, Object(object).environmentVariables || Object(object)['environment-variables']);\n\n  for (var key in environmentVariables) {\n    environmentVariables[key] = (0, _postcssValuesParser.default)(environmentVariables[key]).parse().nodes;\n  }\n\n  return environmentVariables;\n}\n/* Import Custom Properties from JSON file\n/* ========================================================================== */\n\n\nfunction importEnvironmentVariablesFromJSONFile(_x) {\n  return _importEnvironmentVariablesFromJSONFile.apply(this, arguments);\n}\n/* Import Custom Properties from JS file\n/* ========================================================================== */\n\n\nfunction _importEnvironmentVariablesFromJSONFile() {\n  _importEnvironmentVariablesFromJSONFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return readJSON(_path.default.resolve(from));\n\n          case 2:\n            object = _context.sent;\n            return _context.abrupt(\"return\", importEnvironmentVariablesFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _importEnvironmentVariablesFromJSONFile.apply(this, arguments);\n}\n\nfunction importEnvironmentVariablesFromJSFile(_x2) {\n  return _importEnvironmentVariablesFromJSFile.apply(this, arguments);\n}\n/* Import Custom Properties from Sources\n/* ========================================================================== */\n\n\nfunction _importEnvironmentVariablesFromJSFile() {\n  _importEnvironmentVariablesFromJSFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return import(_path.default.resolve(from));\n\n          case 2:\n            object = _context2.sent;\n            return _context2.abrupt(\"return\", importEnvironmentVariablesFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _importEnvironmentVariablesFromJSFile.apply(this, arguments);\n}\n\nfunction importEnvironmentVariablesFromSources(sources) {\n  return sources.map(function (source) {\n    if (source instanceof Promise) {\n      return source;\n    } else if (source instanceof Function) {\n      return source();\n    } // read the source as an object\n\n\n    var opts = source === Object(source) ? source : {\n      from: String(source)\n    }; // skip objects with Custom Properties\n\n    if (opts.environmentVariables || opts['environment-variables']) {\n      return opts;\n    } // source pathname\n\n\n    var from = String(opts.from || ''); // type of file being read from\n\n    var type = (opts.type || _path.default.extname(from).slice(1)).toLowerCase();\n\n    return {\n      type,\n      from\n    };\n  }).reduce( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(environmentVariables, source) {\n      var _ref2, type, from;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return source;\n\n            case 2:\n              _ref2 = _context3.sent;\n              type = _ref2.type;\n              from = _ref2.from;\n\n              if (!(type === 'js')) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.t0 = Object;\n              _context3.t1 = environmentVariables;\n              _context3.next = 10;\n              return importEnvironmentVariablesFromJSFile(from);\n\n            case 10:\n              _context3.t2 = _context3.sent;\n              return _context3.abrupt(\"return\", _context3.t0.assign.call(_context3.t0, _context3.t1, _context3.t2));\n\n            case 12:\n              if (!(type === 'json')) {\n                _context3.next = 19;\n                break;\n              }\n\n              _context3.t3 = Object;\n              _context3.t4 = environmentVariables;\n              _context3.next = 17;\n              return importEnvironmentVariablesFromJSONFile(from);\n\n            case 17:\n              _context3.t5 = _context3.sent;\n              return _context3.abrupt(\"return\", _context3.t3.assign.call(_context3.t3, _context3.t4, _context3.t5));\n\n            case 19:\n              _context3.t6 = Object;\n              _context3.t7 = environmentVariables;\n              _context3.t8 = importEnvironmentVariablesFromObject;\n              _context3.next = 24;\n              return source;\n\n            case 24:\n              _context3.t9 = _context3.sent;\n              _context3.t10 = (0, _context3.t8)(_context3.t9);\n              return _context3.abrupt(\"return\", _context3.t6.assign.call(_context3.t6, _context3.t7, _context3.t10));\n\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {});\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nvar readFile = function (from) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.readFile(from, 'utf8', function (error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nvar readJSON = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(from) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.t0 = JSON;\n            _context4.next = 3;\n            return readFile(from);\n\n          case 3:\n            _context4.t1 = _context4.sent;\n            return _context4.abrupt(\"return\", _context4.t0.parse.call(_context4.t0, _context4.t1));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function readJSON(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar index = _postcss.default.plugin('postcss-env-fn', function (opts) {\n  // sources to import environment variables from\n  var importFrom = [].concat(Object(opts).importFrom || []); // promise any environment variables are imported\n\n  var environmentVariablesPromise = importEnvironmentVariablesFromSources(importFrom);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(root) {\n      var environmentVariables;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return environmentVariablesPromise;\n\n            case 2:\n              environmentVariables = _context5.sent;\n              root.walk(function (node) {\n                var supportedValue = getSupportedValue(node);\n\n                if (supportedValue) {\n                  var replacedValue = getReplacedValue(supportedValue, environmentVariables);\n\n                  if (replacedValue !== supportedValue) {\n                    setSupportedValue(node, replacedValue);\n                  }\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\n\nvar _default = index;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"21bf821dcfa9196a5862b4b8b1389585","cacheData":{"env":{}}}