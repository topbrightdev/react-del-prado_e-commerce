{"id":"../node_modules/spdy-transport/lib/spdy-transport/protocol/base/utils.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/package.json","includedInParent":true,"mtime":1594570878662},{"name":"util","loc":{"line":5,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/utils.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"}],"generated":{"js":"'use strict'\n\nvar utils = exports\n\nvar util = require('util')\n\nfunction ProtocolError (code, message) {\n  this.code = code\n  this.message = message\n}\nutil.inherits(ProtocolError, Error)\nutils.ProtocolError = ProtocolError\n\nutils.error = function error (code, message) {\n  return new ProtocolError(code, message)\n}\n\nutils.reverse = function reverse (object) {\n  var result = []\n\n  Object.keys(object).forEach(function (key) {\n    result[object[key] | 0] = key\n  })\n\n  return result\n}\n\n// weight [1, 36] <=> priority [0, 7]\n// This way weight=16 is preserved and has priority=3\nutils.weightToPriority = function weightToPriority (weight) {\n  return ((Math.min(35, (weight - 1)) / 35) * 7) | 0\n}\n\nutils.priorityToWeight = function priorityToWeight (priority) {\n  return (((priority / 7) * 35) | 0) + 1\n}\n\n// Copy-Paste from node\nexports.addHeaderLine = function addHeaderLine (field, value, dest) {\n  field = field.toLowerCase()\n  if (/^:/.test(field)) {\n    dest[field] = value\n    return\n  }\n\n  switch (field) {\n    // Array headers:\n    case 'set-cookie':\n      if (dest[field] !== undefined) {\n        dest[field].push(value)\n      } else {\n        dest[field] = [ value ]\n      }\n      break\n\n    /* eslint-disable max-len */\n    // list is taken from:\n    /* eslint-enable max-len */\n    case 'content-type':\n    case 'content-length':\n    case 'user-agent':\n    case 'referer':\n    case 'host':\n    case 'authorization':\n    case 'proxy-authorization':\n    case 'if-modified-since':\n    case 'if-unmodified-since':\n    case 'from':\n    case 'location':\n    case 'max-forwards':\n      // drop duplicates\n      if (dest[field] === undefined) {\n        dest[field] = value\n      }\n      break\n\n    case 'cookie':\n      // make semicolon-separated list\n      if (dest[field] !== undefined) {\n        dest[field] += '; ' + value\n      } else {\n        dest[field] = value\n      }\n      break\n\n    default:\n      // make comma-separated list\n      if (dest[field] !== undefined) {\n        dest[field] += ', ' + value\n      } else {\n        dest[field] = value\n      }\n  }\n}\n"},"sourceMaps":null,"error":null,"hash":"1879c071022b04b81e42e37ea2c32c9b","cacheData":{"env":{}}}