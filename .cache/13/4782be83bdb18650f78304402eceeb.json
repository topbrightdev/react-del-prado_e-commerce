{"id":"../node_modules/postcss-flexbugs-fixes/bugs/bug6.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-flexbugs-fixes/package.json","includedInParent":true,"mtime":1594306880514},{"name":"postcss","loc":{"line":1,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-flexbugs-fixes/bugs/bug6.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-flexbugs-fixes/node_modules/postcss/lib/postcss.js"}],"generated":{"js":"var postcss = require('postcss');\r\n\r\nmodule.exports = function(decl) {\r\n    if (decl.prop === 'flex') {\r\n        var values = postcss.list.space(decl.value);\r\n        var flexGrow = values[0];\r\n        var flexShrink = values[1] || '1';\r\n        var flexBasis = values[2] || '0%';\r\n        // Safari seems to hate '0%' and the others seems to make do with a nice value when basis is missing,\r\n        // so if we see a '0%', just remove it.  This way it'll get adjusted for any other cases where '0%' is\r\n        // already defined somewhere else.\r\n        if(flexBasis === '0%') flexBasis = null;\r\n        decl.value = flexGrow + ' ' + flexShrink + (flexBasis ? ' ' + flexBasis : '');\r\n    }\r\n};\r\n"},"sourceMaps":null,"error":null,"hash":"89c57842f593e6739e1276ead65f8a6c","cacheData":{"env":{}}}