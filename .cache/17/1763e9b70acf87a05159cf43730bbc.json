{"id":"../node_modules/clean-css/lib/reader/rebase.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"./extract-import-url-and-media","loc":{"line":1,"column":39},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rebase.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/extract-import-url-and-media.js"},{"name":"./restore-import","loc":{"line":2,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rebase.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/restore-import.js"},{"name":"./rewrite-url","loc":{"line":3,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rebase.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rewrite-url.js"},{"name":"../tokenizer/token","loc":{"line":5,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rebase.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/tokenizer/token.js"},{"name":"../utils/is-import","loc":{"line":6,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/rebase.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/is-import.js"}],"generated":{"js":"var extractImportUrlAndMedia = require('./extract-import-url-and-media');\n\nvar restoreImport = require('./restore-import');\n\nvar rewriteUrl = require('./rewrite-url');\n\nvar Token = require('../tokenizer/token');\n\nvar isImport = require('../utils/is-import');\n\nvar SOURCE_MAP_COMMENT_PATTERN = /^\\/\\*# sourceMappingURL=(\\S+) \\*\\/$/;\n\nfunction rebase(tokens, rebaseAll, validator, rebaseConfig) {\n  return rebaseAll ? rebaseEverything(tokens, validator, rebaseConfig) : rebaseAtRules(tokens, validator, rebaseConfig);\n}\n\nfunction rebaseEverything(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n\n      case Token.AT_RULE_BLOCK:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n\n      case Token.COMMENT:\n        rebaseSourceMapComment(token, rebaseConfig);\n        break;\n\n      case Token.NESTED_BLOCK:\n        rebaseEverything(token[2], validator, rebaseConfig);\n        break;\n\n      case Token.RULE:\n        rebaseProperties(token[2], validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRules(tokens, validator, rebaseConfig) {\n  var token;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        rebaseAtRule(token, validator, rebaseConfig);\n        break;\n    }\n  }\n\n  return tokens;\n}\n\nfunction rebaseAtRule(token, validator, rebaseConfig) {\n  if (!isImport(token[1])) {\n    return;\n  }\n\n  var uriAndMediaQuery = extractImportUrlAndMedia(token[1]);\n  var newUrl = rewriteUrl(uriAndMediaQuery[0], rebaseConfig);\n  var mediaQuery = uriAndMediaQuery[1];\n  token[1] = restoreImport(newUrl, mediaQuery);\n}\n\nfunction rebaseSourceMapComment(token, rebaseConfig) {\n  var matches = SOURCE_MAP_COMMENT_PATTERN.exec(token[1]);\n\n  if (matches && matches[1].indexOf('data:') === -1) {\n    token[1] = token[1].replace(matches[1], rewriteUrl(matches[1], rebaseConfig, true));\n  }\n}\n\nfunction rebaseProperties(properties, validator, rebaseConfig) {\n  var property;\n  var value;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n\n    for (j = 2\n    /* 0 is Token.PROPERTY, 1 is name */\n    , m = property.length; j < m; j++) {\n      value = property[j][1];\n\n      if (validator.isUrl(value)) {\n        property[j][1] = rewriteUrl(value, rebaseConfig);\n      }\n    }\n  }\n}\n\nmodule.exports = rebase;"},"sourceMaps":null,"error":null,"hash":"449a7f959eab7ff8857647fade221337","cacheData":{"env":{}}}