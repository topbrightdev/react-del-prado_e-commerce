{"id":"../node_modules/webpack/lib/node/NodeWatchFileSystem.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"watchpack","loc":{"line":7,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node/NodeWatchFileSystem.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/watchpack/lib/watchpack.js"},{"name":"../util/objectToMap","loc":{"line":8,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node/NodeWatchFileSystem.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/util/objectToMap.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Watchpack = require(\"watchpack\");\n\nvar objectToMap = require(\"../util/objectToMap\");\n\nvar NodeWatchFileSystem = /*#__PURE__*/function () {\n  function NodeWatchFileSystem(inputFileSystem) {\n    _classCallCheck(this, NodeWatchFileSystem);\n\n    this.inputFileSystem = inputFileSystem;\n    this.watcherOptions = {\n      aggregateTimeout: 0\n    };\n    this.watcher = new Watchpack(this.watcherOptions);\n  }\n\n  _createClass(NodeWatchFileSystem, [{\n    key: \"watch\",\n    value: function watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n      var _this = this;\n\n      if (!Array.isArray(files)) {\n        throw new Error(\"Invalid arguments: 'files'\");\n      }\n\n      if (!Array.isArray(dirs)) {\n        throw new Error(\"Invalid arguments: 'dirs'\");\n      }\n\n      if (!Array.isArray(missing)) {\n        throw new Error(\"Invalid arguments: 'missing'\");\n      }\n\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid arguments: 'callback'\");\n      }\n\n      if (typeof startTime !== \"number\" && startTime) {\n        throw new Error(\"Invalid arguments: 'startTime'\");\n      }\n\n      if (typeof options !== \"object\") {\n        throw new Error(\"Invalid arguments: 'options'\");\n      }\n\n      if (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n        throw new Error(\"Invalid arguments: 'callbackUndelayed'\");\n      }\n\n      var oldWatcher = this.watcher;\n      this.watcher = new Watchpack(options);\n\n      if (callbackUndelayed) {\n        this.watcher.once(\"change\", callbackUndelayed);\n      }\n\n      var cachedFiles = files;\n      var cachedDirs = dirs;\n      this.watcher.once(\"aggregated\", function (changes, removals) {\n        changes = changes.concat(removals);\n\n        if (_this.inputFileSystem && _this.inputFileSystem.purge) {\n          _this.inputFileSystem.purge(changes);\n        }\n\n        var times = objectToMap(_this.watcher.getTimes());\n        files = new Set(files);\n        dirs = new Set(dirs);\n        missing = new Set(missing);\n        removals = new Set(removals.filter(function (file) {\n          return files.has(file);\n        }));\n        callback(null, changes.filter(function (file) {\n          return files.has(file);\n        }).sort(), changes.filter(function (file) {\n          return dirs.has(file);\n        }).sort(), changes.filter(function (file) {\n          return missing.has(file);\n        }).sort(), times, times, removals);\n      });\n      this.watcher.watch(cachedFiles.concat(missing), cachedDirs.concat(missing), startTime);\n\n      if (oldWatcher) {\n        oldWatcher.close();\n      }\n\n      return {\n        close: function close() {\n          if (_this.watcher) {\n            _this.watcher.close();\n\n            _this.watcher = null;\n          }\n        },\n        pause: function pause() {\n          if (_this.watcher) {\n            _this.watcher.pause();\n          }\n        },\n        getFileTimestamps: function getFileTimestamps() {\n          if (_this.watcher) {\n            return objectToMap(_this.watcher.getTimes());\n          } else {\n            return new Map();\n          }\n        },\n        getContextTimestamps: function getContextTimestamps() {\n          if (_this.watcher) {\n            return objectToMap(_this.watcher.getTimes());\n          } else {\n            return new Map();\n          }\n        }\n      };\n    }\n  }]);\n\n  return NodeWatchFileSystem;\n}();\n\nmodule.exports = NodeWatchFileSystem;"},"sourceMaps":null,"error":null,"hash":"71a966d967b54125808fc5ce9eb561f9","cacheData":{"env":{}}}