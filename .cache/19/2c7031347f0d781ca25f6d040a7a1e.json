{"id":"../node_modules/webpack/lib/SizeFormatHelpers.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nvar SizeFormatHelpers = exports;\n\nSizeFormatHelpers.formatSize = function (size) {\n  if (typeof size !== \"number\" || Number.isNaN(size) === true) {\n    return \"unknown size\";\n  }\n\n  if (size <= 0) {\n    return \"0 bytes\";\n  }\n\n  var abbreviations = [\"bytes\", \"KiB\", \"MiB\", \"GiB\"];\n  var index = Math.floor(Math.log(size) / Math.log(1024));\n  return \"\".concat(+(size / Math.pow(1024, index)).toPrecision(3), \" \").concat(abbreviations[index]);\n};"},"sourceMaps":null,"error":null,"hash":"b5ca61b6be171cb6380b52ac7dce9cbb","cacheData":{"env":{}}}