{"id":"../node_modules/webpack/lib/SingleEntryPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"./dependencies/SingleEntryDependency","loc":{"line":6,"column":38},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/SingleEntryPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/SingleEntryDependency.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar SingleEntryPlugin = /*#__PURE__*/function () {\n  /**\n   * An entry plugin which will handle\n   * creation of the SingleEntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {string} name entry key name\n   */\n  function SingleEntryPlugin(context, entry, name) {\n    _classCallCheck(this, SingleEntryPlugin);\n\n    this.context = context;\n    this.entry = entry;\n    this.name = name;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  _createClass(SingleEntryPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"SingleEntryPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n      });\n      compiler.hooks.make.tapAsync(\"SingleEntryPlugin\", function (compilation, callback) {\n        var entry = _this.entry,\n            name = _this.name,\n            context = _this.context;\n        var dep = SingleEntryPlugin.createDependency(entry, name);\n        compilation.addEntry(context, dep, name, callback);\n      });\n    }\n    /**\n     * @param {string} entry entry request\n     * @param {string} name entry name\n     * @returns {SingleEntryDependency} the dependency\n     */\n\n  }], [{\n    key: \"createDependency\",\n    value: function createDependency(entry, name) {\n      var dep = new SingleEntryDependency(entry);\n      dep.loc = {\n        name\n      };\n      return dep;\n    }\n  }]);\n\n  return SingleEntryPlugin;\n}();\n\nmodule.exports = SingleEntryPlugin;"},"sourceMaps":null,"error":null,"hash":"b69a62321a6a343e8f5b3291f000e169","cacheData":{"env":{}}}