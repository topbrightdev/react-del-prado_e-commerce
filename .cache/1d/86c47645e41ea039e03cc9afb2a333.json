{"id":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/package.json","includedInParent":true,"mtime":1594570878662},{"name":"../../../spdy-transport","loc":{"line":5,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport.js"},{"name":"./","loc":{"line":8,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/http2/index.js"},{"name":"assert","loc":{"line":10,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/assert/assert.js"},{"name":"util","loc":{"line":11,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"}],"generated":{"js":"'use strict'\n\nvar parser = exports\n\nvar transport = require('../../../spdy-transport')\nvar base = transport.protocol.base\nvar utils = base.utils\nvar constants = require('./').constants\n\nvar assert = require('assert')\nvar util = require('util')\n\nfunction Parser (options) {\n  base.Parser.call(this, options)\n\n  this.isServer = options.isServer\n\n  this.waiting = constants.PREFACE_SIZE\n  this.state = 'preface'\n  this.pendingHeader = null\n\n  // Header Block queue\n  this._lastHeaderBlock = null\n  this.maxFrameSize = constants.INITIAL_MAX_FRAME_SIZE\n  this.maxHeaderListSize = constants.DEFAULT_MAX_HEADER_LIST_SIZE\n}\nutil.inherits(Parser, base.Parser)\n\nparser.create = function create (options) {\n  return new Parser(options)\n}\n\nParser.prototype.setMaxFrameSize = function setMaxFrameSize (size) {\n  this.maxFrameSize = size\n}\n\nParser.prototype.setMaxHeaderListSize = function setMaxHeaderListSize (size) {\n  this.maxHeaderListSize = size\n}\n\n// Only for testing\nParser.prototype.skipPreface = function skipPreface () {\n  // Just some number bigger than 3.1, doesn't really matter for HTTP2\n  this.setVersion(4)\n\n  // Parse frame header!\n  this.state = 'frame-head'\n  this.waiting = constants.FRAME_HEADER_SIZE\n}\n\nParser.prototype.execute = function execute (buffer, callback) {\n  if (this.state === 'preface') { return this.onPreface(buffer, callback) }\n\n  if (this.state === 'frame-head') {\n    return this.onFrameHead(buffer, callback)\n  }\n\n  assert(this.state === 'frame-body' && this.pendingHeader !== null)\n\n  var self = this\n  var header = this.pendingHeader\n  this.pendingHeader = null\n\n  this.onFrameBody(header, buffer, function (err, frame) {\n    if (err) {\n      return callback(err)\n    }\n\n    self.state = 'frame-head'\n    self.partial = false\n    self.waiting = constants.FRAME_HEADER_SIZE\n    callback(null, frame)\n  })\n}\n\nParser.prototype.executePartial = function executePartial (buffer, callback) {\n  var header = this.pendingHeader\n\n  assert.equal(header.flags & constants.flags.PADDED, 0)\n\n  if (this.window) { this.window.recv.update(-buffer.size) }\n\n  callback(null, {\n    type: 'DATA',\n    id: header.id,\n\n    // Partial DATA can't be FIN\n    fin: false,\n    data: buffer.take(buffer.size)\n  })\n}\n\nParser.prototype.onPreface = function onPreface (buffer, callback) {\n  if (buffer.take(buffer.size).toString() !== constants.PREFACE) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid preface'))\n  }\n\n  this.skipPreface()\n  callback(null, null)\n}\n\nParser.prototype.onFrameHead = function onFrameHead (buffer, callback) {\n  var header = {\n    length: buffer.readUInt24BE(),\n    control: true,\n    type: buffer.readUInt8(),\n    flags: buffer.readUInt8(),\n    id: buffer.readUInt32BE() & 0x7fffffff\n  }\n\n  if (header.length > this.maxFrameSize) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'Frame length OOB'))\n  }\n\n  header.control = header.type !== constants.frameType.DATA\n\n  this.state = 'frame-body'\n  this.pendingHeader = header\n  this.waiting = header.length\n  this.partial = !header.control\n\n  // TODO(indutny): eventually support partial padded DATA\n  if (this.partial) {\n    this.partial = (header.flags & constants.flags.PADDED) === 0\n  }\n\n  callback(null, null)\n}\n\nParser.prototype.onFrameBody = function onFrameBody (header, buffer, callback) {\n  var frameType = constants.frameType\n\n  if (header.type === frameType.DATA) {\n    this.onDataFrame(header, buffer, callback)\n  } else if (header.type === frameType.HEADERS) {\n    this.onHeadersFrame(header, buffer, callback)\n  } else if (header.type === frameType.CONTINUATION) {\n    this.onContinuationFrame(header, buffer, callback)\n  } else if (header.type === frameType.WINDOW_UPDATE) {\n    this.onWindowUpdateFrame(header, buffer, callback)\n  } else if (header.type === frameType.RST_STREAM) {\n    this.onRSTFrame(header, buffer, callback)\n  } else if (header.type === frameType.SETTINGS) {\n    this.onSettingsFrame(header, buffer, callback)\n  } else if (header.type === frameType.PUSH_PROMISE) {\n    this.onPushPromiseFrame(header, buffer, callback)\n  } else if (header.type === frameType.PING) {\n    this.onPingFrame(header, buffer, callback)\n  } else if (header.type === frameType.GOAWAY) {\n    this.onGoawayFrame(header, buffer, callback)\n  } else if (header.type === frameType.PRIORITY) {\n    this.onPriorityFrame(header, buffer, callback)\n  } else if (header.type === frameType.X_FORWARDED_FOR) {\n    this.onXForwardedFrame(header, buffer, callback)\n  } else {\n    this.onUnknownFrame(header, buffer, callback)\n  }\n}\n\nParser.prototype.onUnknownFrame = function onUnknownFrame (header, buffer, callback) {\n  if (this._lastHeaderBlock !== null) {\n    callback(this.error(constants.error.PROTOCOL_ERROR,\n                        'Received unknown frame in the middle of a header block'))\n    return\n  }\n  callback(null, { type: 'unknown: ' + header.type })\n}\n\nParser.prototype.unpadData = function unpadData (header, body, callback) {\n  var isPadded = (header.flags & constants.flags.PADDED) !== 0\n\n  if (!isPadded) { return callback(null, body) }\n\n  if (!body.has(1)) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'Not enough space for padding'))\n  }\n\n  var pad = body.readUInt8()\n  if (!body.has(pad)) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid padding size'))\n  }\n\n  var contents = body.clone(body.size - pad)\n  body.skip(body.size)\n  callback(null, contents)\n}\n\nParser.prototype.onDataFrame = function onDataFrame (header, body, callback) {\n  var isEndStream = (header.flags & constants.flags.END_STREAM) !== 0\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Received DATA frame with stream=0'))\n  }\n\n  // Count received bytes\n  if (this.window) {\n    this.window.recv.update(-body.size)\n  }\n\n  this.unpadData(header, body, function (err, data) {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, {\n      type: 'DATA',\n      id: header.id,\n      fin: isEndStream,\n      data: data.take(data.size)\n    })\n  })\n}\n\nParser.prototype.initHeaderBlock = function initHeaderBlock (header,\n                                                            frame,\n                                                            block,\n                                                            callback) {\n  if (this._lastHeaderBlock) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Duplicate Stream ID'))\n  }\n\n  this._lastHeaderBlock = {\n    id: header.id,\n    frame: frame,\n    queue: [],\n    size: 0\n  }\n\n  this.queueHeaderBlock(header, block, callback)\n}\n\nParser.prototype.queueHeaderBlock = function queueHeaderBlock (header,\n                                                              block,\n                                                              callback) {\n  var self = this\n  var item = this._lastHeaderBlock\n  if (!this._lastHeaderBlock || item.id !== header.id) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'No matching stream for continuation'))\n  }\n\n  var fin = (header.flags & constants.flags.END_HEADERS) !== 0\n\n  var chunks = block.toChunks()\n  for (var i = 0; i < chunks.length; i++) {\n    var chunk = chunks[i]\n    item.queue.push(chunk)\n    item.size += chunk.length\n  }\n\n  if (item.size >= self.maxHeaderListSize) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Compressed header list is too large'))\n  }\n\n  if (!fin) { return callback(null, null) }\n  this._lastHeaderBlock = null\n\n  this.decompress.write(item.queue, function (err, chunks) {\n    if (err) {\n      return callback(self.error(constants.error.COMPRESSION_ERROR,\n                                 err.message))\n    }\n\n    var headers = {}\n    var size = 0\n    for (var i = 0; i < chunks.length; i++) {\n      var header = chunks[i]\n\n      size += header.name.length + header.value.length + 32\n      if (size >= self.maxHeaderListSize) {\n        return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                   'Header list is too large'))\n      }\n\n      if (/[A-Z]/.test(header.name)) {\n        return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                   'Header name must be lowercase'))\n      }\n\n      utils.addHeaderLine(header.name, header.value, headers)\n    }\n\n    item.frame.headers = headers\n    item.frame.path = headers[':path']\n\n    callback(null, item.frame)\n  })\n}\n\nParser.prototype.onHeadersFrame = function onHeadersFrame (header,\n                                                          body,\n                                                          callback) {\n  var self = this\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for HEADERS'))\n  }\n\n  this.unpadData(header, body, function (err, data) {\n    if (err) { return callback(err) }\n\n    var isPriority = (header.flags & constants.flags.PRIORITY) !== 0\n    if (!data.has(isPriority ? 5 : 0)) {\n      return callback(self.error(constants.error.FRAME_SIZE_ERROR,\n                                 'Not enough data for HEADERS'))\n    }\n\n    var exclusive = false\n    var dependency = 0\n    var weight = constants.DEFAULT_WEIGHT\n    if (isPriority) {\n      dependency = data.readUInt32BE()\n      exclusive = (dependency & 0x80000000) !== 0\n      dependency &= 0x7fffffff\n\n      // Weight's range is [1, 256]\n      weight = data.readUInt8() + 1\n    }\n\n    if (dependency === header.id) {\n      return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                 'Stream can\\'t dependend on itself'))\n    }\n\n    var streamInfo = {\n      type: 'HEADERS',\n      id: header.id,\n      priority: {\n        parent: dependency,\n        exclusive: exclusive,\n        weight: weight\n      },\n      fin: (header.flags & constants.flags.END_STREAM) !== 0,\n      writable: true,\n      headers: null,\n      path: null\n    }\n\n    self.initHeaderBlock(header, streamInfo, data, callback)\n  })\n}\n\nParser.prototype.onContinuationFrame = function onContinuationFrame (header,\n                                                                    body,\n                                                                    callback) {\n  this.queueHeaderBlock(header, body, callback)\n}\n\nParser.prototype.onRSTFrame = function onRSTFrame (header, body, callback) {\n  if (body.size !== 4) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'RST_STREAM length not 4'))\n  }\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for RST_STREAM'))\n  }\n\n  callback(null, {\n    type: 'RST',\n    id: header.id,\n    code: constants.errorByCode[body.readUInt32BE()]\n  })\n}\n\nParser.prototype._validateSettings = function _validateSettings (settings) {\n  if (settings['enable_push'] !== undefined &&\n      settings['enable_push'] !== 0 &&\n      settings['enable_push'] !== 1) {\n    return this.error(constants.error.PROTOCOL_ERROR,\n                      'SETTINGS_ENABLE_PUSH must be 0 or 1')\n  }\n\n  if (settings['initial_window_size'] !== undefined &&\n      (settings['initial_window_size'] > constants.MAX_INITIAL_WINDOW_SIZE ||\n       settings['initial_window_size'] < 0)) {\n    return this.error(constants.error.FLOW_CONTROL_ERROR,\n                      'SETTINGS_INITIAL_WINDOW_SIZE is OOB')\n  }\n\n  if (settings['max_frame_size'] !== undefined &&\n      (settings['max_frame_size'] > constants.ABSOLUTE_MAX_FRAME_SIZE ||\n       settings['max_frame_size'] < constants.INITIAL_MAX_FRAME_SIZE)) {\n    return this.error(constants.error.PROTOCOL_ERROR,\n                      'SETTINGS_MAX_FRAME_SIZE is OOB')\n  }\n\n  return undefined\n}\n\nParser.prototype.onSettingsFrame = function onSettingsFrame (header,\n                                                            body,\n                                                            callback) {\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for SETTINGS'))\n  }\n\n  var isAck = (header.flags & constants.flags.ACK) !== 0\n  if (isAck && body.size !== 0) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'SETTINGS with ACK and non-zero length'))\n  }\n\n  if (isAck) {\n    return callback(null, { type: 'ACK_SETTINGS' })\n  }\n\n  if (body.size % 6 !== 0) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'SETTINGS length not multiple of 6'))\n  }\n\n  var settings = {}\n  while (!body.isEmpty()) {\n    var id = body.readUInt16BE()\n    var value = body.readUInt32BE()\n    var name = constants.settingsIndex[id]\n\n    if (name) {\n      settings[name] = value\n    }\n  }\n\n  var err = this._validateSettings(settings)\n  if (err !== undefined) {\n    return callback(err)\n  }\n\n  callback(null, {\n    type: 'SETTINGS',\n    settings: settings\n  })\n}\n\nParser.prototype.onPushPromiseFrame = function onPushPromiseFrame (header,\n                                                                  body,\n                                                                  callback) {\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PUSH_PROMISE'))\n  }\n\n  var self = this\n  this.unpadData(header, body, function (err, data) {\n    if (err) {\n      return callback(err)\n    }\n\n    if (!data.has(4)) {\n      return callback(self.error(constants.error.FRAME_SIZE_ERROR,\n                                 'PUSH_PROMISE length less than 4'))\n    }\n\n    var streamInfo = {\n      type: 'PUSH_PROMISE',\n      id: header.id,\n      fin: false,\n      promisedId: data.readUInt32BE() & 0x7fffffff,\n      headers: null,\n      path: null\n    }\n\n    self.initHeaderBlock(header, streamInfo, data, callback)\n  })\n}\n\nParser.prototype.onPingFrame = function onPingFrame (header, body, callback) {\n  if (body.size !== 8) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'PING length != 8'))\n  }\n\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PING'))\n  }\n\n  var ack = (header.flags & constants.flags.ACK) !== 0\n  callback(null, { type: 'PING', opaque: body.take(body.size), ack: ack })\n}\n\nParser.prototype.onGoawayFrame = function onGoawayFrame (header,\n                                                        body,\n                                                        callback) {\n  if (!body.has(8)) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'GOAWAY length < 8'))\n  }\n\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for GOAWAY'))\n  }\n\n  var frame = {\n    type: 'GOAWAY',\n    lastId: body.readUInt32BE(),\n    code: constants.goawayByCode[body.readUInt32BE()]\n  }\n\n  if (body.size !== 0) { frame.debug = body.take(body.size) }\n\n  callback(null, frame)\n}\n\nParser.prototype.onPriorityFrame = function onPriorityFrame (header,\n                                                            body,\n                                                            callback) {\n  if (body.size !== 5) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'PRIORITY length != 5'))\n  }\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PRIORITY'))\n  }\n\n  var dependency = body.readUInt32BE()\n\n  // Again the range is from 1 to 256\n  var weight = body.readUInt8() + 1\n\n  if (dependency === header.id) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Stream can\\'t dependend on itself'))\n  }\n\n  callback(null, {\n    type: 'PRIORITY',\n    id: header.id,\n    priority: {\n      exclusive: (dependency & 0x80000000) !== 0,\n      parent: dependency & 0x7fffffff,\n      weight: weight\n    }\n  })\n}\n\nParser.prototype.onWindowUpdateFrame = function onWindowUpdateFrame (header,\n                                                                    body,\n                                                                    callback) {\n  if (body.size !== 4) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'WINDOW_UPDATE length != 4'))\n  }\n\n  var delta = body.readInt32BE()\n  if (delta === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'WINDOW_UPDATE delta == 0'))\n  }\n\n  callback(null, {\n    type: 'WINDOW_UPDATE',\n    id: header.id,\n    delta: delta\n  })\n}\n\nParser.prototype.onXForwardedFrame = function onXForwardedFrame (header,\n                                                                body,\n                                                                callback) {\n  callback(null, {\n    type: 'X_FORWARDED_FOR',\n    host: body.take(body.size).toString()\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}}],"sources":{"../node_modules/spdy-transport/lib/spdy-transport/protocol/http2/parser.js":"'use strict'\n\nvar parser = exports\n\nvar transport = require('../../../spdy-transport')\nvar base = transport.protocol.base\nvar utils = base.utils\nvar constants = require('./').constants\n\nvar assert = require('assert')\nvar util = require('util')\n\nfunction Parser (options) {\n  base.Parser.call(this, options)\n\n  this.isServer = options.isServer\n\n  this.waiting = constants.PREFACE_SIZE\n  this.state = 'preface'\n  this.pendingHeader = null\n\n  // Header Block queue\n  this._lastHeaderBlock = null\n  this.maxFrameSize = constants.INITIAL_MAX_FRAME_SIZE\n  this.maxHeaderListSize = constants.DEFAULT_MAX_HEADER_LIST_SIZE\n}\nutil.inherits(Parser, base.Parser)\n\nparser.create = function create (options) {\n  return new Parser(options)\n}\n\nParser.prototype.setMaxFrameSize = function setMaxFrameSize (size) {\n  this.maxFrameSize = size\n}\n\nParser.prototype.setMaxHeaderListSize = function setMaxHeaderListSize (size) {\n  this.maxHeaderListSize = size\n}\n\n// Only for testing\nParser.prototype.skipPreface = function skipPreface () {\n  // Just some number bigger than 3.1, doesn't really matter for HTTP2\n  this.setVersion(4)\n\n  // Parse frame header!\n  this.state = 'frame-head'\n  this.waiting = constants.FRAME_HEADER_SIZE\n}\n\nParser.prototype.execute = function execute (buffer, callback) {\n  if (this.state === 'preface') { return this.onPreface(buffer, callback) }\n\n  if (this.state === 'frame-head') {\n    return this.onFrameHead(buffer, callback)\n  }\n\n  assert(this.state === 'frame-body' && this.pendingHeader !== null)\n\n  var self = this\n  var header = this.pendingHeader\n  this.pendingHeader = null\n\n  this.onFrameBody(header, buffer, function (err, frame) {\n    if (err) {\n      return callback(err)\n    }\n\n    self.state = 'frame-head'\n    self.partial = false\n    self.waiting = constants.FRAME_HEADER_SIZE\n    callback(null, frame)\n  })\n}\n\nParser.prototype.executePartial = function executePartial (buffer, callback) {\n  var header = this.pendingHeader\n\n  assert.equal(header.flags & constants.flags.PADDED, 0)\n\n  if (this.window) { this.window.recv.update(-buffer.size) }\n\n  callback(null, {\n    type: 'DATA',\n    id: header.id,\n\n    // Partial DATA can't be FIN\n    fin: false,\n    data: buffer.take(buffer.size)\n  })\n}\n\nParser.prototype.onPreface = function onPreface (buffer, callback) {\n  if (buffer.take(buffer.size).toString() !== constants.PREFACE) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid preface'))\n  }\n\n  this.skipPreface()\n  callback(null, null)\n}\n\nParser.prototype.onFrameHead = function onFrameHead (buffer, callback) {\n  var header = {\n    length: buffer.readUInt24BE(),\n    control: true,\n    type: buffer.readUInt8(),\n    flags: buffer.readUInt8(),\n    id: buffer.readUInt32BE() & 0x7fffffff\n  }\n\n  if (header.length > this.maxFrameSize) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'Frame length OOB'))\n  }\n\n  header.control = header.type !== constants.frameType.DATA\n\n  this.state = 'frame-body'\n  this.pendingHeader = header\n  this.waiting = header.length\n  this.partial = !header.control\n\n  // TODO(indutny): eventually support partial padded DATA\n  if (this.partial) {\n    this.partial = (header.flags & constants.flags.PADDED) === 0\n  }\n\n  callback(null, null)\n}\n\nParser.prototype.onFrameBody = function onFrameBody (header, buffer, callback) {\n  var frameType = constants.frameType\n\n  if (header.type === frameType.DATA) {\n    this.onDataFrame(header, buffer, callback)\n  } else if (header.type === frameType.HEADERS) {\n    this.onHeadersFrame(header, buffer, callback)\n  } else if (header.type === frameType.CONTINUATION) {\n    this.onContinuationFrame(header, buffer, callback)\n  } else if (header.type === frameType.WINDOW_UPDATE) {\n    this.onWindowUpdateFrame(header, buffer, callback)\n  } else if (header.type === frameType.RST_STREAM) {\n    this.onRSTFrame(header, buffer, callback)\n  } else if (header.type === frameType.SETTINGS) {\n    this.onSettingsFrame(header, buffer, callback)\n  } else if (header.type === frameType.PUSH_PROMISE) {\n    this.onPushPromiseFrame(header, buffer, callback)\n  } else if (header.type === frameType.PING) {\n    this.onPingFrame(header, buffer, callback)\n  } else if (header.type === frameType.GOAWAY) {\n    this.onGoawayFrame(header, buffer, callback)\n  } else if (header.type === frameType.PRIORITY) {\n    this.onPriorityFrame(header, buffer, callback)\n  } else if (header.type === frameType.X_FORWARDED_FOR) {\n    this.onXForwardedFrame(header, buffer, callback)\n  } else {\n    this.onUnknownFrame(header, buffer, callback)\n  }\n}\n\nParser.prototype.onUnknownFrame = function onUnknownFrame (header, buffer, callback) {\n  if (this._lastHeaderBlock !== null) {\n    callback(this.error(constants.error.PROTOCOL_ERROR,\n                        'Received unknown frame in the middle of a header block'))\n    return\n  }\n  callback(null, { type: 'unknown: ' + header.type })\n}\n\nParser.prototype.unpadData = function unpadData (header, body, callback) {\n  var isPadded = (header.flags & constants.flags.PADDED) !== 0\n\n  if (!isPadded) { return callback(null, body) }\n\n  if (!body.has(1)) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'Not enough space for padding'))\n  }\n\n  var pad = body.readUInt8()\n  if (!body.has(pad)) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid padding size'))\n  }\n\n  var contents = body.clone(body.size - pad)\n  body.skip(body.size)\n  callback(null, contents)\n}\n\nParser.prototype.onDataFrame = function onDataFrame (header, body, callback) {\n  var isEndStream = (header.flags & constants.flags.END_STREAM) !== 0\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Received DATA frame with stream=0'))\n  }\n\n  // Count received bytes\n  if (this.window) {\n    this.window.recv.update(-body.size)\n  }\n\n  this.unpadData(header, body, function (err, data) {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, {\n      type: 'DATA',\n      id: header.id,\n      fin: isEndStream,\n      data: data.take(data.size)\n    })\n  })\n}\n\nParser.prototype.initHeaderBlock = function initHeaderBlock (header,\n                                                            frame,\n                                                            block,\n                                                            callback) {\n  if (this._lastHeaderBlock) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Duplicate Stream ID'))\n  }\n\n  this._lastHeaderBlock = {\n    id: header.id,\n    frame: frame,\n    queue: [],\n    size: 0\n  }\n\n  this.queueHeaderBlock(header, block, callback)\n}\n\nParser.prototype.queueHeaderBlock = function queueHeaderBlock (header,\n                                                              block,\n                                                              callback) {\n  var self = this\n  var item = this._lastHeaderBlock\n  if (!this._lastHeaderBlock || item.id !== header.id) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'No matching stream for continuation'))\n  }\n\n  var fin = (header.flags & constants.flags.END_HEADERS) !== 0\n\n  var chunks = block.toChunks()\n  for (var i = 0; i < chunks.length; i++) {\n    var chunk = chunks[i]\n    item.queue.push(chunk)\n    item.size += chunk.length\n  }\n\n  if (item.size >= self.maxHeaderListSize) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Compressed header list is too large'))\n  }\n\n  if (!fin) { return callback(null, null) }\n  this._lastHeaderBlock = null\n\n  this.decompress.write(item.queue, function (err, chunks) {\n    if (err) {\n      return callback(self.error(constants.error.COMPRESSION_ERROR,\n                                 err.message))\n    }\n\n    var headers = {}\n    var size = 0\n    for (var i = 0; i < chunks.length; i++) {\n      var header = chunks[i]\n\n      size += header.name.length + header.value.length + 32\n      if (size >= self.maxHeaderListSize) {\n        return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                   'Header list is too large'))\n      }\n\n      if (/[A-Z]/.test(header.name)) {\n        return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                   'Header name must be lowercase'))\n      }\n\n      utils.addHeaderLine(header.name, header.value, headers)\n    }\n\n    item.frame.headers = headers\n    item.frame.path = headers[':path']\n\n    callback(null, item.frame)\n  })\n}\n\nParser.prototype.onHeadersFrame = function onHeadersFrame (header,\n                                                          body,\n                                                          callback) {\n  var self = this\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for HEADERS'))\n  }\n\n  this.unpadData(header, body, function (err, data) {\n    if (err) { return callback(err) }\n\n    var isPriority = (header.flags & constants.flags.PRIORITY) !== 0\n    if (!data.has(isPriority ? 5 : 0)) {\n      return callback(self.error(constants.error.FRAME_SIZE_ERROR,\n                                 'Not enough data for HEADERS'))\n    }\n\n    var exclusive = false\n    var dependency = 0\n    var weight = constants.DEFAULT_WEIGHT\n    if (isPriority) {\n      dependency = data.readUInt32BE()\n      exclusive = (dependency & 0x80000000) !== 0\n      dependency &= 0x7fffffff\n\n      // Weight's range is [1, 256]\n      weight = data.readUInt8() + 1\n    }\n\n    if (dependency === header.id) {\n      return callback(self.error(constants.error.PROTOCOL_ERROR,\n                                 'Stream can\\'t dependend on itself'))\n    }\n\n    var streamInfo = {\n      type: 'HEADERS',\n      id: header.id,\n      priority: {\n        parent: dependency,\n        exclusive: exclusive,\n        weight: weight\n      },\n      fin: (header.flags & constants.flags.END_STREAM) !== 0,\n      writable: true,\n      headers: null,\n      path: null\n    }\n\n    self.initHeaderBlock(header, streamInfo, data, callback)\n  })\n}\n\nParser.prototype.onContinuationFrame = function onContinuationFrame (header,\n                                                                    body,\n                                                                    callback) {\n  this.queueHeaderBlock(header, body, callback)\n}\n\nParser.prototype.onRSTFrame = function onRSTFrame (header, body, callback) {\n  if (body.size !== 4) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'RST_STREAM length not 4'))\n  }\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for RST_STREAM'))\n  }\n\n  callback(null, {\n    type: 'RST',\n    id: header.id,\n    code: constants.errorByCode[body.readUInt32BE()]\n  })\n}\n\nParser.prototype._validateSettings = function _validateSettings (settings) {\n  if (settings['enable_push'] !== undefined &&\n      settings['enable_push'] !== 0 &&\n      settings['enable_push'] !== 1) {\n    return this.error(constants.error.PROTOCOL_ERROR,\n                      'SETTINGS_ENABLE_PUSH must be 0 or 1')\n  }\n\n  if (settings['initial_window_size'] !== undefined &&\n      (settings['initial_window_size'] > constants.MAX_INITIAL_WINDOW_SIZE ||\n       settings['initial_window_size'] < 0)) {\n    return this.error(constants.error.FLOW_CONTROL_ERROR,\n                      'SETTINGS_INITIAL_WINDOW_SIZE is OOB')\n  }\n\n  if (settings['max_frame_size'] !== undefined &&\n      (settings['max_frame_size'] > constants.ABSOLUTE_MAX_FRAME_SIZE ||\n       settings['max_frame_size'] < constants.INITIAL_MAX_FRAME_SIZE)) {\n    return this.error(constants.error.PROTOCOL_ERROR,\n                      'SETTINGS_MAX_FRAME_SIZE is OOB')\n  }\n\n  return undefined\n}\n\nParser.prototype.onSettingsFrame = function onSettingsFrame (header,\n                                                            body,\n                                                            callback) {\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for SETTINGS'))\n  }\n\n  var isAck = (header.flags & constants.flags.ACK) !== 0\n  if (isAck && body.size !== 0) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'SETTINGS with ACK and non-zero length'))\n  }\n\n  if (isAck) {\n    return callback(null, { type: 'ACK_SETTINGS' })\n  }\n\n  if (body.size % 6 !== 0) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'SETTINGS length not multiple of 6'))\n  }\n\n  var settings = {}\n  while (!body.isEmpty()) {\n    var id = body.readUInt16BE()\n    var value = body.readUInt32BE()\n    var name = constants.settingsIndex[id]\n\n    if (name) {\n      settings[name] = value\n    }\n  }\n\n  var err = this._validateSettings(settings)\n  if (err !== undefined) {\n    return callback(err)\n  }\n\n  callback(null, {\n    type: 'SETTINGS',\n    settings: settings\n  })\n}\n\nParser.prototype.onPushPromiseFrame = function onPushPromiseFrame (header,\n                                                                  body,\n                                                                  callback) {\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PUSH_PROMISE'))\n  }\n\n  var self = this\n  this.unpadData(header, body, function (err, data) {\n    if (err) {\n      return callback(err)\n    }\n\n    if (!data.has(4)) {\n      return callback(self.error(constants.error.FRAME_SIZE_ERROR,\n                                 'PUSH_PROMISE length less than 4'))\n    }\n\n    var streamInfo = {\n      type: 'PUSH_PROMISE',\n      id: header.id,\n      fin: false,\n      promisedId: data.readUInt32BE() & 0x7fffffff,\n      headers: null,\n      path: null\n    }\n\n    self.initHeaderBlock(header, streamInfo, data, callback)\n  })\n}\n\nParser.prototype.onPingFrame = function onPingFrame (header, body, callback) {\n  if (body.size !== 8) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'PING length != 8'))\n  }\n\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PING'))\n  }\n\n  var ack = (header.flags & constants.flags.ACK) !== 0\n  callback(null, { type: 'PING', opaque: body.take(body.size), ack: ack })\n}\n\nParser.prototype.onGoawayFrame = function onGoawayFrame (header,\n                                                        body,\n                                                        callback) {\n  if (!body.has(8)) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'GOAWAY length < 8'))\n  }\n\n  if (header.id !== 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for GOAWAY'))\n  }\n\n  var frame = {\n    type: 'GOAWAY',\n    lastId: body.readUInt32BE(),\n    code: constants.goawayByCode[body.readUInt32BE()]\n  }\n\n  if (body.size !== 0) { frame.debug = body.take(body.size) }\n\n  callback(null, frame)\n}\n\nParser.prototype.onPriorityFrame = function onPriorityFrame (header,\n                                                            body,\n                                                            callback) {\n  if (body.size !== 5) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'PRIORITY length != 5'))\n  }\n\n  if (header.id === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Invalid stream id for PRIORITY'))\n  }\n\n  var dependency = body.readUInt32BE()\n\n  // Again the range is from 1 to 256\n  var weight = body.readUInt8() + 1\n\n  if (dependency === header.id) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'Stream can\\'t dependend on itself'))\n  }\n\n  callback(null, {\n    type: 'PRIORITY',\n    id: header.id,\n    priority: {\n      exclusive: (dependency & 0x80000000) !== 0,\n      parent: dependency & 0x7fffffff,\n      weight: weight\n    }\n  })\n}\n\nParser.prototype.onWindowUpdateFrame = function onWindowUpdateFrame (header,\n                                                                    body,\n                                                                    callback) {\n  if (body.size !== 4) {\n    return callback(this.error(constants.error.FRAME_SIZE_ERROR,\n                               'WINDOW_UPDATE length != 4'))\n  }\n\n  var delta = body.readInt32BE()\n  if (delta === 0) {\n    return callback(this.error(constants.error.PROTOCOL_ERROR,\n                               'WINDOW_UPDATE delta == 0'))\n  }\n\n  callback(null, {\n    type: 'WINDOW_UPDATE',\n    id: header.id,\n    delta: delta\n  })\n}\n\nParser.prototype.onXForwardedFrame = function onXForwardedFrame (header,\n                                                                body,\n                                                                callback) {\n  callback(null, {\n    type: 'X_FORWARDED_FOR',\n    host: body.take(body.size).toString()\n  })\n}\n"},"lineCount":579}},"error":null,"hash":"9ffde7ac4ccdf7761d7cf935e30236ba","cacheData":{"env":{}}}