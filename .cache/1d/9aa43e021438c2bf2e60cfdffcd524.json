{"id":"../node_modules/autoprefixer/lib/browsers.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1594570878686},{"name":"browserslist","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/browsers.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/browserslist/index.js"},{"name":"caniuse-lite","loc":{"line":5,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/browsers.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/caniuse-lite/dist/unpacker/index.js"},{"name":"./utils","loc":{"line":7,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/browsers.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"\"use strict\";\n\nvar browserslist = require('browserslist');\n\nvar agents = require('caniuse-lite').agents;\n\nvar utils = require('./utils');\n\nvar Browsers = /*#__PURE__*/function () {\n  /**\n     * Return all prefixes for default browser data\n     */\n  Browsers.prefixes = function prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache;\n    }\n\n    this.prefixesCache = [];\n\n    for (var name in agents) {\n      this.prefixesCache.push(\"-\" + agents[name].prefix + \"-\");\n    }\n\n    this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {\n      return b.length - a.length;\n    });\n    return this.prefixesCache;\n  };\n  /**\n     * Check is value contain any possible prefix\n     */\n\n\n  Browsers.withPrefix = function withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));\n    }\n\n    return this.prefixesRegexp.test(value);\n  };\n\n  function Browsers(data, requirements, options, browserslistOpts) {\n    this.data = data;\n    this.options = options || {};\n    this.browserslistOpts = browserslistOpts || {};\n    this.selected = this.parse(requirements);\n  }\n  /**\n     * Return browsers selected by requirements\n     */\n\n\n  var _proto = Browsers.prototype;\n\n  _proto.parse = function parse(requirements) {\n    var opts = {};\n\n    for (var i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i];\n    }\n\n    opts.path = this.options.from;\n    opts.env = this.options.env;\n    return browserslist(requirements, opts);\n  };\n  /**\n     * Return prefix for selected browser\n     */\n\n\n  _proto.prefix = function prefix(browser) {\n    var _browser$split = browser.split(' '),\n        name = _browser$split[0],\n        version = _browser$split[1];\n\n    var data = this.data[name];\n    var prefix = data.prefix_exceptions && data.prefix_exceptions[version];\n\n    if (!prefix) {\n      prefix = data.prefix;\n    }\n\n    return \"-\" + prefix + \"-\";\n  };\n  /**\n     * Is browser is selected by requirements\n     */\n\n\n  _proto.isSelected = function isSelected(browser) {\n    return this.selected.indexOf(browser) !== -1;\n  };\n\n  return Browsers;\n}();\n\nmodule.exports = Browsers;"},"sourceMaps":null,"error":null,"hash":"6090d93f8cec07e8a396f8a26240d8ce","cacheData":{"env":{}}}