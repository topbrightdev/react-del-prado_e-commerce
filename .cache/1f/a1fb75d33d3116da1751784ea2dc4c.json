{"id":"../node_modules/rxjs/_esm5/internal/operators/sampleTime.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"tslib","loc":{"line":2,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/sampleTime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/tslib/tslib.es6.js"},{"name":"../Subscriber","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/sampleTime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Subscriber.js"},{"name":"../scheduler/async","loc":{"line":4,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/sampleTime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/scheduler/async.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sampleTime = sampleTime;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _Subscriber = require(\"../Subscriber\");\n\nvar _async = require(\"../scheduler/async\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nfunction sampleTime(period, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = _async.async;\n  }\n\n  return function (source) {\n    return source.lift(new SampleTimeOperator(period, scheduler));\n  };\n}\n\nvar SampleTimeOperator = /*@__PURE__*/function () {\n  function SampleTimeOperator(period, scheduler) {\n    this.period = period;\n    this.scheduler = scheduler;\n  }\n\n  SampleTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  };\n\n  return SampleTimeOperator;\n}();\n\nvar SampleTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SampleTimeSubscriber, _super);\n\n  function SampleTimeSubscriber(destination, period, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.period = period;\n    _this.scheduler = scheduler;\n    _this.hasValue = false;\n\n    _this.add(scheduler.schedule(dispatchNotification, period, {\n      subscriber: _this,\n      period: period\n    }));\n\n    return _this;\n  }\n\n  SampleTimeSubscriber.prototype._next = function (value) {\n    this.lastValue = value;\n    this.hasValue = true;\n  };\n\n  SampleTimeSubscriber.prototype.notifyNext = function () {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  };\n\n  return SampleTimeSubscriber;\n}(_Subscriber.Subscriber);\n\nfunction dispatchNotification(state) {\n  var subscriber = state.subscriber,\n      period = state.period;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}"},"sourceMaps":null,"error":null,"hash":"b0ada85786187699571d991276121061","cacheData":{"env":{}}}