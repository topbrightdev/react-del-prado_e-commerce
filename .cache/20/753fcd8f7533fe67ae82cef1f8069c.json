{"id":"../node_modules/postcss-custom-selectors/index.es.mjs","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/package.json","includedInParent":true,"mtime":1594306880450},{"name":"postcss-selector-parser","loc":{"line":1,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-parser/dist/index.js"},{"name":"fs","loc":{"line":2,"column":15},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":3,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"postcss","loc":{"line":4,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/index.es.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-selectors/node_modules/postcss/lib/postcss.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcssSelectorParser = _interopRequireDefault(require(\"postcss-selector-parser\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n/* Return a Selectors AST from a Selectors String\n/* ========================================================================== */\n\n\nvar getSelectorsAstFromSelectorsString = function (selectorString) {\n  var selectorAST;\n  (0, _postcssSelectorParser.default)(function (selectors) {\n    selectorAST = selectors;\n  }).processSync(selectorString);\n  return selectorAST;\n};\n\nvar getCustomSelectors = function (root, opts) {\n  // initialize custom selectors\n  var customSelectors = {}; // for each custom selector atrule that is a child of the css root\n\n  root.nodes.slice().forEach(function (node) {\n    if (isCustomSelector(node)) {\n      // extract the name and selectors from the params of the custom selector\n      var _node$params$match = node.params.match(customSelectorParamsRegExp),\n          _node$params$match2 = _slicedToArray(_node$params$match, 3),\n          name = _node$params$match2[1],\n          selectors = _node$params$match2[2]; // write the parsed selectors to the custom selector\n\n\n      customSelectors[name] = getSelectorsAstFromSelectorsString(selectors); // conditionally remove the custom selector atrule\n\n      if (!Object(opts).preserve) {\n        node.remove();\n      }\n    }\n  });\n  return customSelectors;\n}; // match the custom selector name\n\n\nvar customSelectorNameRegExp = /^custom-selector$/i; // match the custom selector params\n\nvar customSelectorParamsRegExp = /^(:--[A-z][\\w-]*)\\s+([\\W\\w]+)\\s*$/; // whether the atrule is a custom selector\n\nvar isCustomSelector = function (node) {\n  return node.type === 'atrule' && customSelectorNameRegExp.test(node.name) && customSelectorParamsRegExp.test(node.params);\n}; // return transformed selectors, replacing custom pseudo selectors with custom selectors\n\n\nfunction transformSelectorList(selectorList, customSelectors) {\n  var index = selectorList.nodes.length - 1;\n\n  while (index >= 0) {\n    var transformedSelectors = transformSelector(selectorList.nodes[index], customSelectors);\n\n    if (transformedSelectors.length) {\n      var _selectorList$nodes;\n\n      (_selectorList$nodes = selectorList.nodes).splice.apply(_selectorList$nodes, [index, 1].concat(_toConsumableArray(transformedSelectors)));\n    }\n\n    --index;\n  }\n\n  return selectorList;\n} // return custom pseudo selectors replaced with custom selectors\n\n\nfunction transformSelector(selector, customSelectors) {\n  var transpiledSelectors = [];\n\n  var _loop = function (_index) {\n    var _selector$nodes$index = selector.nodes[_index],\n        value = _selector$nodes$index.value,\n        nodes = _selector$nodes$index.nodes;\n\n    if (value in customSelectors) {\n      _iteratorNormalCompletion = true;\n      _didIteratorError = false;\n      _iteratorError = undefined;\n\n      try {\n        for (_iterator = customSelectors[value].nodes[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _selectorClone$nodes;\n\n          var replacementSelector = _step.value;\n          var selectorClone = selector.clone();\n\n          (_selectorClone$nodes = selectorClone.nodes).splice.apply(_selectorClone$nodes, [_index, 1].concat(_toConsumableArray(replacementSelector.clone().nodes.map(function (node) {\n            // use spacing from the current usage\n            node.spaces = _objectSpread({}, selector.nodes[_index].spaces);\n            return node;\n          }))));\n\n          var retranspiledSelectors = transformSelector(selectorClone, customSelectors);\n          adjustNodesBySelectorEnds(selectorClone.nodes, Number(_index));\n\n          if (retranspiledSelectors.length) {\n            transpiledSelectors.push.apply(transpiledSelectors, _toConsumableArray(retranspiledSelectors));\n          } else {\n            transpiledSelectors.push(selectorClone);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        v: transpiledSelectors\n      };\n    } else if (nodes && nodes.length) {\n      transformSelectorList(selector.nodes[_index], customSelectors);\n    }\n  };\n\n  for (var _index in selector.nodes) {\n    var _iteratorNormalCompletion;\n\n    var _didIteratorError;\n\n    var _iteratorError;\n\n    var _iterator, _step;\n\n    var _ret = _loop(_index);\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n\n  return transpiledSelectors;\n} // match selectors by difficult-to-separate ends\n\n\nvar withoutSelectorStartMatch = /^(tag|universal)$/;\nvar withoutSelectorEndMatch = /^(class|id|pseudo|tag|universal)$/;\n\nvar isWithoutSelectorStart = function (node) {\n  return withoutSelectorStartMatch.test(Object(node).type);\n};\n\nvar isWithoutSelectorEnd = function (node) {\n  return withoutSelectorEndMatch.test(Object(node).type);\n}; // adjust nodes by selector ends (so that .class:--h1 becomes h1.class rather than .classh1)\n\n\nvar adjustNodesBySelectorEnds = function (nodes, index) {\n  if (index && isWithoutSelectorStart(nodes[index]) && isWithoutSelectorEnd(nodes[index - 1])) {\n    var safeIndex = index - 1;\n\n    while (safeIndex && isWithoutSelectorEnd(nodes[safeIndex])) {\n      --safeIndex;\n    }\n\n    if (safeIndex < index) {\n      var node = nodes.splice(index, 1)[0];\n      nodes.splice(safeIndex, 0, node);\n      nodes[safeIndex].spaces.before = nodes[safeIndex + 1].spaces.before;\n      nodes[safeIndex + 1].spaces.before = '';\n\n      if (nodes[index]) {\n        nodes[index].spaces.after = nodes[safeIndex].spaces.after;\n        nodes[safeIndex].spaces.after = '';\n      }\n    }\n  }\n};\n\nvar transformRules = function (root, customSelectors, opts) {\n  root.walkRules(customPseudoRegExp, function (rule) {\n    var selector = (0, _postcssSelectorParser.default)(function (selectors) {\n      transformSelectorList(selectors, customSelectors, opts);\n    }).processSync(rule.selector);\n\n    if (opts.preserve) {\n      rule.cloneBefore({\n        selector\n      });\n    } else {\n      rule.selector = selector;\n    }\n  });\n};\n\nvar customPseudoRegExp = /:--[A-z][\\w-]*/;\n/* Import Custom Selectors from CSS AST\n/* ========================================================================== */\n\nfunction importCustomSelectorsFromCSSAST(root) {\n  return getCustomSelectors(root);\n}\n/* Import Custom Selectors from CSS File\n/* ========================================================================== */\n\n\nfunction importCustomSelectorsFromCSSFile(_x) {\n  return _importCustomSelectorsFromCSSFile.apply(this, arguments);\n}\n/* Import Custom Selectors from Object\n/* ========================================================================== */\n\n\nfunction _importCustomSelectorsFromCSSFile() {\n  _importCustomSelectorsFromCSSFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(from) {\n    var css, root;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return readFile(_path.default.resolve(from));\n\n          case 2:\n            css = _context.sent;\n            root = _postcss.default.parse(css, {\n              from: _path.default.resolve(from)\n            });\n            return _context.abrupt(\"return\", importCustomSelectorsFromCSSAST(root));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _importCustomSelectorsFromCSSFile.apply(this, arguments);\n}\n\nfunction importCustomSelectorsFromObject(object) {\n  var customSelectors = Object.assign({}, Object(object).customSelectors || Object(object)['custom-selectors']);\n\n  for (var key in customSelectors) {\n    customSelectors[key] = getSelectorsAstFromSelectorsString(customSelectors[key]);\n  }\n\n  return customSelectors;\n}\n/* Import Custom Selectors from JSON file\n/* ========================================================================== */\n\n\nfunction importCustomSelectorsFromJSONFile(_x2) {\n  return _importCustomSelectorsFromJSONFile.apply(this, arguments);\n}\n/* Import Custom Selectors from JS file\n/* ========================================================================== */\n\n\nfunction _importCustomSelectorsFromJSONFile() {\n  _importCustomSelectorsFromJSONFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return readJSON(_path.default.resolve(from));\n\n          case 2:\n            object = _context2.sent;\n            return _context2.abrupt(\"return\", importCustomSelectorsFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _importCustomSelectorsFromJSONFile.apply(this, arguments);\n}\n\nfunction importCustomSelectorsFromJSFile(_x3) {\n  return _importCustomSelectorsFromJSFile.apply(this, arguments);\n}\n/* Import Custom Selectors from Sources\n/* ========================================================================== */\n\n\nfunction _importCustomSelectorsFromJSFile() {\n  _importCustomSelectorsFromJSFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return import(_path.default.resolve(from));\n\n          case 2:\n            object = _context3.sent;\n            return _context3.abrupt(\"return\", importCustomSelectorsFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _importCustomSelectorsFromJSFile.apply(this, arguments);\n}\n\nfunction importCustomSelectorsFromSources(sources) {\n  return sources.map(function (source) {\n    if (source instanceof Promise) {\n      return source;\n    } else if (source instanceof Function) {\n      return source();\n    } // read the source as an object\n\n\n    var opts = source === Object(source) ? source : {\n      from: String(source)\n    }; // skip objects with custom selectors\n\n    if (Object(opts).customSelectors || Object(opts)['custom-selectors']) {\n      return opts;\n    } // source pathname\n\n\n    var from = String(opts.from || ''); // type of file being read from\n\n    var type = (opts.type || _path.default.extname(from).slice(1)).toLowerCase();\n\n    return {\n      type,\n      from\n    };\n  }).reduce( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(customSelectors, source) {\n      var _ref2, type, from;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return source;\n\n            case 2:\n              _ref2 = _context4.sent;\n              type = _ref2.type;\n              from = _ref2.from;\n\n              if (!(type === 'ast')) {\n                _context4.next = 7;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", Object.assign(customSelectors, importCustomSelectorsFromCSSAST(from)));\n\n            case 7:\n              if (!(type === 'css')) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.t0 = Object;\n              _context4.t1 = customSelectors;\n              _context4.next = 12;\n              return importCustomSelectorsFromCSSFile(from);\n\n            case 12:\n              _context4.t2 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t0.assign.call(_context4.t0, _context4.t1, _context4.t2));\n\n            case 14:\n              if (!(type === 'js')) {\n                _context4.next = 21;\n                break;\n              }\n\n              _context4.t3 = Object;\n              _context4.t4 = customSelectors;\n              _context4.next = 19;\n              return importCustomSelectorsFromJSFile(from);\n\n            case 19:\n              _context4.t5 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t3.assign.call(_context4.t3, _context4.t4, _context4.t5));\n\n            case 21:\n              if (!(type === 'json')) {\n                _context4.next = 28;\n                break;\n              }\n\n              _context4.t6 = Object;\n              _context4.t7 = customSelectors;\n              _context4.next = 26;\n              return importCustomSelectorsFromJSONFile(from);\n\n            case 26:\n              _context4.t8 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t6.assign.call(_context4.t6, _context4.t7, _context4.t8));\n\n            case 28:\n              _context4.t9 = Object;\n              _context4.t10 = customSelectors;\n              _context4.t11 = importCustomSelectorsFromObject;\n              _context4.next = 33;\n              return source;\n\n            case 33:\n              _context4.t12 = _context4.sent;\n              _context4.t13 = (0, _context4.t11)(_context4.t12);\n              return _context4.abrupt(\"return\", _context4.t9.assign.call(_context4.t9, _context4.t10, _context4.t13));\n\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {});\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nvar readFile = function (from) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.readFile(from, 'utf8', function (error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nvar readJSON = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(from) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.t0 = JSON;\n            _context5.next = 3;\n            return readFile(from);\n\n          case 3:\n            _context5.t1 = _context5.sent;\n            return _context5.abrupt(\"return\", _context5.t0.parse.call(_context5.t0, _context5.t1));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function readJSON(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/* Import Custom Selectors from CSS File\n/* ========================================================================== */\n\n\nfunction exportCustomSelectorsToCssFile(_x, _x2) {\n  return _exportCustomSelectorsToCssFile.apply(this, arguments);\n}\n/* Import Custom Selectors from JSON file\n/* ========================================================================== */\n\n\nfunction _exportCustomSelectorsToCssFile() {\n  _exportCustomSelectorsToCssFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(to, customSelectors) {\n    var cssContent, css;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            cssContent = Object.keys(customSelectors).reduce(function (cssLines, name) {\n              cssLines.push(\"@custom-selector \".concat(name, \" \").concat(customSelectors[name], \";\"));\n              return cssLines;\n            }, []).join('\\n');\n            css = \"\".concat(cssContent, \"\\n\");\n            _context6.next = 4;\n            return writeFile(to, css);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _exportCustomSelectorsToCssFile.apply(this, arguments);\n}\n\nfunction exportCustomSelectorsToJsonFile(_x3, _x4) {\n  return _exportCustomSelectorsToJsonFile.apply(this, arguments);\n}\n/* Import Custom Selectors from Common JS file\n/* ========================================================================== */\n\n\nfunction _exportCustomSelectorsToJsonFile() {\n  _exportCustomSelectorsToJsonFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(to, customSelectors) {\n    var jsonContent, json;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            jsonContent = JSON.stringify({\n              'custom-selectors': customSelectors\n            }, null, '  ');\n            json = \"\".concat(jsonContent, \"\\n\");\n            _context7.next = 4;\n            return writeFile(to, json);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _exportCustomSelectorsToJsonFile.apply(this, arguments);\n}\n\nfunction exportCustomSelectorsToCjsFile(_x5, _x6) {\n  return _exportCustomSelectorsToCjsFile.apply(this, arguments);\n}\n/* Import Custom Selectors from Module JS file\n/* ========================================================================== */\n\n\nfunction _exportCustomSelectorsToCjsFile() {\n  _exportCustomSelectorsToCjsFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(to, customSelectors) {\n    var jsContents, js;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            jsContents = Object.keys(customSelectors).reduce(function (jsLines, name) {\n              jsLines.push(\"\\t\\t'\".concat(escapeForJS(name), \"': '\").concat(escapeForJS(customSelectors[name]), \"'\"));\n              return jsLines;\n            }, []).join(',\\n');\n            js = \"module.exports = {\\n\\tcustomSelectors: {\\n\".concat(jsContents, \"\\n\\t}\\n};\\n\");\n            _context8.next = 4;\n            return writeFile(to, js);\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _exportCustomSelectorsToCjsFile.apply(this, arguments);\n}\n\nfunction exportCustomSelectorsToMjsFile(_x7, _x8) {\n  return _exportCustomSelectorsToMjsFile.apply(this, arguments);\n}\n/* Export Custom Selectors to Destinations\n/* ========================================================================== */\n\n\nfunction _exportCustomSelectorsToMjsFile() {\n  _exportCustomSelectorsToMjsFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(to, customSelectors) {\n    var mjsContents, mjs;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            mjsContents = Object.keys(customSelectors).reduce(function (mjsLines, name) {\n              mjsLines.push(\"\\t'\".concat(escapeForJS(name), \"': '\").concat(escapeForJS(customSelectors[name]), \"'\"));\n              return mjsLines;\n            }, []).join(',\\n');\n            mjs = \"export const customSelectors = {\\n\".concat(mjsContents, \"\\n};\\n\");\n            _context9.next = 4;\n            return writeFile(to, mjs);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _exportCustomSelectorsToMjsFile.apply(this, arguments);\n}\n\nfunction exportCustomSelectorsToDestinations(customSelectors, destinations) {\n  return Promise.all(destinations.map( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(destination) {\n      var opts, toJSON, to, type, customSelectorsJSON;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!(destination instanceof Function)) {\n                _context10.next = 5;\n                break;\n              }\n\n              _context10.next = 3;\n              return destination(defaultCustomSelectorsToJSON(customSelectors));\n\n            case 3:\n              _context10.next = 30;\n              break;\n\n            case 5:\n              // read the destination as an object\n              opts = destination === Object(destination) ? destination : {\n                to: String(destination)\n              }; // transformer for custom selectors into a JSON-compatible object\n\n              toJSON = opts.toJSON || defaultCustomSelectorsToJSON;\n\n              if (!('customSelectors' in opts)) {\n                _context10.next = 11;\n                break;\n              }\n\n              // write directly to an object as customSelectors\n              opts.customSelectors = toJSON(customSelectors);\n              _context10.next = 30;\n              break;\n\n            case 11:\n              if (!('custom-selectors' in opts)) {\n                _context10.next = 15;\n                break;\n              }\n\n              // write directly to an object as custom-selectors\n              opts['custom-selectors'] = toJSON(customSelectors);\n              _context10.next = 30;\n              break;\n\n            case 15:\n              // destination pathname\n              to = String(opts.to || ''); // type of file being written to\n\n              type = (opts.type || _path.default.extname(opts.to).slice(1)).toLowerCase(); // transformed custom selectors\n\n              customSelectorsJSON = toJSON(customSelectors);\n\n              if (!(type === 'css')) {\n                _context10.next = 21;\n                break;\n              }\n\n              _context10.next = 21;\n              return exportCustomSelectorsToCssFile(to, customSelectorsJSON);\n\n            case 21:\n              if (!(type === 'js')) {\n                _context10.next = 24;\n                break;\n              }\n\n              _context10.next = 24;\n              return exportCustomSelectorsToCjsFile(to, customSelectorsJSON);\n\n            case 24:\n              if (!(type === 'json')) {\n                _context10.next = 27;\n                break;\n              }\n\n              _context10.next = 27;\n              return exportCustomSelectorsToJsonFile(to, customSelectorsJSON);\n\n            case 27:\n              if (!(type === 'mjs')) {\n                _context10.next = 30;\n                break;\n              }\n\n              _context10.next = 30;\n              return exportCustomSelectorsToMjsFile(to, customSelectorsJSON);\n\n            case 30:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x9) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nvar defaultCustomSelectorsToJSON = function (customSelectors) {\n  return Object.keys(customSelectors).reduce(function (customSelectorsJSON, key) {\n    customSelectorsJSON[key] = String(customSelectors[key]);\n    return customSelectorsJSON;\n  }, {});\n};\n\nvar writeFile = function (to, text) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.writeFile(to, text, function (error) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\nvar escapeForJS = function (string) {\n  return string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n};\n\nvar index = _postcss.default.plugin('postcss-custom-selectors', function (opts) {\n  // whether to preserve custom selectors and rules using them\n  var preserve = Boolean(Object(opts).preserve); // sources to import custom selectors from\n\n  var importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom selectors to\n\n  var exportTo = [].concat(Object(opts).exportTo || []); // promise any custom selectors are imported\n\n  var customSelectorsPromise = importCustomSelectorsFromSources(importFrom);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(root) {\n      var customProperties;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.t0 = Object;\n              _context11.next = 3;\n              return customSelectorsPromise;\n\n            case 3:\n              _context11.t1 = _context11.sent;\n              _context11.t2 = getCustomSelectors(root, {\n                preserve\n              });\n              customProperties = _context11.t0.assign.call(_context11.t0, _context11.t1, _context11.t2);\n              _context11.next = 8;\n              return exportCustomSelectorsToDestinations(customProperties, exportTo);\n\n            case 8:\n              transformRules(root, customProperties, {\n                preserve\n              });\n\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\n\nvar _default = index;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"a93b65e878d4f1d9c499bf7f18330140","cacheData":{"env":{}}}