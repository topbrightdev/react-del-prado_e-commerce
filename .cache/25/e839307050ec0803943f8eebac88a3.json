{"id":"../node_modules/inquirer/lib/ui/prompt.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/package.json","includedInParent":true,"mtime":1594570878526},{"name":"lodash","loc":{"line":2,"column":16},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/lodash/lodash.js"},{"name":"rxjs","loc":{"line":3,"column":41},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/index.js"},{"name":"rxjs/operators","loc":{"line":4,"column":53},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/operators/index.js"},{"name":"run-async","loc":{"line":5,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/run-async/index.js"},{"name":"../utils/utils","loc":{"line":6,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/utils.js"},{"name":"./baseUI","loc":{"line":7,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/baseUI.js"}],"generated":{"js":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _ = require('lodash');\n\nvar {\n  defer,\n  empty,\n  from,\n  of\n} = require('rxjs');\n\nvar {\n  concatMap,\n  filter,\n  publish,\n  reduce\n} = require('rxjs/operators');\n\nvar runAsync = require('run-async');\n\nvar utils = require('../utils/utils');\n\nvar Base = require('./baseUI');\n/**\n * Base interface class other can inherits from\n */\n\n\nvar PromptUI = /*#__PURE__*/function (_Base) {\n  _inherits(PromptUI, _Base);\n\n  var _super = _createSuper(PromptUI);\n\n  function PromptUI(prompts, opt) {\n    var _this;\n\n    _classCallCheck(this, PromptUI);\n\n    _this = _super.call(this, opt);\n    _this.prompts = prompts;\n    return _this;\n  }\n\n  _createClass(PromptUI, [{\n    key: \"run\",\n    value: function run(questions) {\n      var _this2 = this;\n\n      // Keep global reference to the answers\n      this.answers = {}; // Make sure questions is an array.\n\n      if (_.isPlainObject(questions)) {\n        questions = [questions];\n      } // Create an observable, unless we received one as parameter.\n      // Note: As this is a public interface, we cannot do an instanceof check as we won't\n      // be using the exact same object in memory.\n\n\n      var obs = _.isArray(questions) ? from(questions) : questions;\n      this.process = obs.pipe(concatMap(this.processQuestion.bind(this)), publish() // Creates a hot Observable. It prevents duplicating prompts.\n      );\n      this.process.connect();\n      return this.process.pipe(reduce(function (answers, answer) {\n        _.set(_this2.answers, answer.name, answer.answer);\n\n        return _this2.answers;\n      }, {})).toPromise(Promise).then(this.onCompletion.bind(this));\n    }\n    /**\n     * Once all prompt are over\n     */\n\n  }, {\n    key: \"onCompletion\",\n    value: function onCompletion() {\n      this.close();\n      return this.answers;\n    }\n  }, {\n    key: \"processQuestion\",\n    value: function processQuestion(question) {\n      var _this3 = this;\n\n      question = _.clone(question);\n      return defer(function () {\n        var obs = of(question);\n        return obs.pipe(concatMap(_this3.setDefaultType.bind(_this3)), concatMap(_this3.filterIfRunnable.bind(_this3)), concatMap(function () {\n          return utils.fetchAsyncQuestionProperty(question, 'message', _this3.answers);\n        }), concatMap(function () {\n          return utils.fetchAsyncQuestionProperty(question, 'default', _this3.answers);\n        }), concatMap(function () {\n          return utils.fetchAsyncQuestionProperty(question, 'choices', _this3.answers);\n        }), concatMap(_this3.fetchAnswer.bind(_this3)));\n      });\n    }\n  }, {\n    key: \"fetchAnswer\",\n    value: function fetchAnswer(question) {\n      var _this4 = this;\n\n      var Prompt = this.prompts[question.type];\n      this.activePrompt = new Prompt(question, this.rl, this.answers);\n      return defer(function () {\n        return from(_this4.activePrompt.run().then(function (answer) {\n          return {\n            name: question.name,\n            answer: answer\n          };\n        }));\n      });\n    }\n  }, {\n    key: \"setDefaultType\",\n    value: function setDefaultType(question) {\n      // Default type to input\n      if (!this.prompts[question.type]) {\n        question.type = 'input';\n      }\n\n      return defer(function () {\n        return of(question);\n      });\n    }\n  }, {\n    key: \"filterIfRunnable\",\n    value: function filterIfRunnable(question) {\n      if (question.when === false) {\n        return empty();\n      }\n\n      if (!_.isFunction(question.when)) {\n        return of(question);\n      }\n\n      var answers = this.answers;\n      return defer(function () {\n        return from(runAsync(question.when)(answers).then(function (shouldRun) {\n          if (shouldRun) {\n            return question;\n          }\n        })).pipe(filter(function (val) {\n          return val != null;\n        }));\n      });\n    }\n  }]);\n\n  return PromptUI;\n}(Base);\n\nmodule.exports = PromptUI;"},"sourceMaps":null,"error":null,"hash":"2e94832e761db20b22b73b59789dcf70","cacheData":{"env":{}}}