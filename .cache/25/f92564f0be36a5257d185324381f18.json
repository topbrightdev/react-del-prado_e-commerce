{"id":"../node_modules/postcss-initial/lib/rules-fabric.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-initial/package.json","includedInParent":true,"mtime":1594570879098},{"name":"lodash.template","loc":{"line":1,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-initial/lib/rules-fabric.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/lodash.template/index.js"},{"name":"./decls.json","loc":{"line":2,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-initial/lib/rules-fabric.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-initial/lib/decls.json"}],"generated":{"js":"var template = require('lodash.template');\nvar decls =  require('./decls.json');\n\n/*\n  Rules legend:\n   - combined - if rule is combined it will be rendered with template\n   - combined and basic rules are present in basic reset\n   - combined, basic and inherited rules are present in full reset\n*/\n\nfunction _getRulesMap(inputDecls) {\n  return inputDecls\n    .filter(function (decl) {\n      return !decl.combined;\n    })\n    .reduce(function (map, decl) {\n      map[decl.prop.replace(/\\-/g, '')] = decl.initial;\n      return map;\n    }, {});\n}\n\nfunction _compileDecls(inputDecls) {\n  var templateVars = _getRulesMap(inputDecls);\n  return inputDecls.map(function (decl) {\n    if (decl.combined && decl.initial) {\n      var t = template(decl.initial.replace(/\\-/g, ''));\n      decl.initial = t(templateVars);\n    }\n    return decl;\n  });\n}\n\nfunction _getRequirements(inputDecls) {\n  return inputDecls.reduce(function (map, decl) {\n    if (!decl.contains) return map;\n    return decl.contains.reduce(function (mapInner, dependensy) {\n      mapInner[dependensy] = decl;\n      return mapInner;\n    }, map);\n  }, {});\n}\n\nfunction _expandContainments(inputDecls) {\n  var requiredMap = _getRequirements(inputDecls);\n  return inputDecls\n  .filter(function (decl) {\n    return !decl.contains;\n  }).map(function (decl) {\n    var dependensy = requiredMap[decl.prop];\n    if (dependensy) {\n      decl.requiredBy = dependensy.prop;\n      decl.basic = decl.basic || dependensy.basic;\n      decl.inherited = decl.inherited || dependensy.inherited;\n    }\n    return decl;\n  });\n}\n\nvar compiledDecls = _expandContainments(_compileDecls(decls));\n\nfunction _clearDecls(rules, value) {\n  return rules.map(function (rule) {\n    return {\n      prop:  rule.prop,\n      value: value.replace(/initial/g, rule.initial)\n    };\n  });\n}\n\nfunction _allDecls(onlyInherited) {\n  return compiledDecls.filter(function (decl) {\n    var allowed = decl.combined || decl.basic;\n    if (onlyInherited) return allowed && decl.inherited;\n    return allowed;\n  });\n}\n\nfunction _concreteDecl(declName) {\n  return compiledDecls.filter(function (decl) {\n    return declName === decl.prop || declName === decl.requiredBy;\n  });\n}\n\nfunction makeFallbackFunction(onlyInherited) {\n  return function (declName, declValue) {\n    var result;\n    if (declName === 'all') {\n      result = _allDecls(onlyInherited);\n    } else {\n      result = _concreteDecl(declName);\n    }\n    return _clearDecls(result, declValue);\n  };\n}\n\nmodule.exports = makeFallbackFunction;\n"},"sourceMaps":null,"error":null,"hash":"3b05ec6fe38ea729070be9094e0022c1","cacheData":{"env":{}}}