{"id":"../node_modules/move-concurrently/move.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/package.json","includedInParent":true,"mtime":1594306880258},{"name":"fs","loc":{"line":4,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"rimraf","loc":{"line":5,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rimraf/rimraf.js"},{"name":"aproba","loc":{"line":6,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/aproba/index.js"},{"name":"copy-concurrently","loc":{"line":7,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/copy-concurrently/copy.js"},{"name":"run-queue","loc":{"line":8,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/run-queue/queue.js"},{"name":"util","loc":{"line":9,"column":38},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/move-concurrently/move.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"}],"generated":{"js":"var global = arguments[3];\n'use strict'\nmodule.exports = move\n\nvar nodeFs = require('fs')\nvar rimraf = require('rimraf')\nvar validate = require('aproba')\nvar copy = require('copy-concurrently')\nvar RunQueue = require('run-queue')\nvar extend = Object.assign || require('util')._extend\n\nfunction promisify (Promise, fn) {\n  return function () {\n    var args = [].slice.call(arguments)\n    return new Promise(function (resolve, reject) {\n      return fn.apply(null, args.concat(function (err, value) {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      }))\n    })\n  }\n}\n\nfunction move (from, to, opts) {\n  validate('SSO|SS', arguments)\n  opts = extend({}, opts || {})\n\n  var Promise = opts.Promise || global.Promise\n  var fs = opts.fs || nodeFs\n  var rimrafAsync = promisify(Promise, rimraf)\n  var renameAsync = promisify(Promise, fs.rename)\n\n  opts.top = from\n\n  var queue = new RunQueue({\n    maxConcurrency: opts.maxConcurrency,\n    Promise: Promise\n  })\n  opts.queue = queue\n  opts.recurseWith = rename\n\n  queue.add(0, rename, [from, to, opts])\n\n  return queue.run().then(function () {\n    return remove(from)\n  }, function (err) {\n    // if the target already exists don't clobber it\n    if (err.code === 'EEXIST' || err.code === 'EPERM') {\n      return passThroughError()\n    } else {\n      return remove(to).then(passThroughError, passThroughError)\n    }\n    function passThroughError () {\n      return Promise.reject(err)\n    }\n  })\n\n  function remove (target) {\n    var opts = {\n      unlink: fs.unlink,\n      chmod: fs.chmod,\n      stat: fs.stat,\n      lstat: fs.lstat,\n      rmdir: fs.rmdir,\n      readdir: fs.readdir,\n      glob: false\n    }\n    return rimrafAsync(target, opts)\n  }\n\n  function rename (from, to, opts, done) {\n    return renameAsync(from, to).catch(function (err) {\n      if (err.code !== 'EXDEV') {\n        return Promise.reject(err)\n      } else {\n        return remove(to).then(function () {\n          return copy.item(from, to, opts)\n        })\n      }\n    })\n  }\n}\n"},"sourceMaps":null,"error":null,"hash":"be166f8ce6f5cb5886d33816be4f51de","cacheData":{"env":{}}}