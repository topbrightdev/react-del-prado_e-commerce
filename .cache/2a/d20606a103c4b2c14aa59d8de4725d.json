{"id":"../node_modules/postcss-font-variant/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-font-variant/package.json","includedInParent":true,"mtime":1594306880538},{"name":"postcss","loc":{"line":1,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-font-variant/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-font-variant/node_modules/postcss/lib/postcss.js"}],"generated":{"js":"var postcss = require(\"postcss\");\n\n/**\n * font variant convertion map\n *\n * @type {Object}\n */\nvar fontVariantProperties = {\n  \"font-variant-ligatures\": {\n    \"common-ligatures\": \"\\\"liga\\\", \\\"clig\\\"\",\n    \"no-common-ligatures\": \"\\\"liga\\\", \\\"clig off\\\"\",\n    \"discretionary-ligatures\": \"\\\"dlig\\\"\",\n    \"no-discretionary-ligatures\": \"\\\"dlig\\\" off\",\n    \"historical-ligatures\": \"\\\"hlig\\\"\",\n    \"no-historical-ligatures\": \"\\\"hlig\\\" off\",\n    contextual: \"\\\"calt\\\"\",\n    \"no-contextual\": \"\\\"calt\\\" off\"\n  },\n\n  \"font-variant-position\": {\n    sub: \"\\\"subs\\\"\",\n    \"super\": \"\\\"sups\\\"\",\n    normal: \"\\\"subs\\\" off, \\\"sups\\\" off\"\n  },\n\n  \"font-variant-caps\": {\n    \"small-caps\": \"\\\"c2sc\\\"\",\n    \"all-small-caps\": \"\\\"smcp\\\", \\\"c2sc\\\"\",\n    \"petite-caps\": \"\\\"pcap\\\"\",\n    \"all-petite-caps\": \"\\\"pcap\\\", \\\"c2pc\\\"\",\n    unicase: \"\\\"unic\\\"\",\n    \"titling-caps\": \"\\\"titl\\\"\"\n  },\n\n  \"font-variant-numeric\": {\n    \"lining-nums\": \"\\\"lnum\\\"\",\n    \"oldstyle-nums\": \"\\\"onum\\\"\",\n    \"proportional-nums\": \"\\\"pnum\\\"\",\n    \"tabular-nums\": \"\\\"tnum\\\"\",\n    \"diagonal-fractions\": \"\\\"frac\\\"\",\n    \"stacked-fractions\": \"\\\"afrc\\\"\",\n    ordinal: \"\\\"ordn\\\"\",\n    \"slashed-zero\": \"\\\"zero\\\"\"\n  },\n\n  \"font-kerning\": {\n    normal: \"\\\"kern\\\"\",\n    none: \"\\\"kern\\\" off\"\n  },\n\n  \"font-variant\": {\n    normal: \"normal\",\n    inherit: \"inherit\"\n  }\n}\n\n// The `font-variant` property is a shorthand for all the others.\nfor (var prop in fontVariantProperties) {\n  var keys = fontVariantProperties[prop]\n  for (var key in keys) {\n    if (!(key in fontVariantProperties[\"font-variant\"])) {\n      fontVariantProperties[\"font-variant\"][key] = keys[key]\n    }\n  }\n}\n\n// Find font-feature-settings declaration before given declaration,\n// create if does not exist\nfunction getFontFeatureSettingsPrevTo(decl) {\n  var fontFeatureSettings = null;\n  decl.parent.walkDecls(function(decl) {\n    if (decl.prop === \"font-feature-settings\") {\n      fontFeatureSettings = decl;\n    }\n  })\n\n  if (fontFeatureSettings === null) {\n    fontFeatureSettings = decl.clone()\n    fontFeatureSettings.prop = \"font-feature-settings\"\n    fontFeatureSettings.value = \"\"\n    decl.parent.insertBefore(decl, fontFeatureSettings)\n  }\n  return fontFeatureSettings\n}\n\n/**\n * Expose the font-variant plugin.\n */\nmodule.exports = postcss.plugin(\"postcss-font-variant\", function() {\n  return function(styles) {\n    styles.walkRules(function(rule) {\n      var fontFeatureSettings = null\n      // read custom media queries\n      rule.walkDecls(function(decl) {\n        if (!fontVariantProperties[decl.prop]) {\n          return null\n        }\n\n        var newValue = decl.value\n        if (decl.prop === \"font-variant\") {\n          newValue = decl.value.split(/\\s+/g).map(function(val) {\n            return fontVariantProperties[\"font-variant\"][val]\n          }).join(\", \")\n        }\n        else if (fontVariantProperties[decl.prop][decl.value]) {\n          newValue = fontVariantProperties[decl.prop][decl.value]\n        }\n\n        if (fontFeatureSettings === null) {\n          fontFeatureSettings = getFontFeatureSettingsPrevTo(decl);\n        }\n        if (fontFeatureSettings.value && fontFeatureSettings.value !== newValue) {\n          fontFeatureSettings.value += \", \" + newValue;\n        }\n        else {\n          fontFeatureSettings.value = newValue;\n        }\n      })\n    })\n  }\n})\n"},"sourceMaps":null,"error":null,"hash":"2cc5a750f1f57a87efc162b1481211fb","cacheData":{"env":{}}}