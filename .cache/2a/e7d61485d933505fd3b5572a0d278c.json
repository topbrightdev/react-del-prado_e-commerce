{"id":"../node_modules/react-dev-utils/browsersHelper.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106},{"name":"browserslist","loc":{"line":9,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/browserslist/index.js"},{"name":"chalk","loc":{"line":10,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"os","loc":{"line":11,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/os-browserify/browser.js"},{"name":"inquirer","loc":{"line":12,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js"},{"name":"pkg-up","loc":{"line":13,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/pkg-up/index.js"},{"name":"fs","loc":{"line":14,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar browserslist = require('browserslist');\n\nvar chalk = require('chalk');\n\nvar os = require('os');\n\nvar inquirer = require('inquirer');\n\nvar pkgUp = require('pkg-up');\n\nvar fs = require('fs');\n\nvar defaultBrowsers = ['>0.2%', 'not dead', 'not ie <= 11', 'not op_mini all'];\n\nfunction shouldSetBrowsers(isInteractive) {\n  if (!isInteractive) {\n    return Promise.resolve(true);\n  }\n\n  var question = {\n    type: 'confirm',\n    name: 'shouldSetBrowsers',\n    message: chalk.yellow(\"We're unable to detect target browsers.\") + \"\\n\\nWould you like to add the defaults to your \".concat(chalk.bold('package.json'), \"?\"),\n    default: true\n  };\n  return inquirer.prompt(question).then(function (answer) {\n    return answer.shouldSetBrowsers;\n  });\n}\n\nfunction checkBrowsers(dir, isInteractive) {\n  var retry = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var current = browserslist.findConfig(dir);\n\n  if (current != null) {\n    return Promise.resolve(current);\n  }\n\n  if (!retry) {\n    return Promise.reject(new Error(chalk.red('As of react-scripts >=2 you must specify targeted browsers.') + os.EOL + \"Please add a \".concat(chalk.underline('browserslist'), \" key to your \").concat(chalk.bold('package.json'), \".\")));\n  }\n\n  return shouldSetBrowsers(isInteractive).then(function (shouldSetBrowsers) {\n    if (!shouldSetBrowsers) {\n      return checkBrowsers(dir, isInteractive, false);\n    }\n\n    return pkgUp(dir).then(function (filePath) {\n      if (filePath == null) {\n        return Promise.reject();\n      }\n\n      var pkg = JSON.parse(fs.readFileSync(filePath));\n      pkg['browserslist'] = defaultBrowsers;\n      fs.writeFileSync(filePath, JSON.stringify(pkg, null, 2) + os.EOL);\n      browserslist.clearCaches();\n      console.log();\n      console.log(\"\".concat(chalk.green('Set target browsers:'), \" \").concat(chalk.cyan(defaultBrowsers.join(', '))));\n      console.log();\n    }) // Swallow any error\n    .catch(function () {}).then(function () {\n      return checkBrowsers(dir, isInteractive, false);\n    });\n  });\n}\n\nmodule.exports = {\n  defaultBrowsers,\n  checkBrowsers\n};"},"sourceMaps":null,"error":null,"hash":"29b0d1a9c4b8bffe5f829b52fa7fb517","cacheData":{"env":{}}}