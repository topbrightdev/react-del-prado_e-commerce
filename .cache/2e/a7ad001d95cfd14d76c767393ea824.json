{"id":"../node_modules/fs-extra/lib/move-sync/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/package.json","includedInParent":true,"mtime":1594306880018},{"name":"graceful-fs","loc":{"line":3,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/graceful-fs/graceful-fs.js"},{"name":"path","loc":{"line":4,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"../copy-sync","loc":{"line":5,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/copy-sync/index.js"},{"name":"../remove","loc":{"line":6,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/remove/index.js"},{"name":"../mkdirs","loc":{"line":7,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/mkdirs/index.js"},{"name":"../util/buffer","loc":{"line":8,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/move-sync/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fs-extra/lib/util/buffer.js"}],"generated":{"js":"'use strict';\n\nvar fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar copySync = require('../copy-sync').copySync;\n\nvar removeSync = require('../remove').removeSync;\n\nvar mkdirpSync = require('../mkdirs').mkdirsSync;\n\nvar buffer = require('../util/buffer');\n\nfunction moveSync(src, dest, options) {\n  options = options || {};\n  var overwrite = options.overwrite || options.clobber || false;\n  src = path.resolve(src);\n  dest = path.resolve(dest);\n  if (src === dest) return fs.accessSync(src);\n  if (isSrcSubdir(src, dest)) throw new Error(\"Cannot move '\".concat(src, \"' into itself '\").concat(dest, \"'.\"));\n  mkdirpSync(path.dirname(dest));\n  tryRenameSync();\n\n  function tryRenameSync() {\n    if (overwrite) {\n      try {\n        return fs.renameSync(src, dest);\n      } catch (err) {\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST' || err.code === 'EPERM') {\n          removeSync(dest);\n          options.overwrite = false; // just overwriteed it, no need to do it again\n\n          return moveSync(src, dest, options);\n        }\n\n        if (err.code !== 'EXDEV') throw err;\n        return moveSyncAcrossDevice(src, dest, overwrite);\n      }\n    } else {\n      try {\n        fs.linkSync(src, dest);\n        return fs.unlinkSync(src);\n      } catch (err) {\n        if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n          return moveSyncAcrossDevice(src, dest, overwrite);\n        }\n\n        throw err;\n      }\n    }\n  }\n}\n\nfunction moveSyncAcrossDevice(src, dest, overwrite) {\n  var stat = fs.statSync(src);\n\n  if (stat.isDirectory()) {\n    return moveDirSyncAcrossDevice(src, dest, overwrite);\n  } else {\n    return moveFileSyncAcrossDevice(src, dest, overwrite);\n  }\n}\n\nfunction moveFileSyncAcrossDevice(src, dest, overwrite) {\n  var BUF_LENGTH = 64 * 1024;\n\n  var _buff = buffer(BUF_LENGTH);\n\n  var flags = overwrite ? 'w' : 'wx';\n  var fdr = fs.openSync(src, 'r');\n  var stat = fs.fstatSync(fdr);\n  var fdw = fs.openSync(dest, flags, stat.mode);\n  var pos = 0;\n\n  while (pos < stat.size) {\n    var bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n  return fs.unlinkSync(src);\n}\n\nfunction moveDirSyncAcrossDevice(src, dest, overwrite) {\n  var options = {\n    overwrite: false\n  };\n\n  if (overwrite) {\n    removeSync(dest);\n    tryCopySync();\n  } else {\n    tryCopySync();\n  }\n\n  function tryCopySync() {\n    copySync(src, dest, options);\n    return removeSync(src);\n  }\n} // return true if dest is a subdir of src, otherwise false.\n// extract dest base dir and check if that is the same as src basename\n\n\nfunction isSrcSubdir(src, dest) {\n  try {\n    return fs.statSync(src).isDirectory() && src !== dest && dest.indexOf(src) > -1 && dest.split(path.dirname(src) + path.sep)[1].split(path.sep)[0] === path.basename(src);\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = {\n  moveSync\n};"},"sourceMaps":null,"error":null,"hash":"ecb0f439341361f7e898ab1c356f0a68","cacheData":{"env":{}}}