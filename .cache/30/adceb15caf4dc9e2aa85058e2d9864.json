{"id":"../node_modules/websocket-extensions/lib/pipeline/cell.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-extensions/package.json","includedInParent":true,"mtime":1594570878394},{"name":"./functor","loc":{"line":3,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-extensions/lib/pipeline/cell.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-extensions/lib/pipeline/functor.js"},{"name":"./pledge","loc":{"line":4,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-extensions/lib/pipeline/cell.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-extensions/lib/pipeline/pledge.js"}],"generated":{"js":"'use strict';\n\nvar Functor = require('./functor'),\n    Pledge = require('./pledge');\n\nvar Cell = function (tuple) {\n  this._ext = tuple[0];\n  this._session = tuple[1];\n  this._functors = {\n    incoming: new Functor(this._session, 'processIncomingMessage'),\n    outgoing: new Functor(this._session, 'processOutgoingMessage')\n  };\n};\n\nCell.prototype.pending = function (direction) {\n  var functor = this._functors[direction];\n  if (!functor._stopped) functor.pending += 1;\n};\n\nCell.prototype.incoming = function (error, message, callback, context) {\n  this._exec('incoming', error, message, callback, context);\n};\n\nCell.prototype.outgoing = function (error, message, callback, context) {\n  this._exec('outgoing', error, message, callback, context);\n};\n\nCell.prototype.close = function () {\n  this._closed = this._closed || new Pledge();\n\n  this._doClose();\n\n  return this._closed;\n};\n\nCell.prototype._exec = function (direction, error, message, callback, context) {\n  this._functors[direction].call(error, message, function (err, msg) {\n    if (err) err.message = this._ext.name + ': ' + err.message;\n    callback.call(context, err, msg);\n\n    this._doClose();\n  }, this);\n};\n\nCell.prototype._doClose = function () {\n  var fin = this._functors.incoming,\n      fout = this._functors.outgoing;\n  if (!this._closed || fin.pending + fout.pending !== 0) return;\n  if (this._session) this._session.close();\n  this._session = null;\n\n  this._closed.done();\n};\n\nmodule.exports = Cell;"},"sourceMaps":null,"error":null,"hash":"a1b75ff7aec62ad73ba14f374fcf57c1","cacheData":{"env":{}}}