{"id":"../node_modules/ajv-keywords/keywords/regexp.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/package.json","includedInParent":true,"mtime":1594717993842},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/ajv-keywords/package.json","includedInParent":true,"mtime":1594570879586}],"generated":{"js":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'string',\n    inline: function (it, keyword, schema) {\n      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';\n\n      function getRegExp() {\n        try {\n          if (typeof schema == 'object')\n            return new RegExp(schema.pattern, schema.flags);\n\n          var rx = schema.match(/^\\/(.*)\\/([gimy]*)$/);\n          if (rx) return new RegExp(rx[1], rx[2]);\n          throw new Error('cannot parse string into RegExp');\n        } catch(e) {\n          console.error('regular expression', schema, 'is invalid');\n          throw e;\n        }\n      }\n    },\n    metaSchema: {\n      type: ['string', 'object'],\n      properties: {\n        pattern: { type: 'string' },\n        flags: { type: 'string' }\n      },\n      required: ['pattern'],\n      additionalProperties: false\n    }\n  };\n\n  ajv.addKeyword('regexp', defFunc.definition);\n  return ajv;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ajv-keywords/keywords/regexp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../node_modules/ajv-keywords/keywords/regexp.js":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'string',\n    inline: function (it, keyword, schema) {\n      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';\n\n      function getRegExp() {\n        try {\n          if (typeof schema == 'object')\n            return new RegExp(schema.pattern, schema.flags);\n\n          var rx = schema.match(/^\\/(.*)\\/([gimy]*)$/);\n          if (rx) return new RegExp(rx[1], rx[2]);\n          throw new Error('cannot parse string into RegExp');\n        } catch(e) {\n          console.error('regular expression', schema, 'is invalid');\n          throw e;\n        }\n      }\n    },\n    metaSchema: {\n      type: ['string', 'object'],\n      properties: {\n        pattern: { type: 'string' },\n        flags: { type: 'string' }\n      },\n      required: ['pattern'],\n      additionalProperties: false\n    }\n  };\n\n  ajv.addKeyword('regexp', defFunc.definition);\n  return ajv;\n};\n"},"lineCount":37}},"error":null,"hash":"b7f771f2e472becffceb76ccb85602e5","cacheData":{"env":{}}}