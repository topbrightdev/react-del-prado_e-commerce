{"id":"../node_modules/webpack/node_modules/@webassemblyjs/helper-wasm-section/esm/resize.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/helper-wasm-section/package.json","includedInParent":true,"mtime":1594578778149},{"name":"@webassemblyjs/wasm-gen","loc":{"line":1,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/helper-wasm-section/esm/resize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/wasm-gen/esm/index.js"},{"name":"@webassemblyjs/ast","loc":{"line":2,"column":59},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/helper-wasm-section/esm/resize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/ast/esm/index.js"},{"name":"@webassemblyjs/helper-buffer","loc":{"line":3,"column":38},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/helper-wasm-section/esm/resize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/helper-buffer/esm/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resizeSectionByteSize = resizeSectionByteSize;\nexports.resizeSectionVecSize = resizeSectionVecSize;\n\nvar _wasmGen = require(\"@webassemblyjs/wasm-gen\");\n\nvar _ast = require(\"@webassemblyjs/ast\");\n\nvar _helperBuffer = require(\"@webassemblyjs/helper-buffer\");\n\nfunction resizeSectionByteSize(ast, uint8Buffer, section, deltaBytes) {\n  var sectionMetadata = (0, _ast.getSectionMetadata)(ast, section);\n\n  if (typeof sectionMetadata === \"undefined\") {\n    throw new Error(\"Section metadata not found\");\n  }\n\n  if (typeof sectionMetadata.size.loc === \"undefined\") {\n    throw new Error(\"SectionMetadata \" + section + \" has no loc\");\n  } // keep old node location to be overriden\n\n\n  var start = sectionMetadata.size.loc.start.column;\n  var end = sectionMetadata.size.loc.end.column;\n  var newSectionSize = sectionMetadata.size.value + deltaBytes;\n  var newBytes = (0, _wasmGen.encodeU32)(newSectionSize);\n  /**\n   * update AST\n   */\n\n  sectionMetadata.size.value = newSectionSize;\n  var oldu32EncodedLen = end - start;\n  var newu32EncodedLen = newBytes.length; // the new u32 has a different encoded length\n\n  if (newu32EncodedLen !== oldu32EncodedLen) {\n    var deltaInSizeEncoding = newu32EncodedLen - oldu32EncodedLen;\n    sectionMetadata.size.loc.end.column = start + newu32EncodedLen;\n    deltaBytes += deltaInSizeEncoding; // move the vec size pointer size the section size is now smaller\n\n    sectionMetadata.vectorOfSize.loc.start.column += deltaInSizeEncoding;\n    sectionMetadata.vectorOfSize.loc.end.column += deltaInSizeEncoding;\n  } // Once we hit our section every that is after needs to be shifted by the delta\n\n\n  var encounteredSection = false;\n  (0, _ast.traverse)(ast, {\n    SectionMetadata: function SectionMetadata(path) {\n      if (path.node.section === section) {\n        encounteredSection = true;\n        return;\n      }\n\n      if (encounteredSection === true) {\n        (0, _ast.shiftSection)(ast, path.node, deltaBytes);\n      }\n    }\n  });\n  return (0, _helperBuffer.overrideBytesInBuffer)(uint8Buffer, start, end, newBytes);\n}\n\nfunction resizeSectionVecSize(ast, uint8Buffer, section, deltaElements) {\n  var sectionMetadata = (0, _ast.getSectionMetadata)(ast, section);\n\n  if (typeof sectionMetadata === \"undefined\") {\n    throw new Error(\"Section metadata not found\");\n  }\n\n  if (typeof sectionMetadata.vectorOfSize.loc === \"undefined\") {\n    throw new Error(\"SectionMetadata \" + section + \" has no loc\");\n  } // Section has no vector\n\n\n  if (sectionMetadata.vectorOfSize.value === -1) {\n    return uint8Buffer;\n  } // keep old node location to be overriden\n\n\n  var start = sectionMetadata.vectorOfSize.loc.start.column;\n  var end = sectionMetadata.vectorOfSize.loc.end.column;\n  var newValue = sectionMetadata.vectorOfSize.value + deltaElements;\n  var newBytes = (0, _wasmGen.encodeU32)(newValue); // Update AST\n\n  sectionMetadata.vectorOfSize.value = newValue;\n  sectionMetadata.vectorOfSize.loc.end.column = start + newBytes.length;\n  return (0, _helperBuffer.overrideBytesInBuffer)(uint8Buffer, start, end, newBytes);\n}"},"sourceMaps":null,"error":null,"hash":"879fd8b54caf379d90238cb1a5ffc1cc","cacheData":{"env":{}}}