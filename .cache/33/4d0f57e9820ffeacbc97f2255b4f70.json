{"id":"../node_modules/rxjs/_esm5/internal/observable/forkJoin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"tslib","loc":{"line":2,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/tslib/tslib.es6.js"},{"name":"../Observable","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"../util/isArray","loc":{"line":4,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/isArray.js"},{"name":"./empty","loc":{"line":5,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/empty.js"},{"name":"../util/subscribeToResult","loc":{"line":6,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/subscribeToResult.js"},{"name":"../OuterSubscriber","loc":{"line":7,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/OuterSubscriber.js"},{"name":"../operators/map","loc":{"line":8,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/observable/forkJoin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/map.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forkJoin = forkJoin;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _Observable = require(\"../Observable\");\n\nvar _isArray = require(\"../util/isArray\");\n\nvar _empty = require(\"./empty\");\n\nvar _subscribeToResult = require(\"../util/subscribeToResult\");\n\nvar _OuterSubscriber = require(\"../OuterSubscriber\");\n\nvar _map = require(\"../operators/map\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\nfunction forkJoin() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  var resultSelector;\n\n  if (typeof sources[sources.length - 1] === 'function') {\n    resultSelector = sources.pop();\n  }\n\n  if (sources.length === 1 && (0, _isArray.isArray)(sources[0])) {\n    sources = sources[0];\n  }\n\n  if (sources.length === 0) {\n    return _empty.EMPTY;\n  }\n\n  if (resultSelector) {\n    return forkJoin(sources).pipe((0, _map.map)(function (args) {\n      return resultSelector.apply(void 0, args);\n    }));\n  }\n\n  return new _Observable.Observable(function (subscriber) {\n    return new ForkJoinSubscriber(subscriber, sources);\n  });\n}\n\nvar ForkJoinSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ForkJoinSubscriber, _super);\n\n  function ForkJoinSubscriber(destination, sources) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.sources = sources;\n    _this.completed = 0;\n    _this.haveValues = 0;\n    var len = sources.length;\n    _this.values = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      var source = sources[i];\n      var innerSubscription = (0, _subscribeToResult.subscribeToResult)(_this, source, null, i);\n\n      if (innerSubscription) {\n        _this.add(innerSubscription);\n      }\n    }\n\n    return _this;\n  }\n\n  ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.values[outerIndex] = innerValue;\n\n    if (!innerSub._hasValue) {\n      innerSub._hasValue = true;\n      this.haveValues++;\n    }\n  };\n\n  ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n    var _a = this,\n        destination = _a.destination,\n        haveValues = _a.haveValues,\n        values = _a.values;\n\n    var len = values.length;\n\n    if (!innerSub._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  };\n\n  return ForkJoinSubscriber;\n}(_OuterSubscriber.OuterSubscriber);"},"sourceMaps":null,"error":null,"hash":"5f75c567c014b303fd1cc1100ab88480","cacheData":{"env":{}}}