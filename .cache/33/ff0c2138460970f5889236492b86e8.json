{"id":"../node_modules/rxjs/_esm5/internal/operators/shareReplay.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"../ReplaySubject","loc":{"line":2,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/shareReplay.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/ReplaySubject.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareReplay = shareReplay;\n\nvar _ReplaySubject = require(\"../ReplaySubject\");\n\n/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n  if (bufferSize === void 0) {\n    bufferSize = Number.POSITIVE_INFINITY;\n  }\n\n  if (windowTime === void 0) {\n    windowTime = Number.POSITIVE_INFINITY;\n  }\n\n  return function (source) {\n    return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n  };\n}\n\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n  var subject;\n  var refCount = 0;\n  var subscription;\n  var hasError = false;\n  var isComplete = false;\n  return function shareReplayOperation(source) {\n    refCount++;\n\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new _ReplaySubject.ReplaySubject(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next: function (value) {\n          subject.next(value);\n        },\n        error: function (err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete: function () {\n          isComplete = true;\n          subject.complete();\n        }\n      });\n    }\n\n    var innerSub = subject.subscribe(this);\n    return function () {\n      refCount--;\n      innerSub.unsubscribe();\n\n      if (subscription && refCount === 0 && isComplete) {\n        subscription.unsubscribe();\n      }\n    };\n  };\n}"},"sourceMaps":null,"error":null,"hash":"dedfb26b33e9b98cbec5397595d93de2","cacheData":{"env":{}}}