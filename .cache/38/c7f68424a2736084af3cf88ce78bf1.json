{"id":"../node_modules/webpack/node_modules/readdirp/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/package.json","includedInParent":true,"mtime":1594578778153},{"name":"fs","loc":{"line":3,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"stream","loc":{"line":4,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/stream-browserify/index.js"},{"name":"path","loc":{"line":5,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"util","loc":{"line":6,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"},{"name":"picomatch","loc":{"line":7,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/picomatch/index.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/readdirp/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar fs = require('fs');\n\nvar _require = require('stream'),\n    Readable = _require.Readable;\n\nvar sysPath = require('path');\n\nvar _require2 = require('util'),\n    promisify = _require2.promisify;\n\nvar picomatch = require('picomatch');\n\nvar readdir = promisify(fs.readdir);\nvar stat = promisify(fs.stat);\nvar lstat = promisify(fs.lstat);\nvar realpath = promisify(fs.realpath);\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nvar BANG = '!';\nvar NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP']);\nvar FILE_TYPE = 'files';\nvar DIR_TYPE = 'directories';\nvar FILE_DIR_TYPE = 'files_directories';\nvar EVERYTHING_TYPE = 'all';\nvar ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nvar isNormalFlowError = function isNormalFlowError(error) {\n  return NORMAL_FLOW_ERRORS.has(error.code);\n};\n\nvar normalizeFilter = function normalizeFilter(filter) {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    var glob = picomatch(filter.trim());\n    return function (entry) {\n      return glob(entry.basename);\n    };\n  }\n\n  if (Array.isArray(filter)) {\n    var positive = [];\n    var negative = [];\n\n    var _iterator = _createForOfIteratorHelper(filter),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var trimmed = item.trim();\n\n        if (trimmed.charAt(0) === BANG) {\n          negative.push(picomatch(trimmed.slice(1)));\n        } else {\n          positive.push(picomatch(trimmed));\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return function (entry) {\n          return positive.some(function (f) {\n            return f(entry.basename);\n          }) && !negative.some(function (f) {\n            return f(entry.basename);\n          });\n        };\n      }\n\n      return function (entry) {\n        return !negative.some(function (f) {\n          return f(entry.basename);\n        });\n      };\n    }\n\n    return function (entry) {\n      return positive.some(function (f) {\n        return f(entry.basename);\n      });\n    };\n  }\n};\n\nvar ReaddirpStream = /*#__PURE__*/function (_Readable) {\n  _inherits(ReaddirpStream, _Readable);\n\n  var _super = _createSuper(ReaddirpStream);\n\n  _createClass(ReaddirpStream, null, [{\n    key: \"defaultOptions\",\n    get: function get() {\n      return {\n        root: '.',\n\n        /* eslint-disable no-unused-vars */\n        fileFilter: function fileFilter(path) {\n          return true;\n        },\n        directoryFilter: function directoryFilter(path) {\n          return true;\n        },\n\n        /* eslint-enable no-unused-vars */\n        type: FILE_TYPE,\n        lstat: false,\n        depth: 2147483648,\n        alwaysStat: false\n      };\n    }\n  }]);\n\n  function ReaddirpStream() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ReaddirpStream);\n\n    _this = _super.call(this, {\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n\n    var opts = _objectSpread(_objectSpread({}, ReaddirpStream.defaultOptions), options);\n\n    var root = opts.root,\n        type = opts.type;\n    _this._fileFilter = normalizeFilter(opts.fileFilter);\n    _this._directoryFilter = normalizeFilter(opts.directoryFilter);\n    var statMethod = opts.lstat ? lstat : stat; // Use bigint stats if it's windows and stat() supports options (node 10+).\n\n    if (process.platform === 'win32' && stat.length === 3) {\n      _this._stat = function (path) {\n        return statMethod(path, {\n          bigint: true\n        });\n      };\n    } else {\n      _this._stat = statMethod;\n    }\n\n    _this._maxDepth = opts.depth;\n    _this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    _this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    _this._wantsEverything = type === EVERYTHING_TYPE;\n    _this._root = sysPath.resolve(root);\n    _this._isDirent = 'Dirent' in fs && !opts.alwaysStat;\n    _this._statsProp = _this._isDirent ? 'dirent' : 'stats';\n    _this._rdOptions = {\n      encoding: 'utf8',\n      withFileTypes: _this._isDirent\n    }; // Launch stream with one parent, the root dir.\n\n    _this.parents = [_this._exploreDir(root, 1)];\n    _this.reading = false;\n    _this.parent = undefined;\n    return _this;\n  }\n\n  _createClass(ReaddirpStream, [{\n    key: \"_read\",\n    value: function () {\n      var _read2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(batch) {\n        var _this2 = this;\n\n        var _loop2, _ret;\n\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.reading) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                this.reading = true;\n                _context2.prev = 3;\n                _loop2 = /*#__PURE__*/regeneratorRuntime.mark(function _loop2() {\n                  var _ref, path, depth, _ref$files, files, slice, _iterator2, _step2, entry, entryType, parent;\n\n                  return regeneratorRuntime.wrap(function _loop2$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _ref = _this2.parent || {}, path = _ref.path, depth = _ref.depth, _ref$files = _ref.files, files = _ref$files === void 0 ? [] : _ref$files;\n\n                          if (!(files.length > 0)) {\n                            _context.next = 30;\n                            break;\n                          }\n\n                          slice = files.splice(0, batch).map(function (dirent) {\n                            return _this2._formatEntry(dirent, path);\n                          });\n                          _context.t0 = _createForOfIteratorHelper;\n                          _context.next = 6;\n                          return Promise.all(slice);\n\n                        case 6:\n                          _context.t1 = _context.sent;\n                          _iterator2 = (0, _context.t0)(_context.t1);\n                          _context.prev = 8;\n\n                          _iterator2.s();\n\n                        case 10:\n                          if ((_step2 = _iterator2.n()).done) {\n                            _context.next = 20;\n                            break;\n                          }\n\n                          entry = _step2.value;\n\n                          if (!_this2.destroyed) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", {\n                            v: void 0\n                          });\n\n                        case 14:\n                          _context.next = 16;\n                          return _this2._getEntryType(entry);\n\n                        case 16:\n                          entryType = _context.sent;\n\n                          if (entryType === 'directory' && _this2._directoryFilter(entry)) {\n                            if (depth <= _this2._maxDepth) {\n                              _this2.parents.push(_this2._exploreDir(entry.fullPath, depth + 1));\n                            }\n\n                            if (_this2._wantsDir) {\n                              _this2.push(entry);\n\n                              batch--;\n                            }\n                          } else if ((entryType === 'file' || _this2._includeAsFile(entry)) && _this2._fileFilter(entry)) {\n                            if (_this2._wantsFile) {\n                              _this2.push(entry);\n\n                              batch--;\n                            }\n                          }\n\n                        case 18:\n                          _context.next = 10;\n                          break;\n\n                        case 20:\n                          _context.next = 25;\n                          break;\n\n                        case 22:\n                          _context.prev = 22;\n                          _context.t2 = _context[\"catch\"](8);\n\n                          _iterator2.e(_context.t2);\n\n                        case 25:\n                          _context.prev = 25;\n\n                          _iterator2.f();\n\n                          return _context.finish(25);\n\n                        case 28:\n                          _context.next = 39;\n                          break;\n\n                        case 30:\n                          parent = _this2.parents.pop();\n\n                          if (parent) {\n                            _context.next = 34;\n                            break;\n                          }\n\n                          _this2.push(null);\n\n                          return _context.abrupt(\"return\", \"break\");\n\n                        case 34:\n                          _context.next = 36;\n                          return parent;\n\n                        case 36:\n                          _this2.parent = _context.sent;\n\n                          if (!_this2.destroyed) {\n                            _context.next = 39;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", {\n                            v: void 0\n                          });\n\n                        case 39:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop2, null, [[8, 22, 25, 28]]);\n                });\n\n              case 5:\n                if (!(!this.destroyed && batch > 0)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                return _context2.delegateYield(_loop2(), \"t0\", 7);\n\n              case 7:\n                _ret = _context2.t0;\n                _context2.t1 = _ret;\n                _context2.next = _context2.t1 === \"break\" ? 11 : 12;\n                break;\n\n              case 11:\n                return _context2.abrupt(\"break\", 16);\n\n              case 12:\n                if (!(typeof _ret === \"object\")) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _ret.v);\n\n              case 14:\n                _context2.next = 5;\n                break;\n\n              case 16:\n                _context2.next = 21;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t2 = _context2[\"catch\"](3);\n                this.destroy(_context2.t2);\n\n              case 21:\n                _context2.prev = 21;\n                this.reading = false;\n                return _context2.finish(21);\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee, this, [[3, 18, 21, 24]]);\n      }));\n\n      function _read(_x) {\n        return _read2.apply(this, arguments);\n      }\n\n      return _read;\n    }()\n  }, {\n    key: \"_exploreDir\",\n    value: function () {\n      var _exploreDir2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(path, depth) {\n        var files;\n        return regeneratorRuntime.wrap(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return readdir(path, this._rdOptions);\n\n              case 3:\n                files = _context3.sent;\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                this._onError(_context3.t0);\n\n              case 9:\n                return _context3.abrupt(\"return\", {\n                  files,\n                  depth,\n                  path\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n\n      function _exploreDir(_x2, _x3) {\n        return _exploreDir2.apply(this, arguments);\n      }\n\n      return _exploreDir;\n    }()\n  }, {\n    key: \"_formatEntry\",\n    value: function () {\n      var _formatEntry2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dirent, path) {\n        var entry, basename, fullPath;\n        return regeneratorRuntime.wrap(function _callee3$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                basename = this._isDirent ? dirent.name : dirent;\n                fullPath = sysPath.resolve(sysPath.join(path, basename));\n                entry = {\n                  path: sysPath.relative(this._root, fullPath),\n                  fullPath,\n                  basename\n                };\n\n                if (!this._isDirent) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.t0 = dirent;\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.next = 10;\n                return this._stat(fullPath);\n\n              case 10:\n                _context4.t0 = _context4.sent;\n\n              case 11:\n                entry[this._statsProp] = _context4.t0;\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t1 = _context4[\"catch\"](0);\n\n                this._onError(_context4.t1);\n\n              case 17:\n                return _context4.abrupt(\"return\", entry);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee3, this, [[0, 14]]);\n      }));\n\n      function _formatEntry(_x4, _x5) {\n        return _formatEntry2.apply(this, arguments);\n      }\n\n      return _formatEntry;\n    }()\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      if (isNormalFlowError(err) && !this.destroyed) {\n        this.emit('warn', err);\n      } else {\n        this.destroy(err);\n      }\n    }\n  }, {\n    key: \"_getEntryType\",\n    value: function () {\n      var _getEntryType2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(entry) {\n        var stats, entryRealPath, entryRealPathStats;\n        return regeneratorRuntime.wrap(function _callee4$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                // entry may be undefined, because a warning or an error were emitted\n                // and the statsProp is undefined\n                stats = entry && entry[this._statsProp];\n\n                if (stats) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 3:\n                if (!stats.isFile()) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", 'file');\n\n              case 5:\n                if (!stats.isDirectory()) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", 'directory');\n\n              case 7:\n                if (!(stats && stats.isSymbolicLink())) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                _context5.prev = 8;\n                _context5.next = 11;\n                return realpath(entry.fullPath);\n\n              case 11:\n                entryRealPath = _context5.sent;\n                _context5.next = 14;\n                return lstat(entryRealPath);\n\n              case 14:\n                entryRealPathStats = _context5.sent;\n\n                if (!entryRealPathStats.isFile()) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", 'file');\n\n              case 17:\n                if (!entryRealPathStats.isDirectory()) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", 'directory');\n\n              case 19:\n                _context5.next = 24;\n                break;\n\n              case 21:\n                _context5.prev = 21;\n                _context5.t0 = _context5[\"catch\"](8);\n\n                this._onError(_context5.t0);\n\n              case 24:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee4, this, [[8, 21]]);\n      }));\n\n      function _getEntryType(_x6) {\n        return _getEntryType2.apply(this, arguments);\n      }\n\n      return _getEntryType;\n    }()\n  }, {\n    key: \"_includeAsFile\",\n    value: function _includeAsFile(entry) {\n      var stats = entry && entry[this._statsProp];\n      return stats && this._wantsEverything && !stats.isDirectory();\n    }\n  }]);\n\n  return ReaddirpStream;\n}(Readable);\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\n\n\nvar readdirp = function readdirp(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n\n  if (type) options.type = type;\n\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(\"readdirp: Invalid type passed. Use one of \".concat(ALL_TYPES.join(', ')));\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nvar readdirpPromise = function readdirpPromise(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    var files = [];\n    readdirp(root, options).on('data', function (entry) {\n      return files.push(entry);\n    }).on('end', function () {\n      return resolve(files);\n    }).on('error', function (error) {\n      return reject(error);\n    });\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\nmodule.exports = readdirp;"},"sourceMaps":null,"error":null,"hash":"23c502c1942c127605a6ffd0ee5558dd","cacheData":{"env":{}}}