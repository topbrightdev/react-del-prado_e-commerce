{"id":"../node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"./tap","loc":{"line":2,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/tap.js"},{"name":"../util/EmptyError","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/EmptyError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwIfEmpty = void 0;\n\nvar _tap = require(\"./tap\");\n\nvar _EmptyError = require(\"../util/EmptyError\");\n\n/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\nvar throwIfEmpty = function (errorFactory) {\n  if (errorFactory === void 0) {\n    errorFactory = defaultErrorFactory;\n  }\n\n  return (0, _tap.tap)({\n    hasValue: false,\n    next: function () {\n      this.hasValue = true;\n    },\n    complete: function () {\n      if (!this.hasValue) {\n        throw errorFactory();\n      }\n    }\n  });\n};\n\nexports.throwIfEmpty = throwIfEmpty;\n\nfunction defaultErrorFactory() {\n  return new _EmptyError.EmptyError();\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":4}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":16}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":19}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":29}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":41}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":13,"column":43}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":14,"column":6}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":65},"generated":{"line":14,"column":18}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":65},"generated":{"line":14,"column":23}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":65},"generated":{"line":14,"column":28}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":14,"column":29}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":65},"generated":{"line":14,"column":31}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":15,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":15,"column":16}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":19},"generated":{"line":15,"column":19}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":15,"column":38}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":18,"column":9}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":18,"column":23}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":19,"column":12}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":19,"column":14}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":19,"column":19}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":20,"column":22}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":21,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":21,"column":11}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":21,"column":19}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":21,"column":22}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":14},"generated":{"line":21,"column":26}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":38,"column":29},"generated":{"line":22,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":22,"column":5}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":23,"column":12}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":23,"column":14}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":39,"column":7},"generated":{"line":23,"column":26}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":10}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":11}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":16}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":24}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":40,"column":5},"generated":{"line":24,"column":26}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":25,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":25,"column":14}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":25,"column":26}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":25,"column":28}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":41,"column":12},"generated":{"line":26,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":27,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":28,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":28,"column":3}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":29,"column":0}},{"source":"../../../src/internal/operators/throwIfEmpty.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":29,"column":1}}],"sources":{"../../../src/internal/operators/throwIfEmpty.ts":"import { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```javascript\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * ```\n *\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport const throwIfEmpty =\n  <T>(errorFactory: (() => any) = defaultErrorFactory) => tap<T>({\n    hasValue: false,\n    next() { this.hasValue = true; },\n    complete() {\n      if (!this.hasValue) {\n        throw errorFactory();\n      }\n    }\n  } as any);\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n"},"lineCount":null}},"error":null,"hash":"3ddae63cc856326566b22442fc860906","cacheData":{"env":{}}}