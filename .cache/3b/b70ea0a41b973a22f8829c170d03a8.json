{"id":"../node_modules/external-editor/main/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/package.json","includedInParent":true,"mtime":1594570879406},{"name":"chardet","loc":{"line":9,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chardet/index.js"},{"name":"child_process","loc":{"line":10,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"fs","loc":{"line":11,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"iconv-lite","loc":{"line":12,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/iconv-lite/lib/index.js"},{"name":"tmp","loc":{"line":13,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/tmp/lib/tmp.js"},{"name":"./errors/CreateFileError","loc":{"line":14,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/errors/CreateFileError.js"},{"name":"./errors/LaunchEditorError","loc":{"line":16,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/errors/LaunchEditorError.js"},{"name":"./errors/ReadFileError","loc":{"line":18,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/errors/ReadFileError.js"},{"name":"./errors/RemoveFileError","loc":{"line":20,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/errors/RemoveFileError.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/external-editor/main/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n/***\n * Node External Editor\n *\n * Kevin Gravier <kevin@mrkmg.com>\n * MIT 2018\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chardet_1 = require(\"chardet\");\n\nvar child_process_1 = require(\"child_process\");\n\nvar fs_1 = require(\"fs\");\n\nvar iconv_lite_1 = require(\"iconv-lite\");\n\nvar tmp_1 = require(\"tmp\");\n\nvar CreateFileError_1 = require(\"./errors/CreateFileError\");\n\nexports.CreateFileError = CreateFileError_1.CreateFileError;\n\nvar LaunchEditorError_1 = require(\"./errors/LaunchEditorError\");\n\nexports.LaunchEditorError = LaunchEditorError_1.LaunchEditorError;\n\nvar ReadFileError_1 = require(\"./errors/ReadFileError\");\n\nexports.ReadFileError = ReadFileError_1.ReadFileError;\n\nvar RemoveFileError_1 = require(\"./errors/RemoveFileError\");\n\nexports.RemoveFileError = RemoveFileError_1.RemoveFileError;\n\nfunction edit(text) {\n  if (text === void 0) {\n    text = \"\";\n  }\n\n  var editor = new ExternalEditor(text);\n  editor.run();\n  editor.cleanup();\n  return editor.text;\n}\n\nexports.edit = edit;\n\nfunction editAsync(text, callback) {\n  if (text === void 0) {\n    text = \"\";\n  }\n\n  var editor = new ExternalEditor(text);\n  editor.runAsync(function (err, result) {\n    if (err) {\n      setImmediate(callback, err, null);\n    } else {\n      try {\n        editor.cleanup();\n        setImmediate(callback, null, result);\n      } catch (cleanupError) {\n        setImmediate(callback, cleanupError, null);\n      }\n    }\n  });\n}\n\nexports.editAsync = editAsync;\n\nvar ExternalEditor =\n/** @class */\nfunction () {\n  function ExternalEditor(text) {\n    if (text === void 0) {\n      text = \"\";\n    }\n\n    this.text = \"\";\n    this.text = text;\n    this.determineEditor();\n    this.createTemporaryFile();\n  }\n\n  ExternalEditor.splitStringBySpace = function (str) {\n    var pieces = [];\n    var currentString = \"\";\n\n    for (var strIndex = 0; strIndex < str.length; strIndex++) {\n      var currentLetter = str[strIndex];\n\n      if (strIndex > 0 && currentLetter === \" \" && str[strIndex - 1] !== \"\\\\\" && currentString.length > 0) {\n        pieces.push(currentString);\n        currentString = \"\";\n      } else {\n        currentString += currentLetter;\n      }\n    }\n\n    if (currentString.length > 0) {\n      pieces.push(currentString);\n    }\n\n    return pieces;\n  };\n\n  Object.defineProperty(ExternalEditor.prototype, \"temp_file\", {\n    get: function () {\n      console.log(\"DEPRECATED: temp_file. Use tempFile moving forward.\");\n      return this.tempFile;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExternalEditor.prototype, \"last_exit_status\", {\n    get: function () {\n      console.log(\"DEPRECATED: last_exit_status. Use lastExitStatus moving forward.\");\n      return this.lastExitStatus;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ExternalEditor.prototype.run = function () {\n    this.launchEditor();\n    this.readTemporaryFile();\n    return this.text;\n  };\n\n  ExternalEditor.prototype.runAsync = function (callback) {\n    var _this = this;\n\n    try {\n      this.launchEditorAsync(function () {\n        try {\n          _this.readTemporaryFile();\n\n          setImmediate(callback, null, _this.text);\n        } catch (readError) {\n          setImmediate(callback, readError, null);\n        }\n      });\n    } catch (launchError) {\n      setImmediate(callback, launchError, null);\n    }\n  };\n\n  ExternalEditor.prototype.cleanup = function () {\n    this.removeTemporaryFile();\n  };\n\n  ExternalEditor.prototype.determineEditor = function () {\n    var editor = undefined ? undefined : undefined ? undefined : /^win/.test(process.platform) ? \"notepad\" : \"vim\";\n    var editorOpts = ExternalEditor.splitStringBySpace(editor).map(function (piece) {\n      return piece.replace(\"\\\\ \", \" \");\n    });\n    var bin = editorOpts.shift();\n    this.editor = {\n      args: editorOpts,\n      bin: bin\n    };\n  };\n\n  ExternalEditor.prototype.createTemporaryFile = function () {\n    try {\n      this.tempFile = tmp_1.tmpNameSync({});\n      fs_1.writeFileSync(this.tempFile, this.text, {\n        encoding: \"utf8\"\n      });\n    } catch (createFileError) {\n      throw new CreateFileError_1.CreateFileError(createFileError);\n    }\n  };\n\n  ExternalEditor.prototype.readTemporaryFile = function () {\n    try {\n      var tempFileBuffer = fs_1.readFileSync(this.tempFile);\n\n      if (tempFileBuffer.length === 0) {\n        this.text = \"\";\n      } else {\n        var encoding = chardet_1.detect(tempFileBuffer).toString();\n\n        if (!iconv_lite_1.encodingExists(encoding)) {\n          // Probably a bad idea, but will at least prevent crashing\n          encoding = \"utf8\";\n        }\n\n        this.text = iconv_lite_1.decode(tempFileBuffer, encoding);\n      }\n    } catch (readFileError) {\n      throw new ReadFileError_1.ReadFileError(readFileError);\n    }\n  };\n\n  ExternalEditor.prototype.removeTemporaryFile = function () {\n    try {\n      fs_1.unlinkSync(this.tempFile);\n    } catch (removeFileError) {\n      throw new RemoveFileError_1.RemoveFileError(removeFileError);\n    }\n  };\n\n  ExternalEditor.prototype.launchEditor = function () {\n    try {\n      var editorProcess = child_process_1.spawnSync(this.editor.bin, this.editor.args.concat([this.tempFile]), {\n        stdio: \"inherit\"\n      });\n      this.lastExitStatus = editorProcess.status;\n    } catch (launchError) {\n      throw new LaunchEditorError_1.LaunchEditorError(launchError);\n    }\n  };\n\n  ExternalEditor.prototype.launchEditorAsync = function (callback) {\n    var _this = this;\n\n    try {\n      var editorProcess = child_process_1.spawn(this.editor.bin, this.editor.args.concat([this.tempFile]), {\n        stdio: \"inherit\"\n      });\n      editorProcess.on(\"exit\", function (code) {\n        _this.lastExitStatus = code;\n        setImmediate(callback);\n      });\n    } catch (launchError) {\n      throw new LaunchEditorError_1.LaunchEditorError(launchError);\n    }\n  };\n\n  return ExternalEditor;\n}();\n\nexports.ExternalEditor = ExternalEditor;"},"sourceMaps":null,"error":null,"hash":"93794e8146d0ebc975f746c0664379ab","cacheData":{"env":{}}}