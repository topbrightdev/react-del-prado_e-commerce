{"id":"../node_modules/html-webpack-plugin/lib/chunksorter.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/html-webpack-plugin/package.json","includedInParent":true,"mtime":1594306880054}],"generated":{"js":"// @ts-check\n\n/** @typedef {import(\"webpack/lib/Compilation.js\")} WebpackCompilation */\n'use strict';\n/**\n * @type {{[sortmode: string] : (entryPointNames: Array<string>, compilation, htmlWebpackPluginOptions) => Array<string> }}\n * This file contains different sort methods for the entry chunks names\n */\n\nmodule.exports = {};\n/**\n * Performs identity mapping (no-sort).\n * @param  {Array} chunks the chunks to sort\n * @return {Array} The sorted chunks\n */\n\nmodule.exports.none = function (chunks) {\n  return chunks;\n};\n/**\n * Sort manually by the chunks\n * @param  {string[]} entryPointNames the chunks to sort\n * @param  {WebpackCompilation} compilation the webpack compilation\n * @param  htmlWebpackPluginOptions the plugin options\n * @return {string[]} The sorted chunks\n */\n\n\nmodule.exports.manual = function (entryPointNames, compilation, htmlWebpackPluginOptions) {\n  var chunks = htmlWebpackPluginOptions.chunks;\n\n  if (!Array.isArray(chunks)) {\n    return entryPointNames;\n  } // Remove none existing entries from\n  // htmlWebpackPluginOptions.chunks\n\n\n  return chunks.filter(function (entryPointName) {\n    return compilation.entrypoints.has(entryPointName);\n  });\n};\n/**\n * Defines the default sorter.\n */\n\n\nmodule.exports.auto = module.exports.none;"},"sourceMaps":null,"error":null,"hash":"1e03bdbc53b59bfd92a9a5be71e75148","cacheData":{"env":{}}}