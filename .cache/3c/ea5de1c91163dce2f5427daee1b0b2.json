{"id":"../node_modules/renderkid/lib/AnsiPainter.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/package.json","includedInParent":true,"mtime":1594570878742},{"name":"./tools","loc":{"line":6,"column":16},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/AnsiPainter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/tools.js"},{"name":"./ansiPainter/tags","loc":{"line":8,"column":15},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/AnsiPainter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/ansiPainter/tags.js"},{"name":"./ansiPainter/styles","loc":{"line":10,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/AnsiPainter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/ansiPainter/styles.js"},{"name":"utila","loc":{"line":12,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/renderkid/lib/AnsiPainter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/utila/lib/utila.js"}],"generated":{"js":"// Generated by CoffeeScript 1.9.3\nvar AnsiPainter, object, styles, tags, tools,\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\ntools = require('./tools');\n\ntags = require('./ansiPainter/tags');\n\nstyles = require('./ansiPainter/styles');\n\nobject = require('utila').object;\n\nmodule.exports = AnsiPainter = (function() {\n  var self;\n\n  function AnsiPainter() {}\n\n  AnsiPainter.tags = tags;\n\n  AnsiPainter.prototype.paint = function(s) {\n    return this._replaceSpecialStrings(this._renderDom(this._parse(s)));\n  };\n\n  AnsiPainter.prototype._replaceSpecialStrings = function(str) {\n    return str.replace(/&sp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&amp;/g, '&');\n  };\n\n  AnsiPainter.prototype._parse = function(string, injectFakeRoot) {\n    if (injectFakeRoot == null) {\n      injectFakeRoot = true;\n    }\n    if (injectFakeRoot) {\n      string = '<none>' + string + '</none>';\n    }\n    return tools.toDom(string);\n  };\n\n  AnsiPainter.prototype._renderDom = function(dom) {\n    var parentStyles;\n    parentStyles = {\n      bg: 'none',\n      color: 'none'\n    };\n    return this._renderChildren(dom, parentStyles);\n  };\n\n  AnsiPainter.prototype._renderChildren = function(children, parentStyles) {\n    var child, n, ret;\n    ret = '';\n    for (n in children) {\n      if (!hasProp.call(children, n)) continue;\n      child = children[n];\n      ret += this._renderNode(child, parentStyles);\n    }\n    return ret;\n  };\n\n  AnsiPainter.prototype._renderNode = function(node, parentStyles) {\n    if (node.type === 'text') {\n      return this._renderTextNode(node, parentStyles);\n    } else {\n      return this._renderTag(node, parentStyles);\n    }\n  };\n\n  AnsiPainter.prototype._renderTextNode = function(node, parentStyles) {\n    return this._wrapInStyle(node.data, parentStyles);\n  };\n\n  AnsiPainter.prototype._wrapInStyle = function(str, style) {\n    return styles.color(style.color) + styles.bg(style.bg) + str + styles.none();\n  };\n\n  AnsiPainter.prototype._renderTag = function(node, parentStyles) {\n    var currentStyles, tagStyles;\n    tagStyles = this._getStylesForTagName(node.name);\n    currentStyles = this._mixStyles(parentStyles, tagStyles);\n    return this._renderChildren(node.children, currentStyles);\n  };\n\n  AnsiPainter.prototype._mixStyles = function() {\n    var final, i, key, len, style, styles, val;\n    styles = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    final = {};\n    for (i = 0, len = styles.length; i < len; i++) {\n      style = styles[i];\n      for (key in style) {\n        if (!hasProp.call(style, key)) continue;\n        val = style[key];\n        if ((final[key] == null) || val !== 'inherit') {\n          final[key] = val;\n        }\n      }\n    }\n    return final;\n  };\n\n  AnsiPainter.prototype._getStylesForTagName = function(name) {\n    if (tags[name] == null) {\n      throw Error(\"Unknown tag name `\" + name + \"`\");\n    }\n    return tags[name];\n  };\n\n  self = AnsiPainter;\n\n  AnsiPainter.getInstance = function() {\n    if (self._instance == null) {\n      self._instance = new self;\n    }\n    return self._instance;\n  };\n\n  AnsiPainter.paint = function(str) {\n    return self.getInstance().paint(str);\n  };\n\n  AnsiPainter.strip = function(s) {\n    return s.replace(/\\x1b\\[[0-9]+m/g, '');\n  };\n\n  return AnsiPainter;\n\n})();\n"},"sourceMaps":null,"error":null,"hash":"795dfa9c521df5b32056333854719e83","cacheData":{"env":{}}}