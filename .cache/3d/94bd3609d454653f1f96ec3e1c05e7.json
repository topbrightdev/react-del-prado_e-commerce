{"id":"../node_modules/map-visit/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/map-visit/package.json","includedInParent":true,"mtime":1594306880246},{"name":"util","loc":{"line":3,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/map-visit/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"},{"name":"object-visit","loc":{"line":4,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/map-visit/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/object-visit/index.js"}],"generated":{"js":"'use strict';\n\nvar util = require('util');\n\nvar visit = require('object-visit');\n/**\n * Map `visit` over an array of objects.\n *\n * @param  {Object} `collection` The context in which to invoke `method`\n * @param  {String} `method` Name of the method to call on `collection`\n * @param  {Object} `arr` Array of objects.\n */\n\n\nmodule.exports = function mapVisit(collection, method, val) {\n  if (isObject(val)) {\n    return visit.apply(null, arguments);\n  }\n\n  if (!Array.isArray(val)) {\n    throw new TypeError('expected an array: ' + util.inspect(val));\n  }\n\n  var args = [].slice.call(arguments, 3);\n\n  for (var i = 0; i < val.length; i++) {\n    var ele = val[i];\n\n    if (isObject(ele)) {\n      visit.apply(null, [collection, method, ele].concat(args));\n    } else {\n      collection[method].apply(collection, [ele].concat(args));\n    }\n  }\n};\n\nfunction isObject(val) {\n  return val && (typeof val === 'function' || !Array.isArray(val) && typeof val === 'object');\n}"},"sourceMaps":null,"error":null,"hash":"bf638bebb9c356e91d266d7c258ddd9d","cacheData":{"env":{}}}