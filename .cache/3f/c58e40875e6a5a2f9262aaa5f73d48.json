{"id":"../node_modules/has-values/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/has-values/package.json","includedInParent":true,"mtime":1594306880046},{"name":"kind-of","loc":{"line":10,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/has-values/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/has-values/node_modules/kind-of/index.js"},{"name":"is-number","loc":{"line":11,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/has-values/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/has-values/node_modules/is-number/index.js"}],"generated":{"js":"/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nvar isNumber = require('is-number');\n\nmodule.exports = function hasValue(val) {\n  // is-number checks for NaN and other edge cases\n  if (isNumber(val)) {\n    return true;\n  }\n\n  switch (typeOf(val)) {\n    case 'null':\n    case 'boolean':\n    case 'function':\n      return true;\n\n    case 'string':\n    case 'arguments':\n      return val.length !== 0;\n\n    case 'error':\n      return val.message !== '';\n\n    case 'array':\n      var len = val.length;\n\n      if (len === 0) {\n        return false;\n      }\n\n      for (var i = 0; i < len; i++) {\n        if (hasValue(val[i])) {\n          return true;\n        }\n      }\n\n      return false;\n\n    case 'file':\n    case 'map':\n    case 'set':\n      return val.size !== 0;\n\n    case 'object':\n      var keys = Object.keys(val);\n\n      if (keys.length === 0) {\n        return false;\n      }\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n\n        if (hasValue(val[key])) {\n          return true;\n        }\n      }\n\n      return false;\n\n    default:\n      {\n        return false;\n      }\n  }\n};"},"sourceMaps":null,"error":null,"hash":"acd784267cf3345a1c49db835279f265","cacheData":{"env":{}}}