{"id":"../node_modules/autoprefixer/lib/hacks/grid-template-areas.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1594570878686},{"name":"../declaration","loc":{"line":9,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/hacks/grid-template-areas.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/declaration.js"},{"name":"./grid-utils","loc":{"line":11,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/hacks/grid-template-areas.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/autoprefixer/lib/hacks/grid-utils.js"}],"generated":{"js":"\"use strict\";\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults(subClass, superClass);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Declaration = require('../declaration');\n\nvar _require = require('./grid-utils'),\n    parseGridAreas = _require.parseGridAreas,\n    warnMissedAreas = _require.warnMissedAreas,\n    prefixTrackProp = _require.prefixTrackProp,\n    prefixTrackValue = _require.prefixTrackValue,\n    getGridGap = _require.getGridGap,\n    warnGridGap = _require.warnGridGap,\n    inheritGridGap = _require.inheritGridGap;\n\nfunction getGridRows(tpl) {\n  return tpl.trim().slice(1, -1).split(/['\"]\\s*['\"]?/g);\n}\n\nvar GridTemplateAreas = /*#__PURE__*/function (_Declaration) {\n  _inheritsLoose(GridTemplateAreas, _Declaration);\n\n  function GridTemplateAreas() {\n    return _Declaration.apply(this, arguments) || this;\n  }\n\n  var _proto = GridTemplateAreas.prototype;\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n\n  _proto.insert = function insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);\n    var hasColumns = false;\n    var hasRows = false;\n    var parent = decl.parent;\n    var gap = getGridGap(decl);\n    var inheritedGap = inheritGridGap(decl, gap); // remove already prefixed rows and columns\n    // without gutter to prevent doubling prefixes\n\n    parent.walkDecls(/-ms-grid-(rows|columns)/, function (i) {\n      return i.remove();\n    }); // add empty tracks to rows and columns\n\n    parent.walkDecls(/grid-template-(rows|columns)/, function (trackDecl) {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true;\n        var prop = trackDecl.prop,\n            value = trackDecl.value;\n        /**\n         * we must insert inherited gap values in some cases:\n         * if we are inside media query && if we have no grid-gap value\n        */\n\n        if (inheritedGap) {\n          trackDecl.cloneBefore({\n            prop: prefixTrackProp({\n              prop: prop,\n              prefix: prefix\n            }),\n            value: prefixTrackValue({\n              value: value,\n              gap: inheritedGap.row\n            })\n          });\n        } else {\n          trackDecl.cloneBefore({\n            prop: prefixTrackProp({\n              prop: prop,\n              prefix: prefix\n            }),\n            value: prefixTrackValue({\n              value: value,\n              gap: gap.row\n            })\n          });\n        }\n      } else {\n        hasColumns = true;\n        var _prop = trackDecl.prop,\n            _value = trackDecl.value;\n        /**\n         * we must insert inherited gap values in some cases:\n         * if we are inside media query && if we have no grid-gap value\n        */\n\n        if (inheritedGap) {\n          trackDecl.cloneBefore({\n            prop: prefixTrackProp({\n              prop: _prop,\n              prefix: prefix\n            }),\n            value: prefixTrackValue({\n              value: _value,\n              gap: inheritedGap.column\n            })\n          });\n        } else {\n          trackDecl.cloneBefore({\n            prop: prefixTrackProp({\n              prop: _prop,\n              prefix: prefix\n            }),\n            value: prefixTrackValue({\n              value: _value,\n              gap: gap.column\n            })\n          });\n        }\n      }\n    });\n    var gridRows = getGridRows(decl.value);\n\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: \"repeat(\" + gridRows.length + \", auto)\",\n          gap: gap.row\n        }),\n        raws: {}\n      });\n    } // warnings\n\n\n    warnGridGap({\n      gap: gap,\n      hasColumns: hasColumns,\n      decl: decl,\n      result: result\n    });\n    var areas = parseGridAreas({\n      rows: gridRows,\n      gap: gap\n    });\n    warnMissedAreas(areas, decl, result);\n    return decl;\n  };\n\n  return GridTemplateAreas;\n}(Declaration);\n\n_defineProperty(GridTemplateAreas, \"names\", ['grid-template-areas']);\n\nmodule.exports = GridTemplateAreas;"},"sourceMaps":null,"error":null,"hash":"f835771f4db889ff18edaec5d9b0430a","cacheData":{"env":{}}}