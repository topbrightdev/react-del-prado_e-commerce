{"id":"../node_modules/webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/package.json","includedInParent":true,"mtime":1594570878394},{"name":"source-map","loc":{"line":8,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/source-map/source-map.js"},{"name":"source-list-map","loc":{"line":9,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/source-list-map/lib/index.js"},{"name":"./Source","loc":{"line":10,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/Source.js"},{"name":"./SourceAndMapMixin","loc":{"line":47,"column":8},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/LineToLineMappedSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/SourceAndMapMixin.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\n\nclass LineToLineMappedSource extends Source {\n\tconstructor(value, name, originalSource) {\n\t\tsuper();\n\t\tthis._value = value;\n\t\tthis._name = name;\n\t\tthis._originalSource = originalSource;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tnode(options) {\n\t\tvar value = this._value;\n\t\tvar name = this._name;\n\t\tvar lines = value.split(\"\\n\");\n\t\tvar node = new SourceNode(null, null, null,\n\t\t\tlines.map(function(line, idx) {\n\t\t\t\treturn new SourceNode(idx + 1, 0, name, (line + (idx != lines.length - 1 ? \"\\n\" : \"\")));\n\t\t\t})\n\t\t);\n\t\tnode.setSourceContent(name, this._originalSource);\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value, this._name, this._originalSource)\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t\thash.update(this._originalSource);\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(LineToLineMappedSource.prototype);\n\nmodule.exports = LineToLineMappedSource;\n"},"sourceMaps":null,"error":null,"hash":"9bbbde7c06f3ba42711db092a7c58eb2","cacheData":{"env":{}}}