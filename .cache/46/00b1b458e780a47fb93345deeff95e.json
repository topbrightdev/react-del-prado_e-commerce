{"id":"../node_modules/inquirer/lib/ui/bottom-bar.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/package.json","includedInParent":true,"mtime":1594570878526},{"name":"through","loc":{"line":6,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/bottom-bar.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/through/index.js"},{"name":"./baseUI","loc":{"line":7,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/bottom-bar.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/baseUI.js"},{"name":"../utils/readline","loc":{"line":8,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/bottom-bar.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/readline.js"},{"name":"lodash","loc":{"line":9,"column":16},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/bottom-bar.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/lodash/lodash.js"}],"generated":{"js":"'use strict';\n/**\n * Sticky bottom bar user interface\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar through = require('through');\n\nvar Base = require('./baseUI');\n\nvar rlUtils = require('../utils/readline');\n\nvar _ = require('lodash');\n\nvar BottomBar = /*#__PURE__*/function (_Base) {\n  _inherits(BottomBar, _Base);\n\n  var _super = _createSuper(BottomBar);\n\n  function BottomBar(opt) {\n    var _this;\n\n    _classCallCheck(this, BottomBar);\n\n    opt = opt || {};\n    _this = _super.call(this, opt);\n    _this.log = through(_this.writeLog.bind(_assertThisInitialized(_this)));\n    _this.bottomBar = opt.bottomBar || '';\n\n    _this.render();\n\n    return _this;\n  }\n  /**\n   * Render the prompt to screen\n   * @return {BottomBar} self\n   */\n\n\n  _createClass(BottomBar, [{\n    key: \"render\",\n    value: function render() {\n      this.write(this.bottomBar);\n      return this;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      rlUtils.clearLine(this.rl, this.bottomBar.split('\\n').length);\n      return this;\n    }\n    /**\n     * Update the bottom bar content and rerender\n     * @param  {String} bottomBar Bottom bar content\n     * @return {BottomBar}           self\n     */\n\n  }, {\n    key: \"updateBottomBar\",\n    value: function updateBottomBar(bottomBar) {\n      rlUtils.clearLine(this.rl, 1);\n      this.rl.output.unmute();\n      this.clean();\n      this.bottomBar = bottomBar;\n      this.render();\n      this.rl.output.mute();\n      return this;\n    }\n    /**\n     * Write out log data\n     * @param {String} data - The log data to be output\n     * @return {BottomBar} self\n     */\n\n  }, {\n    key: \"writeLog\",\n    value: function writeLog(data) {\n      this.rl.output.unmute();\n      this.clean();\n      this.rl.output.write(this.enforceLF(data.toString()));\n      this.render();\n      this.rl.output.mute();\n      return this;\n    }\n    /**\n     * Make sure line end on a line feed\n     * @param  {String} str Input string\n     * @return {String}     The input string with a final line feed\n     */\n\n  }, {\n    key: \"enforceLF\",\n    value: function enforceLF(str) {\n      return str.match(/[\\r\\n]$/) ? str : str + '\\n';\n    }\n    /**\n     * Helper for writing message in Prompt\n     * @param {BottomBar} prompt  - The Prompt object that extends tty\n     * @param {String} message - The message to be output\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(message) {\n      var msgLines = message.split(/\\n/);\n      this.height = msgLines.length; // Write message to screen and setPrompt to control backspace\n\n      this.rl.setPrompt(_.last(msgLines));\n\n      if (this.rl.output.rows === 0 && this.rl.output.columns === 0) {\n        /* When it's a tty through serial port there's no terminal info and the render will malfunction,\n           so we need enforce the cursor to locate to the leftmost position for rendering. */\n        rlUtils.left(this.rl, message.length + this.rl.line.length);\n      }\n\n      this.rl.output.write(message);\n    }\n  }]);\n\n  return BottomBar;\n}(Base);\n\nmodule.exports = BottomBar;"},"sourceMaps":null,"error":null,"hash":"52ed7ac843e308dca5e1bc6e5c8ef0ac","cacheData":{"env":{}}}