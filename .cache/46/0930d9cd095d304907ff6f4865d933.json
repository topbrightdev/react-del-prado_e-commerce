{"id":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-matches/package.json","includedInParent":true,"mtime":1594306880802},{"name":"postcss/lib/list","loc":{"line":8,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-matches/node_modules/postcss/lib/list.js"},{"name":"balanced-match","loc":{"line":12,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/balanced-match/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = replaceRuleSelector;\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar pseudoClass = \":matches\";\nvar selectorElementRE = /^[a-zA-Z]/;\n\nfunction isElementSelector(selector) {\n  var matches = selectorElementRE.exec(selector);\n  // console.log({selector, matches})\n  return matches;\n}\n\nfunction normalizeSelector(selector, preWhitespace, pre) {\n  if (isElementSelector(selector) && !isElementSelector(pre)) {\n    return `${preWhitespace}${selector}${pre}`;\n  }\n\n  return `${preWhitespace}${pre}${selector}`;\n}\n\nfunction explodeSelector(selector, options) {\n  if (selector && selector.indexOf(pseudoClass) > -1) {\n    var newSelectors = [];\n    var preWhitespaceMatches = selector.match(/^\\s+/);\n    var preWhitespace = preWhitespaceMatches ? preWhitespaceMatches[0] : \"\";\n    var selectorPart = _list2.default.comma(selector);\n    selectorPart.forEach(function (part) {\n      var position = part.indexOf(pseudoClass);\n      var pre = part.slice(0, position);\n      var body = part.slice(position);\n      var matches = (0, _balancedMatch2.default)(\"(\", \")\", body);\n\n      var bodySelectors = matches && matches.body ? _list2.default.comma(matches.body).reduce(function (acc, s) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(explodeSelector(s, options)));\n      }, []) : [body];\n\n      var postSelectors = matches && matches.post ? explodeSelector(matches.post, options) : [];\n\n      var newParts = void 0;\n      if (postSelectors.length === 0) {\n        // the test below is a poor way to try we are facing a piece of a\n        // selector...\n        if (position === -1 || pre.indexOf(\" \") > -1) {\n          newParts = bodySelectors.map(function (s) {\n            return preWhitespace + pre + s;\n          });\n        } else {\n          newParts = bodySelectors.map(function (s) {\n            return normalizeSelector(s, preWhitespace, pre);\n          });\n        }\n      } else {\n        newParts = [];\n        postSelectors.forEach(function (postS) {\n          bodySelectors.forEach(function (s) {\n            newParts.push(preWhitespace + pre + s + postS);\n          });\n        });\n      }\n      newSelectors = [].concat(_toConsumableArray(newSelectors), _toConsumableArray(newParts));\n    });\n\n    return newSelectors;\n  }\n  return [selector];\n}\n\nfunction replaceRuleSelector(rule, options) {\n  var indentation = rule.raws && rule.raws.before ? rule.raws.before.split(\"\\n\").pop() : \"\";\n  return explodeSelector(rule.selector, options).join(\",\" + (options.lineBreak ? \"\\n\" + indentation : \" \"));\n}\nmodule.exports = exports.default;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"../node_modules/postcss-selector-matches/dist/replaceRuleSelector.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = replaceRuleSelector;\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar pseudoClass = \":matches\";\nvar selectorElementRE = /^[a-zA-Z]/;\n\nfunction isElementSelector(selector) {\n  var matches = selectorElementRE.exec(selector);\n  // console.log({selector, matches})\n  return matches;\n}\n\nfunction normalizeSelector(selector, preWhitespace, pre) {\n  if (isElementSelector(selector) && !isElementSelector(pre)) {\n    return `${preWhitespace}${selector}${pre}`;\n  }\n\n  return `${preWhitespace}${pre}${selector}`;\n}\n\nfunction explodeSelector(selector, options) {\n  if (selector && selector.indexOf(pseudoClass) > -1) {\n    var newSelectors = [];\n    var preWhitespaceMatches = selector.match(/^\\s+/);\n    var preWhitespace = preWhitespaceMatches ? preWhitespaceMatches[0] : \"\";\n    var selectorPart = _list2.default.comma(selector);\n    selectorPart.forEach(function (part) {\n      var position = part.indexOf(pseudoClass);\n      var pre = part.slice(0, position);\n      var body = part.slice(position);\n      var matches = (0, _balancedMatch2.default)(\"(\", \")\", body);\n\n      var bodySelectors = matches && matches.body ? _list2.default.comma(matches.body).reduce(function (acc, s) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(explodeSelector(s, options)));\n      }, []) : [body];\n\n      var postSelectors = matches && matches.post ? explodeSelector(matches.post, options) : [];\n\n      var newParts = void 0;\n      if (postSelectors.length === 0) {\n        // the test below is a poor way to try we are facing a piece of a\n        // selector...\n        if (position === -1 || pre.indexOf(\" \") > -1) {\n          newParts = bodySelectors.map(function (s) {\n            return preWhitespace + pre + s;\n          });\n        } else {\n          newParts = bodySelectors.map(function (s) {\n            return normalizeSelector(s, preWhitespace, pre);\n          });\n        }\n      } else {\n        newParts = [];\n        postSelectors.forEach(function (postS) {\n          bodySelectors.forEach(function (s) {\n            newParts.push(preWhitespace + pre + s + postS);\n          });\n        });\n      }\n      newSelectors = [].concat(_toConsumableArray(newSelectors), _toConsumableArray(newParts));\n    });\n\n    return newSelectors;\n  }\n  return [selector];\n}\n\nfunction replaceRuleSelector(rule, options) {\n  var indentation = rule.raws && rule.raws.before ? rule.raws.before.split(\"\\n\").pop() : \"\";\n  return explodeSelector(rule.selector, options).join(\",\" + (options.lineBreak ? \"\\n\" + indentation : \" \"));\n}\nmodule.exports = exports.default;"},"lineCount":88}},"error":null,"hash":"ea17d515714f96fc1e805d1971d92b88","cacheData":{"env":{}}}