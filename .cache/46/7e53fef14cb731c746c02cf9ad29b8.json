{"id":"../node_modules/object-visit/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/object-visit/package.json","includedInParent":true,"mtime":1594306880334},{"name":"isobject","loc":{"line":10,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/object-visit/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/isobject/index.js"}],"generated":{"js":"/*!\n * object-visit <https://github.com/jonschlinkert/object-visit>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar isObject = require('isobject');\n\nmodule.exports = function visit(thisArg, method, target, val) {\n  if (!isObject(thisArg) && typeof thisArg !== 'function') {\n    throw new Error('object-visit expects `thisArg` to be an object.');\n  }\n\n  if (typeof method !== 'string') {\n    throw new Error('object-visit expects `method` name to be a string');\n  }\n\n  if (typeof thisArg[method] !== 'function') {\n    return thisArg;\n  }\n\n  var args = [].slice.call(arguments, 3);\n  target = target || {};\n\n  for (var key in target) {\n    var arr = [key, target[key]].concat(args);\n    thisArg[method].apply(thisArg, arr);\n  }\n\n  return thisArg;\n};"},"sourceMaps":null,"error":null,"hash":"246f80831440f3b2878dd4067d3665a1","cacheData":{"env":{}}}