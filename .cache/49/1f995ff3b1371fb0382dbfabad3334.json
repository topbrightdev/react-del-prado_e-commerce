{"id":"../node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/package.json","includedInParent":true,"mtime":1594306880006},{"name":"crypto","loc":{"line":3,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/crypto-browserify/index.js"},{"name":"fs","loc":{"line":4,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"os","loc":{"line":5,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/os-browserify/browser.js"},{"name":"path","loc":{"line":6,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"./OperationCanceledException","loc":{"line":7,"column":43},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/CancellationToken.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/OperationCanceledException.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto = require(\"crypto\");\n\nvar fs = require(\"fs\");\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar OperationCanceledException_1 = require(\"./OperationCanceledException\");\n\nvar CancellationToken =\n/** @class */\nfunction () {\n  function CancellationToken(cancellationFileName, isCancelled) {\n    this.isCancelled = !!isCancelled;\n    this.cancellationFileName = cancellationFileName || crypto.randomBytes(64).toString('hex');\n    this.lastCancellationCheckTime = 0;\n  }\n\n  CancellationToken.createFromJSON = function (json) {\n    return new CancellationToken(json.cancellationFileName, json.isCancelled);\n  };\n\n  CancellationToken.prototype.toJSON = function () {\n    return {\n      cancellationFileName: this.cancellationFileName,\n      isCancelled: this.isCancelled\n    };\n  };\n\n  CancellationToken.prototype.getCancellationFilePath = function () {\n    return path.join(os.tmpdir(), this.cancellationFileName);\n  };\n\n  CancellationToken.prototype.isCancellationRequested = function () {\n    if (this.isCancelled) {\n      return true;\n    }\n\n    var time = Date.now();\n    var duration = Math.abs(time - this.lastCancellationCheckTime);\n\n    if (duration > 10) {\n      // check no more than once every 10ms\n      this.lastCancellationCheckTime = time;\n      this.isCancelled = fs.existsSync(this.getCancellationFilePath());\n    }\n\n    return this.isCancelled;\n  };\n\n  CancellationToken.prototype.throwIfCancellationRequested = function () {\n    if (this.isCancellationRequested()) {\n      throw new OperationCanceledException_1.OperationCanceledException();\n    }\n  };\n\n  CancellationToken.prototype.requestCancellation = function () {\n    fs.writeFileSync(this.getCancellationFilePath(), '');\n    this.isCancelled = true;\n  };\n\n  CancellationToken.prototype.cleanupCancellation = function () {\n    if (this.isCancelled && fs.existsSync(this.getCancellationFilePath())) {\n      fs.unlinkSync(this.getCancellationFilePath());\n      this.isCancelled = false;\n    }\n  };\n\n  return CancellationToken;\n}();\n\nexports.CancellationToken = CancellationToken;"},"sourceMaps":null,"error":null,"hash":"9e61b86143ed4c32be04663b0e6597f5","cacheData":{"env":{}}}