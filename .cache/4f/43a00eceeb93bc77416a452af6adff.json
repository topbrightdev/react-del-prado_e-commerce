{"id":"../node_modules/is-windows/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/is-windows/package.json","includedInParent":true,"mtime":1594306880086},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/is-windows/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\nvar process = require(\"process\");\n/*!\n * is-windows <https://github.com/jonschlinkert/is-windows>\n *\n * Copyright Â© 2015-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n(function (factory) {\n  if (exports && typeof exports === 'object' && typeof module !== 'undefined') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof window !== 'undefined') {\n    window.isWindows = factory();\n  } else if (typeof global !== 'undefined') {\n    global.isWindows = factory();\n  } else if (typeof self !== 'undefined') {\n    self.isWindows = factory();\n  } else {\n    this.isWindows = factory();\n  }\n})(function () {\n  'use strict';\n\n  return function isWindows() {\n    return process && (process.platform === 'win32' || /^(msys|cygwin)$/.test(undefined));\n  };\n});"},"sourceMaps":null,"error":null,"hash":"ed0f5b1df1ad67243e8f47bc3d4b2eea","cacheData":{"env":{}}}