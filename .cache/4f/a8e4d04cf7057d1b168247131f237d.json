{"id":"../node_modules/clean-css/lib/reader/load-remote-resource.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"http","loc":{"line":1,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/stream-http/index.js"},{"name":"https","loc":{"line":2,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/https-browserify/index.js"},{"name":"url","loc":{"line":3,"column":18},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/url/url.js"},{"name":"../utils/is-http-resource","loc":{"line":5,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/is-http-resource.js"},{"name":"../utils/is-https-resource","loc":{"line":6,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/is-https-resource.js"},{"name":"../utils/override","loc":{"line":7,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/load-remote-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/override.js"}],"generated":{"js":"var http = require('http');\n\nvar https = require('https');\n\nvar url = require('url');\n\nvar isHttpResource = require('../utils/is-http-resource');\n\nvar isHttpsResource = require('../utils/is-https-resource');\n\nvar override = require('../utils/override');\n\nvar HTTP_PROTOCOL = 'http:';\n\nfunction loadRemoteResource(uri, inlineRequest, inlineTimeout, callback) {\n  var proxyProtocol = inlineRequest.protocol || inlineRequest.hostname;\n  var errorHandled = false;\n  var requestOptions;\n  var fetch;\n  requestOptions = override(url.parse(uri), inlineRequest || {});\n\n  if (inlineRequest.hostname !== undefined) {\n    // overwrite as we always expect a http proxy currently\n    requestOptions.protocol = inlineRequest.protocol || HTTP_PROTOCOL;\n    requestOptions.path = requestOptions.href;\n  }\n\n  fetch = proxyProtocol && !isHttpsResource(proxyProtocol) || isHttpResource(uri) ? http.get : https.get;\n  fetch(requestOptions, function (res) {\n    var chunks = [];\n    var movedUri;\n\n    if (errorHandled) {\n      return;\n    }\n\n    if (res.statusCode < 200 || res.statusCode > 399) {\n      return callback(res.statusCode, null);\n    } else if (res.statusCode > 299) {\n      movedUri = url.resolve(uri, res.headers.location);\n      return loadRemoteResource(movedUri, inlineRequest, inlineTimeout, callback);\n    }\n\n    res.on('data', function (chunk) {\n      chunks.push(chunk.toString());\n    });\n    res.on('end', function () {\n      var body = chunks.join('');\n      callback(null, body);\n    });\n  }).on('error', function (res) {\n    if (errorHandled) {\n      return;\n    }\n\n    errorHandled = true;\n    callback(res.message, null);\n  }).on('timeout', function () {\n    if (errorHandled) {\n      return;\n    }\n\n    errorHandled = true;\n    callback('timeout', null);\n  }).setTimeout(inlineTimeout);\n}\n\nmodule.exports = loadRemoteResource;"},"sourceMaps":null,"error":null,"hash":"d24fd6a9a79d3df33547bf3abc2953d6","cacheData":{"env":{}}}