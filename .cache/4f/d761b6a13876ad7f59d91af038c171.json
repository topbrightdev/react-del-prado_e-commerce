{"id":"../node_modules/postcss-attribute-case-insensitive/dist/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-attribute-case-insensitive/package.json","includedInParent":true,"mtime":1594570879026},{"name":"postcss","loc":{"line":7,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-attribute-case-insensitive/dist/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-attribute-case-insensitive/node_modules/postcss/lib/postcss.js"},{"name":"postcss-selector-parser","loc":{"line":11,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-attribute-case-insensitive/dist/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-parser/dist/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssSelectorParser = require('postcss-selector-parser');\n\nvar _postcssSelectorParser2 = _interopRequireDefault(_postcssSelectorParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction nodeIsInsensitiveAttribute(node) {\n\treturn node.type === 'attribute' && node.insensitive;\n}\n\nfunction selectorHasInsensitiveAttribute(selector) {\n\treturn selector.some(nodeIsInsensitiveAttribute);\n}\n\nfunction transformString(strings, charPos, string) {\n\tvar char = string.charAt(charPos);\n\tif (char === '') {\n\t\treturn strings;\n\t}\n\n\tvar newStrings = strings.map(function (x) {\n\t\treturn x + char;\n\t});\n\tvar upperChar = char.toLocaleUpperCase();\n\n\tif (upperChar !== char) {\n\t\tnewStrings = newStrings.concat(strings.map(function (x) {\n\t\t\treturn x + upperChar;\n\t\t}));\n\t}\n\n\treturn transformString(newStrings, charPos + 1, string);\n}\n\nfunction createSensitiveAtributes(attribute) {\n\tvar attributes = transformString([''], 0, attribute.value);\n\treturn attributes.map(function (x) {\n\t\tvar newAttribute = attribute.clone({\n\t\t\tspaces: {\n\t\t\t\tafter: attribute.spaces.after,\n\t\t\t\tbefore: attribute.spaces.before\n\t\t\t},\n\t\t\tinsensitive: false\n\t\t});\n\n\t\tnewAttribute.setValue(x);\n\n\t\treturn newAttribute;\n\t});\n}\n\nfunction createNewSelectors(selector) {\n\tvar newSelectors = [_postcssSelectorParser2.default.selector()];\n\n\tselector.walk(function (node) {\n\t\tif (!nodeIsInsensitiveAttribute(node)) {\n\t\t\tnewSelectors.forEach(function (newSelector) {\n\t\t\t\tnewSelector.append(node.clone());\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tvar sensitiveAttributes = createSensitiveAtributes(node);\n\t\tvar newSelectorsWithSensitiveAttributes = [];\n\n\t\tsensitiveAttributes.forEach(function (newNode) {\n\t\t\tnewSelectors.forEach(function (newSelector) {\n\t\t\t\tvar newSelectorWithNewNode = newSelector.clone();\n\t\t\t\tnewSelectorWithNewNode.append(newNode);\n\t\t\t\tnewSelectorsWithSensitiveAttributes.push(newSelectorWithNewNode);\n\t\t\t});\n\t\t});\n\n\t\tnewSelectors = newSelectorsWithSensitiveAttributes;\n\t});\n\n\treturn newSelectors;\n}\n\nfunction transform(selectors) {\n\tvar newSelectors = [];\n\n\tselectors.each(function (selector) {\n\t\tif (selectorHasInsensitiveAttribute(selector)) {\n\t\t\tnewSelectors = newSelectors.concat(createNewSelectors(selector));\n\t\t\tselector.remove();\n\t\t}\n\t});\n\n\tif (newSelectors.length) {\n\t\tnewSelectors.forEach(function (newSelector) {\n\t\t\treturn selectors.append(newSelector);\n\t\t});\n\t}\n}\n\nvar caseInsensitiveRegExp = /i(\\s*\\/\\*[\\W\\w]*?\\*\\/)*\\s*\\]/;\n\nexports.default = _postcss2.default.plugin('postcss-attribute-case-insensitive', function () {\n\treturn function (css) {\n\t\tcss.walkRules(caseInsensitiveRegExp, function (rule) {\n\t\t\trule.selector = (0, _postcssSelectorParser2.default)(transform).processSync(rule.selector);\n\t\t});\n\t};\n});\nmodule.exports = exports.default;"},"sourceMaps":null,"error":null,"hash":"3bd65f3935098725df68413e73bc003e","cacheData":{"env":{}}}