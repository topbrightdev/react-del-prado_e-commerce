{"id":"../node_modules/utila/lib/classic.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/utila/package.json","includedInParent":true,"mtime":1594306881642}],"generated":{"js":"// Generated by CoffeeScript 1.6.3\nvar classic,\n  __slice = [].slice;\n\nmodule.exports = classic = {};\n\nclassic.implement = function() {\n  var classProto, classReference, desc, member, mixin, mixins, _i, _j, _len;\n  mixins = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), classReference = arguments[_i++];\n  for (_j = 0, _len = mixins.length; _j < _len; _j++) {\n    mixin = mixins[_j];\n    classProto = classReference.prototype;\n    for (member in mixin.prototype) {\n      if (!Object.getOwnPropertyDescriptor(classProto, member)) {\n        desc = Object.getOwnPropertyDescriptor(mixin.prototype, member);\n        Object.defineProperty(classProto, member, desc);\n      }\n    }\n  }\n  return classReference;\n};\n\nclassic.mix = function() {\n  var classProto, classReference, desc, member, mixin, mixins, _i, _j, _len;\n  mixins = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), classReference = arguments[_i++];\n  classProto = classReference.prototype;\n  classReference.__mixinCloners = [];\n  classReference.__applyClonersFor = function(instance, args) {\n    var cloner, _j, _len, _ref;\n    if (args == null) {\n      args = null;\n    }\n    _ref = classReference.__mixinCloners;\n    for (_j = 0, _len = _ref.length; _j < _len; _j++) {\n      cloner = _ref[_j];\n      cloner.apply(instance, args);\n    }\n  };\n  classReference.__mixinInitializers = [];\n  classReference.__initMixinsFor = function(instance, args) {\n    var initializer, _j, _len, _ref;\n    if (args == null) {\n      args = null;\n    }\n    _ref = classReference.__mixinInitializers;\n    for (_j = 0, _len = _ref.length; _j < _len; _j++) {\n      initializer = _ref[_j];\n      initializer.apply(instance, args);\n    }\n  };\n  classReference.__mixinQuitters = [];\n  classReference.__applyQuittersFor = function(instance, args) {\n    var quitter, _j, _len, _ref;\n    if (args == null) {\n      args = null;\n    }\n    _ref = classReference.__mixinQuitters;\n    for (_j = 0, _len = _ref.length; _j < _len; _j++) {\n      quitter = _ref[_j];\n      quitter.apply(instance, args);\n    }\n  };\n  for (_j = 0, _len = mixins.length; _j < _len; _j++) {\n    mixin = mixins[_j];\n    if (!(mixin.constructor instanceof Function)) {\n      throw Error(\"Mixin should be a function\");\n    }\n    for (member in mixin.prototype) {\n      if (member.substr(0, 11) === '__initMixin') {\n        classReference.__mixinInitializers.push(mixin.prototype[member]);\n        continue;\n      } else if (member.substr(0, 11) === '__clonerFor') {\n        classReference.__mixinCloners.push(mixin.prototype[member]);\n        continue;\n      } else if (member.substr(0, 12) === '__quitterFor') {\n        classReference.__mixinQuitters.push(mixin.prototype[member]);\n        continue;\n      }\n      if (!Object.getOwnPropertyDescriptor(classProto, member)) {\n        desc = Object.getOwnPropertyDescriptor(mixin.prototype, member);\n        Object.defineProperty(classProto, member, desc);\n      }\n    }\n  }\n  return classReference;\n};\n"},"sourceMaps":null,"error":null,"hash":"1d8b9e2f586b1e6ef41335f1462b03b6","cacheData":{"env":{}}}