{"id":"../node_modules/p-limit/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/p-limit/package.json","includedInParent":true,"mtime":1594306880338},{"name":"p-try","loc":{"line":2,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/p-limit/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/p-try/index.js"}],"generated":{"js":"'use strict';\n\nconst pTry = require('p-try');\n\nmodule.exports = concurrency => {\n  if (concurrency < 1) {\n    throw new TypeError('Expected `concurrency` to be a number from 1 and up');\n  }\n\n  const queue = [];\n  let activeCount = 0;\n\n  const next = () => {\n    activeCount--;\n\n    if (queue.length > 0) {\n      queue.shift()();\n    }\n  };\n\n  return fn => new Promise((resolve, reject) => {\n    const run = () => {\n      activeCount++;\n      pTry(fn).then(val => {\n        resolve(val);\n        next();\n      }, err => {\n        reject(err);\n        next();\n      });\n    };\n\n    if (activeCount < concurrency) {\n      run();\n    } else {\n      queue.push(run);\n    }\n  });\n};"},"sourceMaps":null,"error":null,"hash":"4b5fdbf1d2d54114e0aeac95dc7efc3e","cacheData":{"env":{}}}