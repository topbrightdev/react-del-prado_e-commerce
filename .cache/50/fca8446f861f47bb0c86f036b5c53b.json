{"id":"../node_modules/infer-owner/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/package.json","includedInParent":true,"mtime":1594717993842},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/infer-owner/package.json","includedInParent":true,"mtime":1594306880070},{"name":"fs","loc":{"line":2,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/infer-owner/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":3,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/infer-owner/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/path-browserify/index.js"}],"generated":{"js":"const cache = new Map()\nconst fs = require('fs')\nconst { dirname, resolve } = require('path')\n\n\nconst lstat = path => new Promise((res, rej) =>\n  fs.lstat(path, (er, st) => er ? rej(er) : res(st)))\n\nconst inferOwner = path => {\n  path = resolve(path)\n  if (cache.has(path))\n    return Promise.resolve(cache.get(path))\n\n  const statThen = st => {\n    const { uid, gid } = st\n    cache.set(path, { uid, gid })\n    return { uid, gid }\n  }\n  const parent = dirname(path)\n  const parentTrap = parent === path ? null : er => {\n    return inferOwner(parent).then((owner) => {\n      cache.set(path, owner)\n      return owner\n    })\n  }\n  return lstat(path).then(statThen, parentTrap)\n}\n\nconst inferOwnerSync = path => {\n  path = resolve(path)\n  if (cache.has(path))\n    return cache.get(path)\n\n  const parent = dirname(path)\n\n  // avoid obscuring call site by re-throwing\n  // \"catch\" the error by returning from a finally,\n  // only if we're not at the root, and the parent call works.\n  let threw = true\n  try {\n    const st = fs.lstatSync(path)\n    threw = false\n    const { uid, gid } = st\n    cache.set(path, { uid, gid })\n    return { uid, gid }\n  } finally {\n    if (threw && parent !== path) {\n      const owner = inferOwnerSync(parent)\n      cache.set(path, owner)\n      return owner // eslint-disable-line no-unsafe-finally\n    }\n  }\n}\n\nconst inflight = new Map()\nmodule.exports = path => {\n  path = resolve(path)\n  if (inflight.has(path))\n    return Promise.resolve(inflight.get(path))\n  const p = inferOwner(path).then(owner => {\n    inflight.delete(path)\n    return owner\n  })\n  inflight.set(path, p)\n  return p\n}\nmodule.exports.sync = inferOwnerSync\nmodule.exports.clearCache = () => {\n  cache.clear()\n  inflight.clear()\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/infer-owner/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/infer-owner/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/infer-owner/index.js":"const cache = new Map()\nconst fs = require('fs')\nconst { dirname, resolve } = require('path')\n\n\nconst lstat = path => new Promise((res, rej) =>\n  fs.lstat(path, (er, st) => er ? rej(er) : res(st)))\n\nconst inferOwner = path => {\n  path = resolve(path)\n  if (cache.has(path))\n    return Promise.resolve(cache.get(path))\n\n  const statThen = st => {\n    const { uid, gid } = st\n    cache.set(path, { uid, gid })\n    return { uid, gid }\n  }\n  const parent = dirname(path)\n  const parentTrap = parent === path ? null : er => {\n    return inferOwner(parent).then((owner) => {\n      cache.set(path, owner)\n      return owner\n    })\n  }\n  return lstat(path).then(statThen, parentTrap)\n}\n\nconst inferOwnerSync = path => {\n  path = resolve(path)\n  if (cache.has(path))\n    return cache.get(path)\n\n  const parent = dirname(path)\n\n  // avoid obscuring call site by re-throwing\n  // \"catch\" the error by returning from a finally,\n  // only if we're not at the root, and the parent call works.\n  let threw = true\n  try {\n    const st = fs.lstatSync(path)\n    threw = false\n    const { uid, gid } = st\n    cache.set(path, { uid, gid })\n    return { uid, gid }\n  } finally {\n    if (threw && parent !== path) {\n      const owner = inferOwnerSync(parent)\n      cache.set(path, owner)\n      return owner // eslint-disable-line no-unsafe-finally\n    }\n  }\n}\n\nconst inflight = new Map()\nmodule.exports = path => {\n  path = resolve(path)\n  if (inflight.has(path))\n    return Promise.resolve(inflight.get(path))\n  const p = inferOwner(path).then(owner => {\n    inflight.delete(path)\n    return owner\n  })\n  inflight.set(path, p)\n  return p\n}\nmodule.exports.sync = inferOwnerSync\nmodule.exports.clearCache = () => {\n  cache.clear()\n  inflight.clear()\n}\n"},"lineCount":72}},"error":null,"hash":"0708bf54868f4db0fcf0b42744c74e1b","cacheData":{"env":{}}}