{"id":"../node_modules/postcss-custom-properties/index.esm.mjs","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/package.json","includedInParent":true,"mtime":1594570879022},{"name":"postcss","loc":{"line":1,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/index.esm.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/node_modules/postcss/lib/postcss.js"},{"name":"postcss-values-parser","loc":{"line":2,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/index.esm.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-values-parser/lib/index.js"},{"name":"fs","loc":{"line":3,"column":15},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/index.esm.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":4,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-custom-properties/index.esm.mjs","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _postcssValuesParser = _interopRequireDefault(require(\"postcss-values-parser\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray2(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction getCustomPropertiesFromRoot(root, opts) {\n  // initialize custom selectors\n  var customPropertiesFromHtmlElement = {};\n  var customPropertiesFromRootPsuedo = {}; // for each html or :root rule\n\n  root.nodes.slice().forEach(function (rule) {\n    var customPropertiesObject = isHtmlRule(rule) ? customPropertiesFromHtmlElement : isRootRule(rule) ? customPropertiesFromRootPsuedo : null; // for each custom property\n\n    if (customPropertiesObject) {\n      rule.nodes.slice().forEach(function (decl) {\n        if (isCustomDecl(decl)) {\n          var prop = decl.prop; // write the parsed value to the custom property\n\n          customPropertiesObject[prop] = (0, _postcssValuesParser.default)(decl.value).parse().nodes; // conditionally remove the custom property declaration\n\n          if (!opts.preserve) {\n            decl.remove();\n          }\n        }\n      }); // conditionally remove the empty html or :root rule\n\n      if (!opts.preserve && isEmptyParent(rule)) {\n        rule.remove();\n      }\n    }\n  }); // return all custom properties, preferring :root properties over html properties\n\n  return _objectSpread({}, customPropertiesFromHtmlElement, customPropertiesFromRootPsuedo);\n} // match html and :root rules\n\n\nvar htmlSelectorRegExp = /^html$/i;\nvar rootSelectorRegExp = /^:root$/i;\nvar customPropertyRegExp = /^--[A-z][\\w-]*$/; // whether the node is an html or :root rule\n\nvar isHtmlRule = function (node) {\n  return node.type === 'rule' && htmlSelectorRegExp.test(node.selector) && Object(node.nodes).length;\n};\n\nvar isRootRule = function (node) {\n  return node.type === 'rule' && rootSelectorRegExp.test(node.selector) && Object(node.nodes).length;\n}; // whether the node is an custom property\n\n\nvar isCustomDecl = function (node) {\n  return node.type === 'decl' && customPropertyRegExp.test(node.prop);\n}; // whether the node is a parent without children\n\n\nvar isEmptyParent = function (node) {\n  return Object(node.nodes).length === 0;\n};\n/* Get Custom Properties from CSS File\n/* ========================================================================== */\n\n\nfunction getCustomPropertiesFromCSSFile(_x) {\n  return _getCustomPropertiesFromCSSFile.apply(this, arguments);\n}\n/* Get Custom Properties from Object\n/* ========================================================================== */\n\n\nfunction _getCustomPropertiesFromCSSFile() {\n  _getCustomPropertiesFromCSSFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(from) {\n    var css, root;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return readFile(from);\n\n          case 2:\n            css = _context.sent;\n            root = _postcss.default.parse(css, {\n              from\n            });\n            return _context.abrupt(\"return\", getCustomPropertiesFromRoot(root, {\n              preserve: true\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCustomPropertiesFromCSSFile.apply(this, arguments);\n}\n\nfunction getCustomPropertiesFromObject(object) {\n  var customProperties = Object.assign({}, Object(object).customProperties, Object(object)['custom-properties']);\n\n  for (var key in customProperties) {\n    customProperties[key] = (0, _postcssValuesParser.default)(String(customProperties[key])).parse().nodes;\n  }\n\n  return customProperties;\n}\n/* Get Custom Properties from JSON file\n/* ========================================================================== */\n\n\nfunction getCustomPropertiesFromJSONFile(_x2) {\n  return _getCustomPropertiesFromJSONFile.apply(this, arguments);\n}\n/* Get Custom Properties from JS file\n/* ========================================================================== */\n\n\nfunction _getCustomPropertiesFromJSONFile() {\n  _getCustomPropertiesFromJSONFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return readJSON(from);\n\n          case 2:\n            object = _context2.sent;\n            return _context2.abrupt(\"return\", getCustomPropertiesFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getCustomPropertiesFromJSONFile.apply(this, arguments);\n}\n\nfunction getCustomPropertiesFromJSFile(_x3) {\n  return _getCustomPropertiesFromJSFile.apply(this, arguments);\n}\n/* Get Custom Properties from Imports\n/* ========================================================================== */\n\n\nfunction _getCustomPropertiesFromJSFile() {\n  _getCustomPropertiesFromJSFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(from) {\n    var object;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return import(from);\n\n          case 2:\n            object = _context3.sent;\n            return _context3.abrupt(\"return\", getCustomPropertiesFromObject(object));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getCustomPropertiesFromJSFile.apply(this, arguments);\n}\n\nfunction getCustomPropertiesFromImports(sources) {\n  return sources.map(function (source) {\n    if (source instanceof Promise) {\n      return source;\n    } else if (source instanceof Function) {\n      return source();\n    } // read the source as an object\n\n\n    var opts = source === Object(source) ? source : {\n      from: String(source)\n    }; // skip objects with Custom Properties\n\n    if (opts.customProperties || opts['custom-properties']) {\n      return opts;\n    } // source pathname\n\n\n    var from = _path.default.resolve(String(opts.from || '')); // type of file being read from\n\n\n    var type = (opts.type || _path.default.extname(from).slice(1)).toLowerCase();\n\n    return {\n      type,\n      from\n    };\n  }).reduce( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(customProperties, source) {\n      var _ref2, type, from;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return source;\n\n            case 2:\n              _ref2 = _context4.sent;\n              type = _ref2.type;\n              from = _ref2.from;\n\n              if (!(type === 'css')) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.t0 = Object;\n              _context4.next = 9;\n              return customProperties;\n\n            case 9:\n              _context4.t1 = _context4.sent;\n              _context4.next = 12;\n              return getCustomPropertiesFromCSSFile(from);\n\n            case 12:\n              _context4.t2 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t0.assign.call(_context4.t0, _context4.t1, _context4.t2));\n\n            case 14:\n              if (!(type === 'js')) {\n                _context4.next = 23;\n                break;\n              }\n\n              _context4.t3 = Object;\n              _context4.next = 18;\n              return customProperties;\n\n            case 18:\n              _context4.t4 = _context4.sent;\n              _context4.next = 21;\n              return getCustomPropertiesFromJSFile(from);\n\n            case 21:\n              _context4.t5 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t3.assign.call(_context4.t3, _context4.t4, _context4.t5));\n\n            case 23:\n              if (!(type === 'json')) {\n                _context4.next = 32;\n                break;\n              }\n\n              _context4.t6 = Object;\n              _context4.next = 27;\n              return customProperties;\n\n            case 27:\n              _context4.t7 = _context4.sent;\n              _context4.next = 30;\n              return getCustomPropertiesFromJSONFile(from);\n\n            case 30:\n              _context4.t8 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t6.assign.call(_context4.t6, _context4.t7, _context4.t8));\n\n            case 32:\n              _context4.t9 = Object;\n              _context4.next = 35;\n              return customProperties;\n\n            case 35:\n              _context4.t10 = _context4.sent;\n              _context4.t11 = getCustomPropertiesFromObject;\n              _context4.next = 39;\n              return source;\n\n            case 39:\n              _context4.t12 = _context4.sent;\n              _context4.next = 42;\n              return (0, _context4.t11)(_context4.t12);\n\n            case 42:\n              _context4.t13 = _context4.sent;\n              return _context4.abrupt(\"return\", _context4.t9.assign.call(_context4.t9, _context4.t10, _context4.t13));\n\n            case 44:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {});\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nvar readFile = function (from) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.readFile(from, 'utf8', function (error, result) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nvar readJSON = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(from) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.t0 = JSON;\n            _context5.next = 3;\n            return readFile(from);\n\n          case 3:\n            _context5.t1 = _context5.sent;\n            return _context5.abrupt(\"return\", _context5.t0.parse.call(_context5.t0, _context5.t1));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function readJSON(_x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction transformValueAST(root, customProperties) {\n  if (root.nodes && root.nodes.length) {\n    root.nodes.slice().forEach(function (child) {\n      if (isVarFunction(child)) {\n        // eslint-disable-next-line no-unused-vars\n        var _child$nodes$slice = child.nodes.slice(1, -1),\n            _child$nodes$slice2 = _toArray(_child$nodes$slice),\n            propertyNode = _child$nodes$slice2[0],\n            comma = _child$nodes$slice2[1],\n            fallbacks = _child$nodes$slice2.slice(2);\n\n        var name = propertyNode.value;\n\n        if (name in customProperties) {\n          // conditionally replace a known custom property\n          var nodes = asClonedArrayWithBeforeSpacing(customProperties[name], child.raws.before);\n          child.replaceWith.apply(child, _toConsumableArray(nodes));\n          retransformValueAST({\n            nodes\n          }, customProperties, name);\n        } else if (fallbacks.length) {\n          // conditionally replace a custom property with a fallback\n          var _index = root.nodes.indexOf(child);\n\n          if (_index !== -1) {\n            var _root$nodes;\n\n            (_root$nodes = root.nodes).splice.apply(_root$nodes, [_index, 1].concat(_toConsumableArray(asClonedArrayWithBeforeSpacing(fallbacks, child.raws.before))));\n          }\n\n          transformValueAST(root, customProperties);\n        }\n      } else {\n        transformValueAST(child, customProperties);\n      }\n    });\n  }\n\n  return root;\n} // retransform the current ast without a custom property (to prevent recursion)\n\n\nfunction retransformValueAST(root, customProperties, withoutProperty) {\n  var nextCustomProperties = Object.assign({}, customProperties);\n  delete nextCustomProperties[withoutProperty];\n  return transformValueAST(root, nextCustomProperties);\n} // match var() functions\n\n\nvar varRegExp = /^var$/i; // whether the node is a var() function\n\nvar isVarFunction = function (node) {\n  return node.type === 'func' && varRegExp.test(node.value) && Object(node.nodes).length > 0;\n}; // return an array with its nodes cloned, preserving the raw\n\n\nvar asClonedArrayWithBeforeSpacing = function (array, beforeSpacing) {\n  var clonedArray = asClonedArray(array, null);\n\n  if (clonedArray[0]) {\n    clonedArray[0].raws.before = beforeSpacing;\n  }\n\n  return clonedArray;\n}; // return an array with its nodes cloned\n\n\nvar asClonedArray = function (array, parent) {\n  return array.map(function (node) {\n    return asClonedNode(node, parent);\n  });\n}; // return a cloned node\n\n\nvar asClonedNode = function (node, parent) {\n  var cloneNode = new node.constructor(node);\n\n  for (var key in node) {\n    if (key === 'parent') {\n      cloneNode.parent = parent;\n    } else if (Object(node[key]).constructor === Array) {\n      cloneNode[key] = asClonedArray(node.nodes, cloneNode);\n    } else if (Object(node[key]).constructor === Object) {\n      cloneNode[key] = Object.assign({}, node[key]);\n    }\n  }\n\n  return cloneNode;\n};\n\nvar transformProperties = function (root, customProperties, opts) {\n  // walk decls that can be transformed\n  root.walkDecls(function (decl) {\n    if (isTransformableDecl(decl)) {\n      var originalValue = decl.value;\n      var valueAST = (0, _postcssValuesParser.default)(originalValue).parse();\n      var value = String(transformValueAST(valueAST, customProperties)); // conditionally transform values that have changed\n\n      if (value !== originalValue) {\n        if (opts.preserve) {\n          decl.cloneBefore({\n            value\n          });\n        } else {\n          decl.value = value;\n        }\n      }\n    }\n  });\n}; // match custom properties\n\n\nvar customPropertyRegExp$1 = /^--[A-z][\\w-]*$/; // match custom property inclusions\n\nvar customPropertiesRegExp = /(^|[^\\w-])var\\([\\W\\w]+\\)/; // whether the declaration should be potentially transformed\n\nvar isTransformableDecl = function (decl) {\n  return !customPropertyRegExp$1.test(decl.prop) && customPropertiesRegExp.test(decl.value);\n};\n/* Write Custom Properties to CSS File\n/* ========================================================================== */\n\n\nfunction writeCustomPropertiesToCssFile(_x, _x2) {\n  return _writeCustomPropertiesToCssFile.apply(this, arguments);\n}\n/* Write Custom Properties to JSON file\n/* ========================================================================== */\n\n\nfunction _writeCustomPropertiesToCssFile() {\n  _writeCustomPropertiesToCssFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(to, customProperties) {\n    var cssContent, css;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            cssContent = Object.keys(customProperties).reduce(function (cssLines, name) {\n              cssLines.push(\"\\t\".concat(name, \": \").concat(customProperties[name], \";\"));\n              return cssLines;\n            }, []).join('\\n');\n            css = \":root {\\n\".concat(cssContent, \"\\n}\\n\");\n            _context6.next = 4;\n            return writeFile(to, css);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _writeCustomPropertiesToCssFile.apply(this, arguments);\n}\n\nfunction writeCustomPropertiesToJsonFile(_x3, _x4) {\n  return _writeCustomPropertiesToJsonFile.apply(this, arguments);\n}\n/* Write Custom Properties to Common JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomPropertiesToJsonFile() {\n  _writeCustomPropertiesToJsonFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(to, customProperties) {\n    var jsonContent, json;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            jsonContent = JSON.stringify({\n              'custom-properties': customProperties\n            }, null, '  ');\n            json = \"\".concat(jsonContent, \"\\n\");\n            _context7.next = 4;\n            return writeFile(to, json);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _writeCustomPropertiesToJsonFile.apply(this, arguments);\n}\n\nfunction writeCustomPropertiesToCjsFile(_x5, _x6) {\n  return _writeCustomPropertiesToCjsFile.apply(this, arguments);\n}\n/* Write Custom Properties to Module JS file\n/* ========================================================================== */\n\n\nfunction _writeCustomPropertiesToCjsFile() {\n  _writeCustomPropertiesToCjsFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(to, customProperties) {\n    var jsContents, js;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            jsContents = Object.keys(customProperties).reduce(function (jsLines, name) {\n              jsLines.push(\"\\t\\t'\".concat(escapeForJS(name), \"': '\").concat(escapeForJS(customProperties[name]), \"'\"));\n              return jsLines;\n            }, []).join(',\\n');\n            js = \"module.exports = {\\n\\tcustomProperties: {\\n\".concat(jsContents, \"\\n\\t}\\n};\\n\");\n            _context8.next = 4;\n            return writeFile(to, js);\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _writeCustomPropertiesToCjsFile.apply(this, arguments);\n}\n\nfunction writeCustomPropertiesToMjsFile(_x7, _x8) {\n  return _writeCustomPropertiesToMjsFile.apply(this, arguments);\n}\n/* Write Custom Properties to Exports\n/* ========================================================================== */\n\n\nfunction _writeCustomPropertiesToMjsFile() {\n  _writeCustomPropertiesToMjsFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(to, customProperties) {\n    var mjsContents, mjs;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            mjsContents = Object.keys(customProperties).reduce(function (mjsLines, name) {\n              mjsLines.push(\"\\t'\".concat(escapeForJS(name), \"': '\").concat(escapeForJS(customProperties[name]), \"'\"));\n              return mjsLines;\n            }, []).join(',\\n');\n            mjs = \"export const customProperties = {\\n\".concat(mjsContents, \"\\n};\\n\");\n            _context9.next = 4;\n            return writeFile(to, mjs);\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _writeCustomPropertiesToMjsFile.apply(this, arguments);\n}\n\nfunction writeCustomPropertiesToExports(customProperties, destinations) {\n  return Promise.all(destinations.map( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(destination) {\n      var opts, toJSON, to, type, customPropertiesJSON;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!(destination instanceof Function)) {\n                _context10.next = 5;\n                break;\n              }\n\n              _context10.next = 3;\n              return destination(defaultCustomPropertiesToJSON(customProperties));\n\n            case 3:\n              _context10.next = 30;\n              break;\n\n            case 5:\n              // read the destination as an object\n              opts = destination === Object(destination) ? destination : {\n                to: String(destination)\n              }; // transformer for Custom Properties into a JSON-compatible object\n\n              toJSON = opts.toJSON || defaultCustomPropertiesToJSON;\n\n              if (!('customProperties' in opts)) {\n                _context10.next = 11;\n                break;\n              }\n\n              // write directly to an object as customProperties\n              opts.customProperties = toJSON(customProperties);\n              _context10.next = 30;\n              break;\n\n            case 11:\n              if (!('custom-properties' in opts)) {\n                _context10.next = 15;\n                break;\n              }\n\n              // write directly to an object as custom-properties\n              opts['custom-properties'] = toJSON(customProperties);\n              _context10.next = 30;\n              break;\n\n            case 15:\n              // destination pathname\n              to = String(opts.to || ''); // type of file being written to\n\n              type = (opts.type || _path.default.extname(opts.to).slice(1)).toLowerCase(); // transformed Custom Properties\n\n              customPropertiesJSON = toJSON(customProperties);\n\n              if (!(type === 'css')) {\n                _context10.next = 21;\n                break;\n              }\n\n              _context10.next = 21;\n              return writeCustomPropertiesToCssFile(to, customPropertiesJSON);\n\n            case 21:\n              if (!(type === 'js')) {\n                _context10.next = 24;\n                break;\n              }\n\n              _context10.next = 24;\n              return writeCustomPropertiesToCjsFile(to, customPropertiesJSON);\n\n            case 24:\n              if (!(type === 'json')) {\n                _context10.next = 27;\n                break;\n              }\n\n              _context10.next = 27;\n              return writeCustomPropertiesToJsonFile(to, customPropertiesJSON);\n\n            case 27:\n              if (!(type === 'mjs')) {\n                _context10.next = 30;\n                break;\n              }\n\n              _context10.next = 30;\n              return writeCustomPropertiesToMjsFile(to, customPropertiesJSON);\n\n            case 30:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x9) {\n      return _ref.apply(this, arguments);\n    };\n  }()));\n}\n/* Helper utilities\n/* ========================================================================== */\n\n\nvar defaultCustomPropertiesToJSON = function (customProperties) {\n  return Object.keys(customProperties).reduce(function (customPropertiesJSON, key) {\n    customPropertiesJSON[key] = String(customProperties[key]);\n    return customPropertiesJSON;\n  }, {});\n};\n\nvar writeFile = function (to, text) {\n  return new Promise(function (resolve, reject) {\n    _fs.default.writeFile(to, text, function (error) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\nvar escapeForJS = function (string) {\n  return string.replace(/\\\\([\\s\\S])|(')/g, '\\\\$1$2').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n};\n\nvar index = _postcss.default.plugin('postcss-custom-properties', function (opts) {\n  // whether to preserve custom selectors and rules using them\n  var preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : true; // sources to import custom selectors from\n\n  var importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom selectors to\n\n  var exportTo = [].concat(Object(opts).exportTo || []); // promise any custom selectors are imported\n\n  var customPropertiesPromise = getCustomPropertiesFromImports(importFrom);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(root) {\n      var customProperties;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.t0 = Object;\n              _context11.next = 3;\n              return customPropertiesPromise;\n\n            case 3:\n              _context11.t1 = _context11.sent;\n              _context11.t2 = getCustomPropertiesFromRoot(root, {\n                preserve\n              });\n              customProperties = _context11.t0.assign.call(_context11.t0, _context11.t1, _context11.t2);\n              _context11.next = 8;\n              return writeCustomPropertiesToExports(customProperties, exportTo);\n\n            case 8:\n              transformProperties(root, customProperties, {\n                preserve\n              });\n\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});\n\nvar _default = index;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"29c97060eeb8b5be35646a07a57b20bc","cacheData":{"env":{}}}