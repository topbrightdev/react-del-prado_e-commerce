{"id":"../node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"tapable","loc":{"line":7,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/tapable/lib/index.js"},{"name":"./HarmonyImportSideEffectDependency","loc":{"line":8,"column":50},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportSideEffectDependency.js"},{"name":"./HarmonyImportSpecifierDependency","loc":{"line":9,"column":49},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportSpecifierDependency.js"},{"name":"./HarmonyAcceptImportDependency","loc":{"line":10,"column":46},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyAcceptImportDependency.js"},{"name":"./HarmonyAcceptDependency","loc":{"line":11,"column":40},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyAcceptDependency.js"},{"name":"./ConstDependency","loc":{"line":12,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/ConstDependency.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require(\"tapable\"),\n    SyncBailHook = _require.SyncBailHook;\n\nvar HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nvar HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\nvar HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\n\nvar HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\n\nvar ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyImportDependencyParserPlugin(moduleOptions) {\n    _classCallCheck(this, HarmonyImportDependencyParserPlugin);\n\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n    this.strictThisContextOnImports = moduleOptions.strictThisContextOnImports;\n  }\n\n  _createClass(HarmonyImportDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n\n      parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", function (statement, source) {\n        parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n        var clearDep = new ConstDependency(\"\", statement.range);\n        clearDep.loc = statement.loc;\n        parser.state.module.addDependency(clearDep);\n        var sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n        sideEffectDep.loc = statement.loc;\n        parser.state.module.addDependency(sideEffectDep);\n        return true;\n      });\n      parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", function (statement, source, id, name) {\n        parser.scope.definitions.delete(name);\n        parser.scope.renames.set(name, \"imported var\");\n\n        if (!parser.state.harmonySpecifier) {\n          parser.state.harmonySpecifier = new Map();\n        }\n\n        parser.state.harmonySpecifier.set(name, {\n          source,\n          id,\n          sourceOrder: parser.state.lastHarmonyImportOrder\n        });\n        return true;\n      });\n      parser.hooks.expression.for(\"imported var\").tap(\"HarmonyImportDependencyParserPlugin\", function (expr) {\n        var name = expr.name;\n        var settings = parser.state.harmonySpecifier.get(name);\n        var dep = new HarmonyImportSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, expr.range, _this.strictExportPresence);\n        dep.shorthand = parser.scope.inShorthand;\n        dep.directImport = true;\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return true;\n      });\n      parser.hooks.expressionAnyMember.for(\"imported var\").tap(\"HarmonyImportDependencyParserPlugin\", function (expr) {\n        var name = expr.object.name;\n        var settings = parser.state.harmonySpecifier.get(name);\n        if (settings.id !== null) return false;\n        var dep = new HarmonyImportSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, expr.property.name || expr.property.value, name, expr.range, _this.strictExportPresence);\n        dep.shorthand = parser.scope.inShorthand;\n        dep.directImport = false;\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return true;\n      });\n\n      if (this.strictThisContextOnImports) {\n        // only in case when we strictly follow the spec we need a special case here\n        parser.hooks.callAnyMember.for(\"imported var\").tap(\"HarmonyImportDependencyParserPlugin\", function (expr) {\n          if (expr.callee.type !== \"MemberExpression\") return;\n          if (expr.callee.object.type !== \"Identifier\") return;\n          var name = expr.callee.object.name;\n          var settings = parser.state.harmonySpecifier.get(name);\n          if (settings.id !== null) return false;\n          var dep = new HarmonyImportSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, expr.callee.property.name || expr.callee.property.value, name, expr.callee.range, _this.strictExportPresence);\n          dep.shorthand = parser.scope.inShorthand;\n          dep.directImport = false;\n          dep.namespaceObjectAsContext = true;\n          dep.loc = expr.callee.loc;\n          parser.state.module.addDependency(dep);\n          if (expr.arguments) parser.walkExpressions(expr.arguments);\n          return true;\n        });\n      }\n\n      parser.hooks.call.for(\"imported var\").tap(\"HarmonyImportDependencyParserPlugin\", function (expr) {\n        var args = expr.arguments;\n        var fullExpr = expr;\n        expr = expr.callee;\n        if (expr.type !== \"Identifier\") return;\n        var name = expr.name;\n        var settings = parser.state.harmonySpecifier.get(name);\n        var dep = new HarmonyImportSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, expr.range, _this.strictExportPresence);\n        dep.directImport = true;\n        dep.callArgs = args;\n        dep.call = fullExpr;\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        if (args) parser.walkExpressions(args);\n        return true;\n      }); // TODO webpack 5: refactor this, no custom hooks\n\n      if (!parser.hooks.hotAcceptCallback) {\n        parser.hooks.hotAcceptCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n\n      if (!parser.hooks.hotAcceptWithoutCallback) {\n        parser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n\n      parser.hooks.hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", function (expr, requests) {\n        var harmonyParserScope = parser.state.harmonyParserScope;\n\n        if (!harmonyParserScope) {\n          // This is not a harmony module, skip it\n          return;\n        }\n\n        var dependencies = requests.map(function (request) {\n          var dep = new HarmonyAcceptImportDependency(request, parser.state.module, harmonyParserScope);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n          return dep;\n        });\n\n        if (dependencies.length > 0) {\n          var dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n        }\n      });\n      parser.hooks.hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", function (expr, requests) {\n        var dependencies = requests.map(function (request) {\n          var dep = new HarmonyAcceptImportDependency(request, parser.state.module, parser.state.harmonyParserScope);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n          return dep;\n        });\n\n        if (dependencies.length > 0) {\n          var dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n        }\n      });\n    }\n  }]);\n\n  return HarmonyImportDependencyParserPlugin;\n}();"},"sourceMaps":null,"error":null,"hash":"2a864d633c004523ba35e3705d889e22","cacheData":{"env":{}}}