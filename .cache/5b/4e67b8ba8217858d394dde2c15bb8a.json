{"id":"../node_modules/hpack.js/lib/hpack/encoder.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/hpack.js/package.json","includedInParent":true,"mtime":1594306880054},{"name":"../hpack","loc":{"line":1,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/hpack.js/lib/hpack/encoder.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/hpack.js/lib/hpack.js"},{"name":"wbuf","loc":{"line":6,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/hpack.js/lib/hpack/encoder.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/wbuf/index.js"}],"generated":{"js":"var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar huffman = hpack.huffman.encode;\nvar assert = utils.assert;\n\nvar WBuf = require('wbuf');\n\nfunction Encoder() {\n  this.buffer = new WBuf();\n  this.word = 0;\n  this.bitOffset = 0;\n}\nmodule.exports = Encoder;\n\nEncoder.create = function create() {\n  return new Encoder();\n};\n\nEncoder.prototype.render = function render() {\n  return this.buffer.render();\n};\n\nEncoder.prototype.encodeBit = function encodeBit(bit) {\n  var octet;\n\n  this.word <<= 1;\n  this.word |= bit;\n  this.bitOffset++;\n\n  if (this.bitOffset === 8) {\n    this.buffer.writeUInt8(this.word);\n    this.word = 0;\n    this.bitOffset = 0;\n  }\n};\n\nEncoder.prototype.encodeBits = function encodeBits(bits, len) {\n  var left = bits;\n  var leftLen = len;\n\n  while (leftLen > 0) {\n    var avail = Math.min(leftLen, 8 - this.bitOffset);\n    var toWrite = left >>> (leftLen - avail);\n\n    if (avail === 8) {\n      this.buffer.writeUInt8(toWrite);\n    } else {\n      this.word <<= avail;\n      this.word |= toWrite;\n      this.bitOffset += avail;\n      if (this.bitOffset === 8) {\n        this.buffer.writeUInt8(this.word);\n        this.word = 0;\n        this.bitOffset = 0;\n      }\n    }\n\n    leftLen -= avail;\n    left &= (1 << leftLen) - 1;\n  }\n};\n\n// Just for testing\nEncoder.prototype.skipBits = function skipBits(num) {\n  this.bitOffset += num;\n  this.buffer.skip(this.bitOffset >> 3);\n  this.bitOffset &= 0x7;\n};\n\nEncoder.prototype.encodeInt = function encodeInt(num) {\n  var prefix = 8 - this.bitOffset;\n\n  // We are going to end up octet-aligned\n  this.bitOffset = 0;\n\n  var max = (1 << prefix) - 1;\n\n  // Fast case - int fits into the prefix\n  if (num < max) {\n    this.buffer.writeUInt8((this.word << prefix) | num);\n    return octet;\n  }\n\n  var left = num - max;\n  this.buffer.writeUInt8((this.word << prefix) | max);\n  do {\n    var octet = left & 0x7f;\n    left >>= 7;\n    if (left !== 0)\n      octet |= 0x80;\n\n    this.buffer.writeUInt8(octet);\n  } while (left !== 0);\n};\n\nEncoder.prototype.encodeStr = function encodeStr(value, isHuffman) {\n  this.encodeBit(isHuffman ? 1 : 0);\n\n  if (!isHuffman) {\n    this.buffer.reserve(value.length + 1);\n    this.encodeInt(value.length);\n    for (var i = 0; i < value.length; i++)\n      this.buffer.writeUInt8(value[i]);\n    return;\n  }\n\n  var codes = [];\n  var len = 0;\n  var pad = 0;\n\n  for (var i = 0; i < value.length; i++) {\n    var code = huffman[value[i]];\n    codes.push(code);\n    len += code[0];\n  }\n  if (len % 8 !== 0)\n    pad = 8 - (len % 8);\n  len += pad;\n\n  this.buffer.reserve((len / 8) + 1);\n  this.encodeInt(len / 8);\n  for (var i = 0; i < codes.length; i++) {\n    var code = codes[i];\n    this.encodeBits(code[1], code[0]);\n  }\n\n  // Append padding\n  this.encodeBits(0xff >>> (8 - pad), pad);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/hpack.js/lib/hpack/encoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}}],"sources":{"../node_modules/hpack.js/lib/hpack/encoder.js":"var hpack = require('../hpack');\nvar utils = hpack.utils;\nvar huffman = hpack.huffman.encode;\nvar assert = utils.assert;\n\nvar WBuf = require('wbuf');\n\nfunction Encoder() {\n  this.buffer = new WBuf();\n  this.word = 0;\n  this.bitOffset = 0;\n}\nmodule.exports = Encoder;\n\nEncoder.create = function create() {\n  return new Encoder();\n};\n\nEncoder.prototype.render = function render() {\n  return this.buffer.render();\n};\n\nEncoder.prototype.encodeBit = function encodeBit(bit) {\n  var octet;\n\n  this.word <<= 1;\n  this.word |= bit;\n  this.bitOffset++;\n\n  if (this.bitOffset === 8) {\n    this.buffer.writeUInt8(this.word);\n    this.word = 0;\n    this.bitOffset = 0;\n  }\n};\n\nEncoder.prototype.encodeBits = function encodeBits(bits, len) {\n  var left = bits;\n  var leftLen = len;\n\n  while (leftLen > 0) {\n    var avail = Math.min(leftLen, 8 - this.bitOffset);\n    var toWrite = left >>> (leftLen - avail);\n\n    if (avail === 8) {\n      this.buffer.writeUInt8(toWrite);\n    } else {\n      this.word <<= avail;\n      this.word |= toWrite;\n      this.bitOffset += avail;\n      if (this.bitOffset === 8) {\n        this.buffer.writeUInt8(this.word);\n        this.word = 0;\n        this.bitOffset = 0;\n      }\n    }\n\n    leftLen -= avail;\n    left &= (1 << leftLen) - 1;\n  }\n};\n\n// Just for testing\nEncoder.prototype.skipBits = function skipBits(num) {\n  this.bitOffset += num;\n  this.buffer.skip(this.bitOffset >> 3);\n  this.bitOffset &= 0x7;\n};\n\nEncoder.prototype.encodeInt = function encodeInt(num) {\n  var prefix = 8 - this.bitOffset;\n\n  // We are going to end up octet-aligned\n  this.bitOffset = 0;\n\n  var max = (1 << prefix) - 1;\n\n  // Fast case - int fits into the prefix\n  if (num < max) {\n    this.buffer.writeUInt8((this.word << prefix) | num);\n    return octet;\n  }\n\n  var left = num - max;\n  this.buffer.writeUInt8((this.word << prefix) | max);\n  do {\n    var octet = left & 0x7f;\n    left >>= 7;\n    if (left !== 0)\n      octet |= 0x80;\n\n    this.buffer.writeUInt8(octet);\n  } while (left !== 0);\n};\n\nEncoder.prototype.encodeStr = function encodeStr(value, isHuffman) {\n  this.encodeBit(isHuffman ? 1 : 0);\n\n  if (!isHuffman) {\n    this.buffer.reserve(value.length + 1);\n    this.encodeInt(value.length);\n    for (var i = 0; i < value.length; i++)\n      this.buffer.writeUInt8(value[i]);\n    return;\n  }\n\n  var codes = [];\n  var len = 0;\n  var pad = 0;\n\n  for (var i = 0; i < value.length; i++) {\n    var code = huffman[value[i]];\n    codes.push(code);\n    len += code[0];\n  }\n  if (len % 8 !== 0)\n    pad = 8 - (len % 8);\n  len += pad;\n\n  this.buffer.reserve((len / 8) + 1);\n  this.encodeInt(len / 8);\n  for (var i = 0; i < codes.length; i++) {\n    var code = codes[i];\n    this.encodeBits(code[1], code[0]);\n  }\n\n  // Append padding\n  this.encodeBits(0xff >>> (8 - pad), pad);\n};\n"},"lineCount":130}},"error":null,"hash":"7954275c7fb0fee07826a9c3f84f856a","cacheData":{"env":{}}}