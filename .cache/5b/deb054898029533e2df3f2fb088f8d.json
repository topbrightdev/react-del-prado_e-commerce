{"id":"../node_modules/react-dev-utils/noopServiceWorkerMiddleware.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nmodule.exports = function createNoopServiceWorkerMiddleware() {\n  return function noopServiceWorkerMiddleware(req, res, next) {\n    if (req.url === '/service-worker.js') {\n      res.setHeader('Content-Type', 'text/javascript');\n      res.send(\"// This service worker file is effectively a 'no-op' that will reset any\\n// previous service worker registered for the same host:port combination.\\n// In the production build, this file is replaced with an actual service worker\\n// file that will precache your site's local assets.\\n// See https://github.com/facebook/create-react-app/issues/2272#issuecomment-302832432\\n\\nself.addEventListener('install', () => self.skipWaiting());\\n\\nself.addEventListener('activate', () => {\\n  self.clients.matchAll({ type: 'window' }).then(windowClients => {\\n    for (let windowClient of windowClients) {\\n      // Force open pages to refresh, so that they have a chance to load the\\n      // fresh navigation response from the local dev server.\\n      windowClient.navigate(windowClient.url);\\n    }\\n  });\\n});\\n\");\n    } else {\n      next();\n    }\n  };\n};"},"sourceMaps":null,"error":null,"hash":"7c446da93b99735f82529b44906c7514","cacheData":{"env":{}}}