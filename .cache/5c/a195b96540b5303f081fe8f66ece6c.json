{"id":"../node_modules/fork-ts-checker-webpack-plugin-alt/lib/formatter/codeframeFormatter.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/package.json","includedInParent":true,"mtime":1594306880006},{"name":"os","loc":{"line":3,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/formatter/codeframeFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/os-browserify/browser.js"},{"name":"babel-code-frame","loc":{"line":4,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/formatter/codeframeFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-code-frame/lib/index.js"},{"name":"chalk","loc":{"line":5,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/formatter/codeframeFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"fs","loc":{"line":6,"column":17},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/formatter/codeframeFormatter.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar os = require(\"os\");\n\nvar codeFrame = require(\"babel-code-frame\");\n\nvar chalk_1 = require(\"chalk\");\n\nvar fs = require(\"fs\");\n/**\n * Create new code frame formatter.\n *\n * @param options Options for babel-code-frame - see https://www.npmjs.com/package/babel-code-frame\n * @returns {codeframeFormatter}\n */\n\n\nfunction createCodeframeFormatter(options) {\n  return function codeframeFormatter(message, useColors) {\n    var colors = new chalk_1.default.constructor({\n      enabled: useColors\n    });\n    var messageColor = message.isWarningSeverity() ? colors.bold.yellow : colors.bold.red;\n    var positionColor = colors.dim;\n    var source = message.getFile() && fs.existsSync(message.getFile()) && fs.readFileSync(message.getFile(), 'utf-8');\n    var frame = '';\n\n    if (source) {\n      frame = codeFrame(source, message.line, message.character, Object.assign({}, options || {}, {\n        highlightCode: useColors\n      })).split('\\n').map(function (str) {\n        return '  ' + str;\n      }).join(os.EOL);\n    }\n\n    return messageColor(message.getSeverity().toUpperCase() + ' in ' + message.getFile()) + os.EOL + positionColor(message.getLine() + ':' + message.getCharacter()) + ' ' + message.getContent() + (frame ? os.EOL + frame : '');\n  };\n}\n\nexports.createCodeframeFormatter = createCodeframeFormatter;"},"sourceMaps":null,"error":null,"hash":"c0b63125659f597f95596cf8b094f6d7","cacheData":{"env":{}}}