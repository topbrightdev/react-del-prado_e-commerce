{"id":"../node_modules/webpack/schemas/plugins/SourceMapDevToolPlugin.json","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161}],"generated":{"js":"module.exports = {\n  \"definitions\": {\n    \"rule\": {\n      \"oneOf\": [{\n        \"instanceof\": \"RegExp\",\n        \"tsType\": \"RegExp\"\n      }, {\n        \"type\": \"string\",\n        \"minLength\": 1\n      }]\n    },\n    \"rules\": {\n      \"oneOf\": [{\n        \"type\": \"array\",\n        \"items\": {\n          \"description\": \"A rule condition\",\n          \"anyOf\": [{\n            \"$ref\": \"#/definitions/rule\"\n          }]\n        }\n      }, {\n        \"$ref\": \"#/definitions/rule\"\n      }]\n    }\n  },\n  \"title\": \"SourceMapDevToolPluginOptions\",\n  \"type\": \"object\",\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"append\": {\n      \"description\": \"Appends the given value to the original asset. Usually the #sourceMappingURL comment. [url] is replaced with a URL to the source map file. false disables the appending\",\n      \"oneOf\": [{\n        \"description\": \"Append no SourceMap comment to the bundle, but still generate SourceMaps\",\n        \"enum\": [false, null]\n      }, {\n        \"type\": \"string\",\n        \"minLength\": 1\n      }]\n    },\n    \"columns\": {\n      \"description\": \"Indicates whether column mappings should be used (defaults to true)\",\n      \"type\": \"boolean\"\n    },\n    \"exclude\": {\n      \"description\": \"Exclude modules that match the given value from source map generation\",\n      \"anyOf\": [{\n        \"$ref\": \"#/definitions/rules\"\n      }]\n    },\n    \"fallbackModuleFilenameTemplate\": {\n      \"description\": \"Generator string or function to create identifiers of modules for the 'sources' array in the SourceMap used only if 'moduleFilenameTemplate' would result in a conflict\",\n      \"oneOf\": [{\n        \"description\": \"Custom function generating the identifer\",\n        \"instanceof\": \"Function\",\n        \"tsType\": \"Function\"\n      }, {\n        \"type\": \"string\",\n        \"minLength\": 1\n      }]\n    },\n    \"fileContext\": {\n      \"description\": \"Path prefix to which the [file] placeholder is relative to\",\n      \"type\": \"string\"\n    },\n    \"filename\": {\n      \"description\": \"Defines the output filename of the SourceMap (will be inlined if no value is provided)\",\n      \"oneOf\": [{\n        \"description\": \"Disable separate SourceMap file and inline SourceMap as DataUrl\",\n        \"enum\": [false, null]\n      }, {\n        \"type\": \"string\",\n        \"absolutePath\": false,\n        \"minLength\": 1\n      }]\n    },\n    \"include\": {\n      \"description\": \"Include source maps for module paths that match the given value\",\n      \"anyOf\": [{\n        \"$ref\": \"#/definitions/rules\"\n      }]\n    },\n    \"lineToLine\": {\n      \"description\": \"(deprecated) try to map original files line to line to generated files\",\n      \"anyOf\": [{\n        \"type\": \"boolean\"\n      }, {\n        \"description\": \"Simplify and speed up source mapping by using line to line source mappings for matched modules\",\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"exclude\": {\n            \"description\": \"Exclude modules that match the given value from source map generation\",\n            \"anyOf\": [{\n              \"$ref\": \"#/definitions/rules\"\n            }]\n          },\n          \"include\": {\n            \"description\": \"Include source maps for module paths that match the given value\",\n            \"anyOf\": [{\n              \"$ref\": \"#/definitions/rules\"\n            }]\n          },\n          \"test\": {\n            \"description\": \"Include source maps for modules based on their extension (defaults to .js and .css)\",\n            \"anyOf\": [{\n              \"$ref\": \"#/definitions/rules\"\n            }]\n          }\n        }\n      }]\n    },\n    \"module\": {\n      \"description\": \"Indicates whether SourceMaps from loaders should be used (defaults to true)\",\n      \"type\": \"boolean\"\n    },\n    \"moduleFilenameTemplate\": {\n      \"description\": \"Generator string or function to create identifiers of modules for the 'sources' array in the SourceMap\",\n      \"oneOf\": [{\n        \"description\": \"Custom function generating the identifer\",\n        \"instanceof\": \"Function\",\n        \"tsType\": \"Function\"\n      }, {\n        \"type\": \"string\",\n        \"minLength\": 1\n      }]\n    },\n    \"namespace\": {\n      \"description\": \"Namespace prefix to allow multiple webpack roots in the devtools\",\n      \"type\": \"string\"\n    },\n    \"noSources\": {\n      \"description\": \"Omit the 'sourceContents' array from the SourceMap\",\n      \"type\": \"boolean\"\n    },\n    \"publicPath\": {\n      \"description\": \"Provide a custom public path for the SourceMapping comment\",\n      \"type\": \"string\"\n    },\n    \"sourceRoot\": {\n      \"description\": \"Provide a custom value for the 'sourceRoot' property in the SourceMap\",\n      \"type\": \"string\"\n    },\n    \"test\": {\n      \"description\": \"Include source maps for modules based on their extension (defaults to .js and .css)\",\n      \"anyOf\": [{\n        \"$ref\": \"#/definitions/rules\"\n      }]\n    }\n  }\n};"},"sourceMaps":null,"error":null,"hash":"87932cd5d8807a49e3fd73feda7764e7","cacheData":{"env":{}}}