{"id":"../node_modules/inquirer/lib/utils/events.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/package.json","includedInParent":true,"mtime":1594570878526},{"name":"rxjs","loc":{"line":2,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/events.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/index.js"},{"name":"rxjs/operators","loc":{"line":3,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/events.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/operators/index.js"}],"generated":{"js":"'use strict';\n\nvar {\n  fromEvent\n} = require('rxjs');\n\nvar {\n  filter,\n  map,\n  share\n} = require('rxjs/operators');\n\nfunction normalizeKeypressEvents(value, key) {\n  return {\n    value: value,\n    key: key || {}\n  };\n}\n\nmodule.exports = function (rl) {\n  var keypress = fromEvent(rl.input, 'keypress', normalizeKeypressEvents) // Ignore `enter` key. On the readline, we only care about the `line` event.\n  .pipe(filter(function (_ref) {\n    var {\n      key\n    } = _ref;\n    return key.name !== 'enter' && key.name !== 'return';\n  }));\n  return {\n    line: fromEvent(rl, 'line'),\n    keypress: keypress,\n    normalizedUpKey: keypress.pipe(filter(function (_ref2) {\n      var {\n        key\n      } = _ref2;\n      return key.name === 'up' || key.name === 'k' || key.name === 'p' && key.ctrl;\n    }), share()),\n    normalizedDownKey: keypress.pipe(filter(function (_ref3) {\n      var {\n        key\n      } = _ref3;\n      return key.name === 'down' || key.name === 'j' || key.name === 'n' && key.ctrl;\n    }), share()),\n    numberKey: keypress.pipe(filter(function (e) {\n      return e.value && '123456789'.indexOf(e.value) >= 0;\n    }), map(function (e) {\n      return Number(e.value);\n    }), share()),\n    spaceKey: keypress.pipe(filter(function (_ref4) {\n      var {\n        key\n      } = _ref4;\n      return key && key.name === 'space';\n    }), share()),\n    aKey: keypress.pipe(filter(function (_ref5) {\n      var {\n        key\n      } = _ref5;\n      return key && key.name === 'a';\n    }), share()),\n    iKey: keypress.pipe(filter(function (_ref6) {\n      var {\n        key\n      } = _ref6;\n      return key && key.name === 'i';\n    }), share())\n  };\n};"},"sourceMaps":null,"error":null,"hash":"5fcda24c7318996f2c7ff982274a2ec6","cacheData":{"env":{}}}