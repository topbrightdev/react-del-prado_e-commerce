{"id":"../node_modules/http-proxy/lib/http-proxy.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/package.json","includedInParent":true,"mtime":1594717993842},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/http-proxy/package.json","includedInParent":true,"mtime":1594570879338},{"name":"./http-proxy/index.js","loc":{"line":2,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/http-proxy/lib/http-proxy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/http-proxy/lib/http-proxy/index.js"}],"generated":{"js":"// Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nvar ProxyServer = require('./http-proxy/index.js').Server;\n/**\n * Creates the proxy server.\n *\n * Examples:\n *\n *    httpProxy.createProxyServer({ .. }, 8000)\n *    // => '{ web: [Function], ws: [Function] ... }'\n *\n * @param {Object} Options Config object passed to the proxy\n *\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\n *\n * @api public\n */\n\n\nfunction createProxyServer(options) {\n  /*\n   *  `options` is needed and it must have the following layout:\n   *\n   *  {\n   *    target : <url string to be parsed with the url module>\n   *    forward: <url string to be parsed with the url module>\n   *    agent  : <object to be passed to http(s).request>\n   *    ssl    : <object to be passed to https.createServer()>\n   *    ws     : <true/false, if you want to proxy websockets>\n   *    xfwd   : <true/false, adds x-forward headers>\n   *    secure : <true/false, verify SSL certificate>\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\n   *    localAddress : <Local interface string to bind for outgoing connections>\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\n   *    hostRewrite: rewrites the location hostname on (301/302/307/308) redirects, Default: null.\n   *    autoRewrite: rewrites the location host/port on (301/302/307/308) redirects based on requested host/port. Default: false.\n   *    protocolRewrite: rewrites the location protocol on (301/302/307/308) redirects to 'http' or 'https'. Default: null.\n   *  }\n   *\n   *  NOTE: `options.ws` and `options.ssl` are optional.\n   *    `options.target and `options.forward` cannot be\n   *    both missing\n   *  }\n   */\n  return new ProxyServer(options);\n}\n\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer = createProxyServer;\nProxyServer.createProxy = createProxyServer;\n/**\n * Export the proxy \"Server\" as the main export.\n */\n\nmodule.exports = ProxyServer;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":1,"column":1}},{"generated":{"line":2,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":0}},{"name":"ProxyServer","generated":{"line":2,"column":4},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":4}},{"generated":{"line":2,"column":15},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":15}},{"name":"require","generated":{"line":2,"column":18},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":18}},{"generated":{"line":2,"column":25},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":25}},{"generated":{"line":2,"column":26},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":26}},{"generated":{"line":2,"column":49},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":25}},{"generated":{"line":2,"column":50},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":18}},{"name":"Server","generated":{"line":2,"column":51},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":51}},{"generated":{"line":2,"column":57},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":0}},{"name":"createProxyServer","generated":{"line":19,"column":9},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":9}},{"generated":{"line":19,"column":26},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":0}},{"name":"options","generated":{"line":19,"column":27},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":27}},{"generated":{"line":19,"column":34},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":36},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":21,"column":36}},{"generated":{"line":20,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":22,"column":2}},{"generated":{"line":48,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":2}},{"generated":{"line":48,"column":9},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":9}},{"name":"ProxyServer","generated":{"line":48,"column":13},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":13}},{"generated":{"line":48,"column":24},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":9}},{"name":"options","generated":{"line":48,"column":25},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":25}},{"generated":{"line":48,"column":32},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":9}},{"generated":{"line":48,"column":33},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":51,"column":2}},{"generated":{"line":49,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":52,"column":1}},{"name":"ProxyServer","generated":{"line":51,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":0}},{"generated":{"line":51,"column":11},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":11}},{"name":"createProxyServer","generated":{"line":51,"column":12},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":12}},{"generated":{"line":51,"column":29},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":0}},{"name":"createProxyServer","generated":{"line":51,"column":32},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":32}},{"generated":{"line":51,"column":49},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":55,"column":0}},{"name":"ProxyServer","generated":{"line":52,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":0}},{"generated":{"line":52,"column":11},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":11}},{"name":"createServer","generated":{"line":52,"column":12},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":12}},{"generated":{"line":52,"column":24},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":0}},{"name":"createProxyServer","generated":{"line":52,"column":27},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":32}},{"generated":{"line":52,"column":44},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":56,"column":0}},{"name":"ProxyServer","generated":{"line":53,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":0}},{"generated":{"line":53,"column":11},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":11}},{"name":"createProxy","generated":{"line":53,"column":12},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":12}},{"generated":{"line":53,"column":23},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":0}},{"name":"createProxyServer","generated":{"line":53,"column":26},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":32}},{"generated":{"line":53,"column":43},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":57,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":62,"column":0}},{"name":"module","generated":{"line":58,"column":0},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":0}},{"generated":{"line":58,"column":6},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":6}},{"name":"exports","generated":{"line":58,"column":7},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":7}},{"generated":{"line":58,"column":14},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":0}},{"name":"ProxyServer","generated":{"line":58,"column":17},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":17}},{"generated":{"line":58,"column":28},"source":"../node_modules/http-proxy/lib/http-proxy.js","original":{"line":65,"column":0}}],"sources":{"../node_modules/http-proxy/lib/http-proxy.js":" // Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nvar ProxyServer = require('./http-proxy/index.js').Server;\n\n\n/**\n * Creates the proxy server.\n *\n * Examples:\n *\n *    httpProxy.createProxyServer({ .. }, 8000)\n *    // => '{ web: [Function], ws: [Function] ... }'\n *\n * @param {Object} Options Config object passed to the proxy\n *\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\n *\n * @api public\n */\n\n\nfunction createProxyServer(options) {\n  /*\n   *  `options` is needed and it must have the following layout:\n   *\n   *  {\n   *    target : <url string to be parsed with the url module>\n   *    forward: <url string to be parsed with the url module>\n   *    agent  : <object to be passed to http(s).request>\n   *    ssl    : <object to be passed to https.createServer()>\n   *    ws     : <true/false, if you want to proxy websockets>\n   *    xfwd   : <true/false, adds x-forward headers>\n   *    secure : <true/false, verify SSL certificate>\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\n   *    localAddress : <Local interface string to bind for outgoing connections>\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\n   *    hostRewrite: rewrites the location hostname on (301/302/307/308) redirects, Default: null.\n   *    autoRewrite: rewrites the location host/port on (301/302/307/308) redirects based on requested host/port. Default: false.\n   *    protocolRewrite: rewrites the location protocol on (301/302/307/308) redirects to 'http' or 'https'. Default: null.\n   *  }\n   *\n   *  NOTE: `options.ws` and `options.ssl` are optional.\n   *    `options.target and `options.forward` cannot be\n   *    both missing\n   *  }\n   */\n\n  return new ProxyServer(options);\n}\n\n\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer      = createProxyServer;\nProxyServer.createProxy       = createProxyServer;\n\n\n\n\n/**\n * Export the proxy \"Server\" as the main export.\n */\nmodule.exports = ProxyServer;\n\n"},"lineCount":null}},"error":null,"hash":"538e65ee482e4c0867e325b65f933377","cacheData":{"env":{}}}