{"id":"../node_modules/util.promisify/implementation.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util.promisify/package.json","includedInParent":true,"mtime":1594570878478},{"name":"object.getownpropertydescriptors","loc":{"line":12,"column":40},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util.promisify/implementation.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/object.getownpropertydescriptors/index.js"}],"generated":{"js":"'use strict';\n\nvar isES5 = typeof Object.defineProperty === 'function'\n\t&& typeof Object.defineProperties === 'function'\n\t&& typeof Object.getPrototypeOf === 'function'\n\t&& typeof Object.setPrototypeOf === 'function';\n\nif (!isES5) {\n\tthrow new TypeError('util.promisify requires a true ES5 environment');\n}\n\nvar getOwnPropertyDescriptors = require('object.getownpropertydescriptors');\n\nif (typeof Promise !== 'function') {\n\tthrow new TypeError('`Promise` must be globally available for util.promisify to work.');\n}\n\nvar slice = Function.call.bind(Array.prototype.slice);\nvar concat = Function.call.bind(Array.prototype.concat);\nvar forEach = Function.call.bind(Array.prototype.forEach);\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('') === 'symbol';\n\nvar kCustomPromisifiedSymbol = hasSymbols ? Symbol('util.promisify.custom') : null;\nvar kCustomPromisifyArgsSymbol = hasSymbols ? Symbol('customPromisifyArgs') : null;\n\nmodule.exports = function promisify(orig) {\n\tif (typeof orig !== 'function') {\n\t\tvar error = new TypeError('The \"original\" argument must be of type function');\n\t\terror.name = 'TypeError [ERR_INVALID_ARG_TYPE]';\n\t\terror.code = 'ERR_INVALID_ARG_TYPE';\n\t\tthrow error;\n\t}\n\n\tif (hasSymbols && orig[kCustomPromisifiedSymbol]) {\n\t\tvar customFunction = orig[kCustomPromisifiedSymbol];\n\t\tif (typeof customFunction !== 'function') {\n\t\t\tthrow new TypeError('The [util.promisify.custom] property must be a function');\n\t\t}\n\t\tObject.defineProperty(customFunction, kCustomPromisifiedSymbol, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: customFunction,\n\t\t\twritable: false\n\t\t});\n\t\treturn customFunction;\n\t}\n\n\t// Names to create an object from in case the callback receives multiple\n\t// arguments, e.g. ['stdout', 'stderr'] for child_process.exec.\n\tvar argumentNames = orig[kCustomPromisifyArgsSymbol];\n\n\tvar promisified = function fn() {\n\t\tvar args = slice(arguments);\n\t\tvar self = this; // eslint-disable-line no-invalid-this\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\torig.apply(self, concat(args, function (err) {\n\t\t\t\tvar values = arguments.length > 1 ? slice(arguments, 1) : [];\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else if (typeof argumentNames !== 'undefined' && values.length > 1) {\n\t\t\t\t\tvar obj = {};\n\t\t\t\t\tforEach(argumentNames, function (name, index) {\n\t\t\t\t\t\tobj[name] = values[index];\n\t\t\t\t\t});\n\t\t\t\t\tresolve(obj);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(values[0]);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t};\n\n\tObject.setPrototypeOf(promisified, Object.getPrototypeOf(orig));\n\n\tObject.defineProperty(promisified, kCustomPromisifiedSymbol, {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: promisified,\n\t\twritable: false\n\t});\n\treturn Object.defineProperties(promisified, getOwnPropertyDescriptors(orig));\n};\n\nmodule.exports.custom = kCustomPromisifiedSymbol;\nmodule.exports.customPromisifyArgs = kCustomPromisifyArgsSymbol;\n"},"sourceMaps":null,"error":null,"hash":"d238239db048fb9df01463b25dcd76e0","cacheData":{"env":{}}}