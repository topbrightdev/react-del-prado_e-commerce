{"id":"../node_modules/webpack/node_modules/worker-farm/lib/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/worker-farm/package.json","includedInParent":true,"mtime":1594570878398},{"name":"./farm","loc":{"line":3,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/worker-farm/lib/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/worker-farm/lib/farm.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/worker-farm/lib/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict'\n\nconst Farm = require('./farm')\n\nlet farms = [] // keep record of farms so we can end() them if required\n\n\nfunction farm (options, path, methods) {\n  if (typeof options == 'string') {\n    methods = path\n    path = options\n    options = {}\n  }\n\n  let f   = new Farm(options, path)\n    , api = f.setup(methods)\n\n  farms.push({ farm: f, api: api })\n\n  // return the public API\n  return api\n}\n\n\nfunction end (api, callback) {\n  for (let i = 0; i < farms.length; i++)\n    if (farms[i] && farms[i].api === api)\n      return farms[i].farm.end(callback)\n  process.nextTick(callback.bind(null, new Error('Worker farm not found!')))\n}\n\n\nmodule.exports     = farm\nmodule.exports.end = end\n"},"sourceMaps":null,"error":null,"hash":"338f2d5294d45e44e12582bdd16304b0","cacheData":{"env":{}}}