{"id":"../node_modules/source-list-map/lib/base64-vlq.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/source-list-map/package.json","includedInParent":true,"mtime":1594306881450}],"generated":{"js":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*eslint no-bitwise:0,quotes:0,global-strict:0*/\n\nvar charToIntMap = {};\nvar intToCharMap = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  .split('')\n  .forEach(function (ch, index) {\n    charToIntMap[ch] = index;\n    intToCharMap[index] = ch;\n  });\n\nvar base64 = {};\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nbase64.encode = function base64_encode(aNumber) {\n  if (aNumber in intToCharMap) {\n    return intToCharMap[aNumber];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n};\n\n/**\n * Decode a single base 64 digit to an integer.\n */\nbase64.decode = function base64_decode(aChar) {\n  if (aChar in charToIntMap) {\n    return charToIntMap[aChar];\n  }\n  throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n};\n\n\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aOutParam) {\n  var i = 0;\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (i >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n    digit = base64.decode(aStr.charAt(i++));\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aStr.slice(i);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/source-list-map/lib/base64-vlq.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}}],"sources":{"../node_modules/source-list-map/lib/base64-vlq.js":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*eslint no-bitwise:0,quotes:0,global-strict:0*/\n\nvar charToIntMap = {};\nvar intToCharMap = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  .split('')\n  .forEach(function (ch, index) {\n    charToIntMap[ch] = index;\n    intToCharMap[index] = ch;\n  });\n\nvar base64 = {};\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nbase64.encode = function base64_encode(aNumber) {\n  if (aNumber in intToCharMap) {\n    return intToCharMap[aNumber];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n};\n\n/**\n * Decode a single base 64 digit to an integer.\n */\nbase64.decode = function base64_decode(aChar) {\n  if (aChar in charToIntMap) {\n    return charToIntMap[aChar];\n  }\n  throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n};\n\n\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aOutParam) {\n  var i = 0;\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (i >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n    digit = base64.decode(aStr.charAt(i++));\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aStr.slice(i);\n};\n"},"lineCount":170}},"error":null,"hash":"5f556a0a2787cc0b8576e742fb426b14","cacheData":{"env":{}}}