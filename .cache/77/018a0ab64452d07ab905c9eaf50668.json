{"id":"start.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"../config/env","loc":{"line":15,"column":8},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/env.js"},{"name":"fs","loc":{"line":18,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"chalk","loc":{"line":19,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"webpack","loc":{"line":20,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/webpack.js"},{"name":"webpack-dev-server","loc":{"line":21,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-dev-server/lib/Server.js"},{"name":"react-dev-utils/clearConsole","loc":{"line":22,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/clearConsole.js"},{"name":"react-dev-utils/checkRequiredFiles","loc":{"line":23,"column":35},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/checkRequiredFiles.js"},{"name":"react-dev-utils/WebpackDevServerUtils","loc":{"line":29,"column":12},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/WebpackDevServerUtils.js"},{"name":"react-dev-utils/openBrowser","loc":{"line":30,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/openBrowser.js"},{"name":"../config/paths","loc":{"line":31,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/paths.js"},{"name":"../config/webpack.config.dev","loc":{"line":32,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js"},{"name":"../config/webpackDevServer.config","loc":{"line":33,"column":38},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpackDevServer.config.js"},{"name":"react-dev-utils/browsersHelper","loc":{"line":66,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/browsersHelper.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/scripts/start.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict'; // Do this as the first thing so that any code reading it knows the right env.\n\nundefined = 'development';\n\"development\" = 'development'; // Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\n\nprocess.on('unhandledRejection', function (err) {\n  throw err;\n}); // Ensure environment variables are read.\n\nrequire('../config/env');\n\nvar fs = require('fs');\n\nvar chalk = require('chalk');\n\nvar webpack = require('webpack');\n\nvar WebpackDevServer = require('webpack-dev-server');\n\nvar clearConsole = require('react-dev-utils/clearConsole');\n\nvar checkRequiredFiles = require('react-dev-utils/checkRequiredFiles');\n\nvar _require = require('react-dev-utils/WebpackDevServerUtils'),\n    choosePort = _require.choosePort,\n    createCompiler = _require.createCompiler,\n    prepareProxy = _require.prepareProxy,\n    prepareUrls = _require.prepareUrls;\n\nvar openBrowser = require('react-dev-utils/openBrowser');\n\nvar paths = require('../config/paths');\n\nvar config = require('../config/webpack.config.dev');\n\nvar createDevServerConfig = require('../config/webpackDevServer.config');\n\nvar useYarn = fs.existsSync(paths.yarnLockFile);\nvar isInteractive = process.stdout.isTTY; // Warn and crash if required files are missing\n\nif (!checkRequiredFiles([paths.appHtml, paths.appIndexJs])) {\n  process.exit(1);\n} // Tools like Cloud9 rely on this.\n\n\nvar DEFAULT_PORT = parseInt(undefined, 10) || 3000;\nvar HOST = undefined || '0.0.0.0';\n\nif (undefined) {\n  console.log(chalk.cyan(\"Attempting to bind to HOST environment variable: \".concat(chalk.yellow(chalk.bold(undefined)))));\n  console.log(\"If this was unintentional, check that you haven't mistakenly set it in your shell.\");\n  console.log(\"Learn more here: \".concat(chalk.yellow('http://bit.ly/CRA-advanced-config')));\n  console.log();\n} // We require that you explictly set browsers and do not fall back to\n// browserslist defaults.\n\n\nvar _require2 = require('react-dev-utils/browsersHelper'),\n    checkBrowsers = _require2.checkBrowsers;\n\ncheckBrowsers(paths.appPath, isInteractive).then(function () {\n  // We attempt to use the default port but if it is busy, we offer the user to\n  // run on a different port. `choosePort()` Promise resolves to the next free port.\n  return choosePort(HOST, DEFAULT_PORT);\n}).then(function (port) {\n  if (port == null) {\n    // We have not found a port.\n    return;\n  }\n\n  var protocol = undefined === 'true' ? 'https' : 'http';\n\n  var appName = require(paths.appPackageJson).name;\n\n  var urls = prepareUrls(protocol, HOST, port); // Create a webpack compiler that is configured with custom messages.\n\n  var compiler = createCompiler(webpack, config, appName, urls, useYarn); // Load proxy config\n\n  var proxySetting = require(paths.appPackageJson).proxy;\n\n  var proxyConfig = prepareProxy(proxySetting, paths.appPublic); // Serve webpack assets generated by the compiler over a web server.\n\n  var serverConfig = createDevServerConfig(proxyConfig, urls.lanUrlForConfig);\n  var devServer = new WebpackDevServer(compiler, serverConfig); // Launch WebpackDevServer.\n\n  devServer.listen(port, HOST, function (err) {\n    if (err) {\n      return console.log(err);\n    }\n\n    if (isInteractive) {\n      clearConsole();\n    }\n\n    console.log(chalk.cyan('Starting the development server...\\n'));\n    openBrowser(urls.localUrlForBrowser);\n  });\n  ['SIGINT', 'SIGTERM'].forEach(function (sig) {\n    process.on(sig, function () {\n      devServer.close();\n      process.exit();\n    });\n  });\n}).catch(function (err) {\n  if (err && err.message) {\n    console.log(err.message);\n  }\n\n  process.exit(1);\n});"},"sourceMaps":null,"error":null,"hash":"34c41327dd27d21ba6de8ec619b9a3b6","cacheData":{"env":{"NODE_ENV":"development"}}}