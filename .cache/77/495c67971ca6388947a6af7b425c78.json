{"id":"../node_modules/webpack/lib/AutomaticPrefetchPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"neo-async","loc":{"line":7,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/AutomaticPrefetchPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/neo-async/async.min.js"},{"name":"./dependencies/PrefetchDependency","loc":{"line":8,"column":35},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/AutomaticPrefetchPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/PrefetchDependency.js"},{"name":"./NormalModule","loc":{"line":9,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/AutomaticPrefetchPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/NormalModule.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar asyncLib = require(\"neo-async\");\n\nvar PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\nvar NormalModule = require(\"./NormalModule\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar AutomaticPrefetchPlugin = /*#__PURE__*/function () {\n  function AutomaticPrefetchPlugin() {\n    _classCallCheck(this, AutomaticPrefetchPlugin);\n  }\n\n  _createClass(AutomaticPrefetchPlugin, [{\n    key: \"apply\",\n\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler Webpack Compiler\n     * @returns {void}\n     */\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"AutomaticPrefetchPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\n      });\n      var lastModules = null;\n      compiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", function (compilation) {\n        lastModules = compilation.modules.filter(function (m) {\n          return m instanceof NormalModule;\n        }).map(function (\n        /** @type {NormalModule} */\n        m) {\n          return {\n            context: m.context,\n            request: m.request\n          };\n        });\n      });\n      compiler.hooks.make.tapAsync(\"AutomaticPrefetchPlugin\", function (compilation, callback) {\n        if (!lastModules) return callback();\n        asyncLib.forEach(lastModules, function (m, callback) {\n          compilation.prefetch(m.context || compiler.context, new PrefetchDependency(m.request), callback);\n        }, callback);\n      });\n    }\n  }]);\n\n  return AutomaticPrefetchPlugin;\n}();\n\nmodule.exports = AutomaticPrefetchPlugin;"},"sourceMaps":null,"error":null,"hash":"3688ebd73542967d728d5d9d1aba3184","cacheData":{"env":{}}}