{"id":"../node_modules/clean-css/lib/utils/natural-compare.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534}],"generated":{"js":"// adapted from http://nedbatchelder.com/blog/200712.html#e20071211T054956\nvar NUMBER_PATTERN = /([0-9]+)/;\n\nfunction naturalCompare(value1, value2) {\n  var keys1 = ('' + value1).split(NUMBER_PATTERN).map(tryParseInt);\n  var keys2 = ('' + value2).split(NUMBER_PATTERN).map(tryParseInt);\n  var key1;\n  var key2;\n  var compareFirst = Math.min(keys1.length, keys2.length);\n  var i, l;\n\n  for (i = 0, l = compareFirst; i < l; i++) {\n    key1 = keys1[i];\n    key2 = keys2[i];\n\n    if (key1 != key2) {\n      return key1 > key2 ? 1 : -1;\n    }\n  }\n\n  return keys1.length > keys2.length ? 1 : keys1.length == keys2.length ? 0 : -1;\n}\n\nfunction tryParseInt(value) {\n  return '' + parseInt(value) == value ? parseInt(value) : value;\n}\n\nmodule.exports = naturalCompare;"},"sourceMaps":null,"error":null,"hash":"4047ffe1f4c0edbdb9338156545e301a","cacheData":{"env":{}}}