{"id":"../node_modules/webpack/lib/RequireJsStuffPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"./ParserHelpers","loc":{"line":7,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/RequireJsStuffPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/ParserHelpers.js"},{"name":"./dependencies/ConstDependency","loc":{"line":8,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/RequireJsStuffPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/dependencies/ConstDependency.js"},{"name":"./NullFactory","loc":{"line":9,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/RequireJsStuffPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/NullFactory.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ParserHelpers = require(\"./ParserHelpers\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\nvar NullFactory = require(\"./NullFactory\");\n\nmodule.exports = /*#__PURE__*/function () {\n  function RequireJsStuffPlugin() {\n    _classCallCheck(this, RequireJsStuffPlugin);\n  }\n\n  _createClass(RequireJsStuffPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"RequireJsStuffPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.requireJs !== undefined && !parserOptions.requireJs) return;\n          parser.hooks.call.for(\"require.config\").tap(\"RequireJsStuffPlugin\", ParserHelpers.toConstantDependency(parser, \"undefined\"));\n          parser.hooks.call.for(\"requirejs.config\").tap(\"RequireJsStuffPlugin\", ParserHelpers.toConstantDependency(parser, \"undefined\"));\n          parser.hooks.expression.for(\"require.version\").tap(\"RequireJsStuffPlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"0.0.0\")));\n          parser.hooks.expression.for(\"requirejs.onError\").tap(\"RequireJsStuffPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.oe\"));\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireJsStuffPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireJsStuffPlugin\", handler);\n      });\n    }\n  }]);\n\n  return RequireJsStuffPlugin;\n}();"},"sourceMaps":null,"error":null,"hash":"83f70bc847ceff6171f25adb48c16168","cacheData":{"env":{}}}