{"id":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/package.json","includedInParent":true,"mtime":1594717993842},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/spdy-transport/package.json","includedInParent":true,"mtime":1594570878662},{"name":"zlib","loc":{"line":4,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/browserify-zlib/lib/index.js"},{"name":"../../../spdy-transport","loc":{"line":6,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/spdy-transport/lib/spdy-transport.js"}],"generated":{"js":"'use strict'\n\nvar zlibpool = exports\nvar zlib = require('zlib')\n\nvar transport = require('../../../spdy-transport')\n\n// TODO(indutny): think about it, why has it always been Z_SYNC_FLUSH here.\n// It should be possible to manually flush stuff after the write instead\nfunction createDeflate (version, compression) {\n  var deflate = zlib.createDeflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH,\n    windowBits: 11,\n    level: compression ? zlib.Z_DEFAULT_COMPRESSION : zlib.Z_NO_COMPRESSION\n  })\n\n  // For node.js v0.8\n  deflate._flush = zlib.Z_SYNC_FLUSH\n\n  return deflate\n}\n\nfunction createInflate (version) {\n  var inflate = zlib.createInflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH\n  })\n\n  // For node.js v0.8\n  inflate._flush = zlib.Z_SYNC_FLUSH\n\n  return inflate\n}\n\nfunction Pool (compression) {\n  this.compression = compression\n  this.pool = {\n    2: [],\n    3: [],\n    3.1: []\n  }\n}\n\nzlibpool.create = function create (compression) {\n  return new Pool(compression)\n}\n\nPool.prototype.get = function get (version) {\n  if (this.pool[version].length > 0) {\n    return this.pool[version].pop()\n  } else {\n    var id = version\n\n    return {\n      version: version,\n      compress: createDeflate(id, this.compression),\n      decompress: createInflate(id)\n    }\n  }\n}\n\nPool.prototype.put = function put (pair) {\n  this.pool[pair.version].push(pair)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js":"'use strict'\n\nvar zlibpool = exports\nvar zlib = require('zlib')\n\nvar transport = require('../../../spdy-transport')\n\n// TODO(indutny): think about it, why has it always been Z_SYNC_FLUSH here.\n// It should be possible to manually flush stuff after the write instead\nfunction createDeflate (version, compression) {\n  var deflate = zlib.createDeflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH,\n    windowBits: 11,\n    level: compression ? zlib.Z_DEFAULT_COMPRESSION : zlib.Z_NO_COMPRESSION\n  })\n\n  // For node.js v0.8\n  deflate._flush = zlib.Z_SYNC_FLUSH\n\n  return deflate\n}\n\nfunction createInflate (version) {\n  var inflate = zlib.createInflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH\n  })\n\n  // For node.js v0.8\n  inflate._flush = zlib.Z_SYNC_FLUSH\n\n  return inflate\n}\n\nfunction Pool (compression) {\n  this.compression = compression\n  this.pool = {\n    2: [],\n    3: [],\n    3.1: []\n  }\n}\n\nzlibpool.create = function create (compression) {\n  return new Pool(compression)\n}\n\nPool.prototype.get = function get (version) {\n  if (this.pool[version].length > 0) {\n    return this.pool[version].pop()\n  } else {\n    var id = version\n\n    return {\n      version: version,\n      compress: createDeflate(id, this.compression),\n      decompress: createInflate(id)\n    }\n  }\n}\n\nPool.prototype.put = function put (pair) {\n  this.pool[pair.version].push(pair)\n}\n"},"lineCount":66}},"error":null,"hash":"c25a0255b546f3788c05d5990feda497","cacheData":{"env":{}}}