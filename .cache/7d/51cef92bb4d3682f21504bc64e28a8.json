{"id":"../node_modules/rxjs/_esm5/internal/operators/groupBy.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"tslib","loc":{"line":2,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/groupBy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/tslib/tslib.es6.js"},{"name":"../Subscriber","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/groupBy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Subscriber.js"},{"name":"../Subscription","loc":{"line":4,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/groupBy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Subscription.js"},{"name":"../Observable","loc":{"line":5,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/groupBy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Observable.js"},{"name":"../Subject","loc":{"line":6,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/groupBy.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/Subject.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.groupBy = groupBy;\nexports.GroupedObservable = void 0;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _Subscriber = require(\"../Subscriber\");\n\nvar _Subscription = require(\"../Subscription\");\n\nvar _Observable = require(\"../Observable\");\n\nvar _Subject = require(\"../Subject\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n  return function (source) {\n    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n  };\n}\n\nvar GroupByOperator = /*@__PURE__*/function () {\n  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n  }\n\n  GroupByOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n  };\n\n  return GroupByOperator;\n}();\n\nvar GroupBySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupBySubscriber, _super);\n\n  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.elementSelector = elementSelector;\n    _this.durationSelector = durationSelector;\n    _this.subjectSelector = subjectSelector;\n    _this.groups = null;\n    _this.attemptedToUnsubscribe = false;\n    _this.count = 0;\n    return _this;\n  }\n\n  GroupBySubscriber.prototype._next = function (value) {\n    var key;\n\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  };\n\n  GroupBySubscriber.prototype._group = function (value, key) {\n    var groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map();\n    }\n\n    var group = groups.get(key);\n    var element;\n\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new _Subject.Subject();\n      groups.set(key, group);\n      var groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n\n      if (this.durationSelector) {\n        var duration = void 0;\n\n        try {\n          duration = this.durationSelector(new GroupedObservable(key, group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  };\n\n  GroupBySubscriber.prototype._error = function (err) {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.error(err);\n      });\n      groups.clear();\n    }\n\n    this.destination.error(err);\n  };\n\n  GroupBySubscriber.prototype._complete = function () {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.complete();\n      });\n      groups.clear();\n    }\n\n    this.destination.complete();\n  };\n\n  GroupBySubscriber.prototype.removeGroup = function (key) {\n    this.groups.delete(key);\n  };\n\n  GroupBySubscriber.prototype.unsubscribe = function () {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n\n      if (this.count === 0) {\n        _super.prototype.unsubscribe.call(this);\n      }\n    }\n  };\n\n  return GroupBySubscriber;\n}(_Subscriber.Subscriber);\n\nvar GroupDurationSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupDurationSubscriber, _super);\n\n  function GroupDurationSubscriber(key, group, parent) {\n    var _this = _super.call(this, group) || this;\n\n    _this.key = key;\n    _this.group = group;\n    _this.parent = parent;\n    return _this;\n  }\n\n  GroupDurationSubscriber.prototype._next = function (value) {\n    this.complete();\n  };\n\n  GroupDurationSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n        parent = _a.parent,\n        key = _a.key;\n\n    this.key = this.parent = null;\n\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  };\n\n  return GroupDurationSubscriber;\n}(_Subscriber.Subscriber);\n\nvar GroupedObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(GroupedObservable, _super);\n\n  function GroupedObservable(key, groupSubject, refCountSubscription) {\n    var _this = _super.call(this) || this;\n\n    _this.key = key;\n    _this.groupSubject = groupSubject;\n    _this.refCountSubscription = refCountSubscription;\n    return _this;\n  }\n\n  GroupedObservable.prototype._subscribe = function (subscriber) {\n    var subscription = new _Subscription.Subscription();\n\n    var _a = this,\n        refCountSubscription = _a.refCountSubscription,\n        groupSubject = _a.groupSubject;\n\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  };\n\n  return GroupedObservable;\n}(_Observable.Observable);\n\nexports.GroupedObservable = GroupedObservable;\n\nvar InnerRefCountSubscription = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(InnerRefCountSubscription, _super);\n\n  function InnerRefCountSubscription(parent) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    parent.count++;\n    return _this;\n  }\n\n  InnerRefCountSubscription.prototype.unsubscribe = function () {\n    var parent = this.parent;\n\n    if (!parent.closed && !this.closed) {\n      _super.prototype.unsubscribe.call(this);\n\n      parent.count -= 1;\n\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  };\n\n  return InnerRefCountSubscription;\n}(_Subscription.Subscription);"},"sourceMaps":null,"error":null,"hash":"8ad9aa7479a1a42b77f05342c75bcff2","cacheData":{"env":{}}}