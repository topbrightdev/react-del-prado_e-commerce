{"id":"../node_modules/killable/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/package.json","includedInParent":true,"mtime":1594717993842},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/killable/package.json","includedInParent":true,"mtime":1594306880178}],"generated":{"js":"module.exports = function makeKillable(server) {\n  var sockets = [];\n\n  server.on('connection', function (socket) {\n    //add socket to list\n    sockets.push(socket);\n\n    socket.once('close', function () {\n      //remove socket from list\n      sockets.splice(sockets.indexOf(socket), 1);\n    });\n  });\n\n  server.kill = function (cb) {\n    server.close(cb);\n    sockets.forEach(function (socket) {\n      socket.destroy();\n    });\n    // reset so the server can be restarted\n    sockets = [];\n  };\n\n  return server;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/killable/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/killable/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../node_modules/killable/index.js":"module.exports = function makeKillable(server) {\n  var sockets = [];\n\n  server.on('connection', function (socket) {\n    //add socket to list\n    sockets.push(socket);\n\n    socket.once('close', function () {\n      //remove socket from list\n      sockets.splice(sockets.indexOf(socket), 1);\n    });\n  });\n\n  server.kill = function (cb) {\n    server.close(cb);\n    sockets.forEach(function (socket) {\n      socket.destroy();\n    });\n    // reset so the server can be restarted\n    sockets = [];\n  };\n\n  return server;\n};\n"},"lineCount":25}},"error":null,"hash":"bdd6c865c1a3e0fdf83dff2b2523ce3e","cacheData":{"env":{}}}