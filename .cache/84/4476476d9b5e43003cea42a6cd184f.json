{"id":"../node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"path","loc":{"line":32,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"fs","loc":{"line":34,"column":11},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"vm","loc":{"line":22,"column":11},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/vm-browserify/index.js"}],"generated":{"js":"var __dirname = \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/node\";\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// eslint-disable-next-line no-unused-vars\nvar $hotChunkFilename$ = undefined;\nvar $require$ = undefined;\nvar hotAddUpdateChunk = undefined;\nvar $hotMainFilename$ = undefined;\nvar installedChunks = undefined;\n\nmodule.exports = function () {\n  // eslint-disable-next-line no-unused-vars\n  function hotDownloadUpdateChunk(chunkId) {\n    var filename = require(\"path\").join(__dirname, $hotChunkFilename$);\n\n    require(\"fs\").readFile(filename, \"utf-8\", function (err, content) {\n      if (err) {\n        if ($require$.onError) return $require$.oe(err);\n        throw err;\n      }\n\n      var chunk = {};\n\n      require(\"vm\").runInThisContext(\"(function(exports) {\" + content + \"\\n})\", {\n        filename: filename\n      })(chunk);\n\n      hotAddUpdateChunk(chunk.id, chunk.modules);\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  function hotDownloadManifest() {\n    var filename = require(\"path\").join(__dirname, $hotMainFilename$);\n\n    return new Promise(function (resolve, reject) {\n      require(\"fs\").readFile(filename, \"utf-8\", function (err, content) {\n        if (err) return resolve();\n\n        try {\n          var update = JSON.parse(content);\n        } catch (e) {\n          return reject(e);\n        }\n\n        resolve(update);\n      });\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  function hotDisposeChunk(chunkId) {\n    delete installedChunks[chunkId];\n  }\n};"},"sourceMaps":null,"error":null,"hash":"24cd9db05c1f96e2f43c8c8049275c4e","cacheData":{"env":{}}}