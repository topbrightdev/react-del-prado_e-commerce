{"id":"../node_modules/express/node_modules/negotiator/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/package.json","includedInParent":true,"mtime":1594641343049},{"name":"./lib/charset","loc":{"line":105,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/lib/charset.js"},{"name":"./lib/encoding","loc":{"line":108,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/lib/encoding.js"},{"name":"./lib/language","loc":{"line":111,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/lib/language.js"},{"name":"./lib/mediaType","loc":{"line":114,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/express/node_modules/negotiator/lib/mediaType.js"}],"generated":{"js":"/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Cached loaded submodules.\n * @private\n */\n\nvar modules = Object.create(null);\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  var preferredCharsets = loadModule('charset').preferredCharsets;\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  var preferredLanguages = loadModule('language').preferredLanguages;\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\n  return preferredMediaTypes(this.request.headers.accept, available);\n}; // Backwards compatibility\n\n\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n/**\n * Load the given module.\n * @private\n */\n\nfunction loadModule(moduleName) {\n  var module = modules[moduleName];\n\n  if (module !== undefined) {\n    return module;\n  } // This uses a switch for static require analysis\n\n\n  switch (moduleName) {\n    case 'charset':\n      module = require('./lib/charset');\n      break;\n\n    case 'encoding':\n      module = require('./lib/encoding');\n      break;\n\n    case 'language':\n      module = require('./lib/language');\n      break;\n\n    case 'mediaType':\n      module = require('./lib/mediaType');\n      break;\n\n    default:\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\n  } // Store to prevent invoking require()\n\n\n  modules[moduleName] = module;\n  return module;\n}"},"sourceMaps":null,"error":null,"hash":"68776ad065f335a966a58ba8b5b69c37","cacheData":{"env":{}}}