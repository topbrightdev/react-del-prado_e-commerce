{"id":"../node_modules/clean-css/lib/optimizer/level-2/specificities-overlap.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"./specificity","loc":{"line":1,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/specificities-overlap.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/specificity.js"}],"generated":{"js":"var specificity = require('./specificity');\n\nfunction specificitiesOverlap(selector1, selector2, cache) {\n  var specificity1;\n  var specificity2;\n  var i, l;\n  var j, m;\n\n  for (i = 0, l = selector1.length; i < l; i++) {\n    specificity1 = findSpecificity(selector1[i][1], cache);\n\n    for (j = 0, m = selector2.length; j < m; j++) {\n      specificity2 = findSpecificity(selector2[j][1], cache);\n\n      if (specificity1[0] === specificity2[0] && specificity1[1] === specificity2[1] && specificity1[2] === specificity2[2]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction findSpecificity(selector, cache) {\n  var value;\n\n  if (!(selector in cache)) {\n    cache[selector] = value = specificity(selector);\n  }\n\n  return value || cache[selector];\n}\n\nmodule.exports = specificitiesOverlap;"},"sourceMaps":null,"error":null,"hash":"e893a4ffe10d763b3cfb93457de1557e","cacheData":{"env":{}}}