{"id":"../config/webpack.config.dev.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"fs","loc":{"line":3,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":4,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"resolve","loc":{"line":5,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/resolve/index.js"},{"name":"webpack","loc":{"line":6,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/webpack.js"},{"name":"pnp-webpack-plugin","loc":{"line":7,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/pnp-webpack-plugin/index.js"},{"name":"html-webpack-plugin","loc":{"line":8,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/html-webpack-plugin/index.js"},{"name":"case-sensitive-paths-webpack-plugin","loc":{"line":9,"column":41},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/case-sensitive-paths-webpack-plugin/index.js"},{"name":"react-dev-utils/InterpolateHtmlPlugin","loc":{"line":10,"column":38},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/InterpolateHtmlPlugin.js"},{"name":"react-dev-utils/WatchMissingNodeModulesPlugin","loc":{"line":11,"column":46},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/WatchMissingNodeModulesPlugin.js"},{"name":"react-dev-utils/ModuleScopePlugin","loc":{"line":12,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/ModuleScopePlugin.js"},{"name":"react-dev-utils/getCSSModuleLocalIdent","loc":{"line":13,"column":39},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/getCSSModuleLocalIdent.js"},{"name":"./env","loc":{"line":14,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/env.js"},{"name":"./paths","loc":{"line":15,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/paths.js"},{"name":"webpack-manifest-plugin","loc":{"line":16,"column":31},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-manifest-plugin/index.js"},{"name":"react-dev-utils/ModuleNotFoundPlugin","loc":{"line":17,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/ModuleNotFoundPlugin.js"},{"name":"fork-ts-checker-webpack-plugin-alt","loc":{"line":18,"column":43},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/fork-ts-checker-webpack-plugin-alt/lib/index.js"},{"name":"react-dev-utils/typescriptFormatter","loc":{"line":19,"column":36},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/typescriptFormatter.js"},{"name":"postcss-flexbugs-fixes","loc":{"line":59,"column":18},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-flexbugs-fixes/index.js"},{"name":"postcss-preset-env","loc":{"line":60,"column":18},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/config/webpack.config.dev.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-preset-env/index.es.mjs"}],"generated":{"js":"'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar resolve = require('resolve');\n\nvar webpack = require('webpack');\n\nvar PnpWebpackPlugin = require('pnp-webpack-plugin');\n\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\n\nvar CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n\nvar InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\n\nvar WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin');\n\nvar ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\n\nvar getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\n\nvar getClientEnvironment = require('./env');\n\nvar paths = require('./paths');\n\nvar ManifestPlugin = require('webpack-manifest-plugin');\n\nvar ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\n\nvar ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin-alt');\n\nvar typescriptFormatter = require('react-dev-utils/typescriptFormatter'); // Webpack uses `publicPath` to determine where the app is being served from.\n// In development, we always serve from the root. This makes config easier.\n\n\nvar publicPath = '/'; // `publicUrl` is just like `publicPath`, but we will provide it to our app\n// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n// Omit trailing slash as %PUBLIC_PATH%/xyz looks better than %PUBLIC_PATH%xyz.\n\nvar publicUrl = ''; // Get environment variables to inject into our app.\n\nvar env = getClientEnvironment(publicUrl); // Check if TypeScript is setup\n\nvar useTypeScript = fs.existsSync(paths.appTsConfig); // style files regexes\n\nvar cssRegex = /\\.css$/;\nvar cssModuleRegex = /\\.module\\.css$/;\nvar sassRegex = /\\.(scss|sass)$/;\nvar sassModuleRegex = /\\.module\\.(scss|sass)$/; // common function to get style loaders\n\nvar getStyleLoaders = function getStyleLoaders(cssOptions, preProcessor) {\n  var loaders = [require.resolve('style-loader'), {\n    loader: require.resolve('css-loader'),\n    options: cssOptions\n  }, {\n    // Options for PostCSS as we reference these options twice\n    // Adds vendor prefixing based on your specified browser support in\n    // package.json\n    loader: require.resolve('postcss-loader'),\n    options: {\n      // Necessary for external CSS imports to work\n      // https://github.com/facebook/create-react-app/issues/2677\n      ident: 'postcss',\n      plugins: function plugins() {\n        return [require('postcss-flexbugs-fixes'), require('postcss-preset-env')({\n          autoprefixer: {\n            flexbox: 'no-2009'\n          },\n          stage: 3\n        })];\n      }\n    }\n  }];\n\n  if (preProcessor) {\n    loaders.push(require.resolve(preProcessor));\n  }\n\n  return loaders;\n}; // This is the development configuration.\n// It is focused on developer experience and fast rebuilds.\n// The production configuration is different and lives in a separate file.\n\n\nmodule.exports = {\n  mode: 'development',\n  // You may want 'eval' instead if you prefer to see the compiled output in DevTools.\n  // See the discussion in https://github.com/facebook/create-react-app/issues/343\n  devtool: 'cheap-module-source-map',\n  // These are the \"entry points\" to our application.\n  // This means they will be the \"root\" imports that are included in JS bundle.\n  entry: [// Include an alternative client for WebpackDevServer. A client's job is to\n  // connect to WebpackDevServer by a socket and get notified about changes.\n  // When you save a file, the client will either apply hot updates (in case\n  // of CSS changes), or refresh the page (in case of JS changes). When you\n  // make a syntax error, this client will display a syntax error overlay.\n  // Note: instead of the default WebpackDevServer client, we use a custom one\n  // to bring better experience for Create React App users. You can replace\n  // the line below with these two lines if you prefer the stock client:\n  // require.resolve('webpack-dev-server/client') + '?/',\n  // require.resolve('webpack/hot/dev-server'),\n  require.resolve('react-dev-utils/webpackHotDevClient'), // Finally, this is your app's code:\n  paths.appIndexJs],\n  output: {\n    // Add /* filename */ comments to generated require()s in the output.\n    pathinfo: true,\n    // This does not produce a real file. It's just the virtual path that is\n    // served by WebpackDevServer in development. This is the JS bundle\n    // containing code from all our entry points, and the Webpack runtime.\n    filename: 'static/js/bundle.js',\n    // There are also additional JS chunk files if you use code splitting.\n    chunkFilename: 'static/js/[name].chunk.js',\n    // This is the URL that app is served from. We use \"/\" in development.\n    publicPath: publicPath,\n    // Point sourcemap entries to original disk location (format as URL on Windows)\n    devtoolModuleFilenameTemplate: function devtoolModuleFilenameTemplate(info) {\n      return path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/');\n    }\n  },\n  optimization: {\n    // Automatically split vendor and commons\n    // https://twitter.com/wSokra/status/969633336732905474\n    // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n    splitChunks: {\n      chunks: 'all',\n      name: false\n    },\n    // Keep the runtime chunk seperated to enable long term caching\n    // https://twitter.com/wSokra/status/969679223278505985\n    runtimeChunk: true\n  },\n  resolve: {\n    // This allows you to set a fallback for where Webpack should look for modules.\n    // We placed these paths second because we want `node_modules` to \"win\"\n    // if there are any conflicts. This matches Node resolution mechanism.\n    // https://github.com/facebook/create-react-app/issues/253\n    modules: ['node_modules'].concat( // It is guaranteed to exist because we tweak it in `env.js`\n    undefined.split(path.delimiter).filter(Boolean)),\n    // These are the reasonable defaults supported by the Node ecosystem.\n    // We also include JSX as a common component filename extension to support\n    // some tools, although we do not recommend using it, see:\n    // https://github.com/facebook/create-react-app/issues/290\n    // `web` extension prefixes have been added for better support\n    // for React Native Web.\n    extensions: paths.moduleFileExtensions.map(function (ext) {\n      return \".\".concat(ext);\n    }).filter(function (ext) {\n      return useTypeScript || !ext.includes('ts');\n    }),\n    alias: {\n      // Support React Native Web\n      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n      'react-native': 'react-native-web'\n    },\n    plugins: [// Adds support for installing with Plug'n'Play, leading to faster installs and adding\n    // guards against forgotten dependencies and such.\n    PnpWebpackPlugin, // Prevents users from importing files from outside of src/ (or node_modules/).\n    // This often causes confusion because we only process files within src/ with babel.\n    // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n    // please link the files into your node_modules/ and let module-resolution kick in.\n    // Make sure your source files are compiled, as they will not be processed in any way.\n    new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson])]\n  },\n  resolveLoader: {\n    plugins: [// Also related to Plug'n'Play, but this time it tells Webpack to load its loaders\n    // from the current package.\n    PnpWebpackPlugin.moduleLoader(module)]\n  },\n  module: {\n    strictExportPresence: true,\n    rules: [// Disable require.ensure as it's not a standard language feature.\n    {\n      parser: {\n        requireEnsure: false\n      }\n    }, // First, run the linter.\n    // It's important to do this before Babel processes the JS.\n    {\n      test: /\\.(js|mjs|jsx)$/,\n      enforce: 'pre',\n      use: [{\n        options: {\n          formatter: require.resolve('react-dev-utils/eslintFormatter'),\n          eslintPath: require.resolve('eslint')\n        },\n        loader: require.resolve('eslint-loader')\n      }],\n      include: paths.appSrc\n    }, {\n      // \"oneOf\" will traverse all following loaders until one will\n      // match the requirements. When no loader matches it will fall\n      // back to the \"file\" loader at the end of the loader list.\n      oneOf: [// \"url\" loader works like \"file\" loader except that it embeds assets\n      // smaller than specified limit in bytes as data URLs to avoid requests.\n      // A missing `test` is equivalent to a match.\n      {\n        test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n        loader: require.resolve('url-loader'),\n        options: {\n          limit: 10000,\n          name: 'static/media/[name].[hash:8].[ext]'\n        }\n      }, // Process application JS with Babel.\n      // The preset includes JSX, Flow, and some ESnext features.\n      {\n        test: /\\.(js|mjs|jsx|ts|tsx)$/,\n        include: paths.appSrc,\n        loader: require.resolve('babel-loader'),\n        options: {\n          customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n          plugins: [[require.resolve('babel-plugin-named-asset-import'), {\n            loaderMap: {\n              svg: {\n                ReactComponent: '@svgr/webpack?-prettier,-svgo![path]'\n              }\n            }\n          }]],\n          // This is a feature of `babel-loader` for webpack (not Babel itself).\n          // It enables caching results in ./node_modules/.cache/babel-loader/\n          // directory for faster rebuilds.\n          cacheDirectory: true,\n          // Don't waste time on Gzipping the cache\n          cacheCompression: false\n        }\n      }, // Process any JS outside of the app with Babel.\n      // Unlike the application JS, we only compile the standard ES features.\n      {\n        test: /\\.(js|mjs)$/,\n        exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n        loader: require.resolve('babel-loader'),\n        options: {\n          babelrc: false,\n          configFile: false,\n          compact: false,\n          presets: [[require.resolve('babel-preset-react-app/dependencies'), {\n            helpers: true\n          }]],\n          cacheDirectory: true,\n          // Don't waste time on Gzipping the cache\n          cacheCompression: false,\n          // If an error happens in a package, it's possible to be\n          // because it was compiled. Thus, we don't want the browser\n          // debugger to show the original code. Instead, the code\n          // being evaluated would be much more helpful.\n          sourceMaps: false\n        }\n      }, // \"postcss\" loader applies autoprefixer to our CSS.\n      // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n      // \"style\" loader turns CSS into JS modules that inject <style> tags.\n      // In production, we use a plugin to extract that CSS to a file, but\n      // in development \"style\" loader enables hot editing of CSS.\n      // By default we support CSS Modules with the extension .module.css\n      {\n        test: cssRegex,\n        exclude: cssModuleRegex,\n        use: getStyleLoaders({\n          importLoaders: 1\n        })\n      }, // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n      // using the extension .module.css\n      {\n        test: cssModuleRegex,\n        use: getStyleLoaders({\n          importLoaders: 1,\n          modules: true,\n          getLocalIdent: getCSSModuleLocalIdent\n        })\n      }, // Opt-in support for SASS (using .scss or .sass extensions).\n      // Chains the sass-loader with the css-loader and the style-loader\n      // to immediately apply all styles to the DOM.\n      // By default we support SASS Modules with the\n      // extensions .module.scss or .module.sass\n      {\n        test: sassRegex,\n        exclude: sassModuleRegex,\n        use: getStyleLoaders({\n          importLoaders: 2\n        }, 'sass-loader')\n      }, // Adds support for CSS Modules, but using SASS\n      // using the extension .module.scss or .module.sass\n      {\n        test: sassModuleRegex,\n        use: getStyleLoaders({\n          importLoaders: 2,\n          modules: true,\n          getLocalIdent: getCSSModuleLocalIdent\n        }, 'sass-loader')\n      }, // \"file\" loader makes sure those assets get served by WebpackDevServer.\n      // When you `import` an asset, you get its (virtual) filename.\n      // In production, they would get copied to the `build` folder.\n      // This loader doesn't use a \"test\" so it will catch all modules\n      // that fall through the other loaders.\n      {\n        // Exclude `js` files to keep \"css\" loader working as it injects\n        // its runtime that would otherwise be processed through \"file\" loader.\n        // Also exclude `html` and `json` extensions so they get processed\n        // by webpacks internal loaders.\n        exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n        loader: require.resolve('file-loader'),\n        options: {\n          name: 'static/media/[name].[hash:8].[ext]'\n        }\n      }]\n    }]\n  },\n  plugins: [// Generates an `index.html` file with the <script> injected.\n  new HtmlWebpackPlugin({\n    inject: true,\n    template: paths.appHtml\n  }), // Makes some environment variables available in index.html.\n  // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n  // <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n  // In development, this will be an empty string.\n  new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw), // This gives some necessary context to module not found errors, such as\n  // the requesting resource.\n  new ModuleNotFoundPlugin(paths.appPath), // Makes some environment variables available to the JS code, for example:\n  // if (process.env.NODE_ENV === 'development') { ... }. See `./env.js`.\n  new webpack.DefinePlugin(env.stringified), // This is necessary to emit hot updates (currently CSS only):\n  new webpack.HotModuleReplacementPlugin(), // Watcher doesn't work well if you mistype casing in a path so we use\n  // a plugin that prints an error when you attempt to do this.\n  // See https://github.com/facebook/create-react-app/issues/240\n  new CaseSensitivePathsPlugin(), // If you require a missing module and then `npm install` it, you still have\n  // to restart the development server for Webpack to discover it. This plugin\n  // makes the discovery automatic so you don't have to restart.\n  // See https://github.com/facebook/create-react-app/issues/186\n  new WatchMissingNodeModulesPlugin(paths.appNodeModules), // Moment.js is an extremely popular library that bundles large locale files\n  // by default due to how Webpack interprets its code. This is a practical\n  // solution that requires the user to opt into importing specific locales.\n  // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n  // You can remove this if you don't use Moment.js:\n  new webpack.IgnorePlugin(/^\\.\\/locale$/, /moment$/), // Generate a manifest file which contains a mapping of all asset filenames\n  // to their corresponding output file so that tools can pick it up without\n  // having to parse `index.html`.\n  new ManifestPlugin({\n    fileName: 'asset-manifest.json',\n    publicPath: publicPath\n  }), // TypeScript type checking\n  useTypeScript && new ForkTsCheckerWebpackPlugin({\n    typescript: resolve.sync('typescript', {\n      basedir: paths.appNodeModules\n    }),\n    async: false,\n    checkSyntacticErrors: true,\n    tsconfig: paths.appTsConfig,\n    compilerOptions: {\n      module: 'esnext',\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      isolatedModules: true,\n      noEmit: true,\n      jsx: 'preserve'\n    },\n    reportFiles: ['**', '!**/*.json', '!**/__tests__/**', '!**/?(*.)(spec|test).*', '!src/setupProxy.js', '!src/setupTests.*'],\n    watch: paths.appSrc,\n    silent: true,\n    formatter: typescriptFormatter\n  })].filter(Boolean),\n  // Some libraries import Node modules but don't use them in the browser.\n  // Tell Webpack to provide empty mocks for them so importing them works.\n  node: {\n    dgram: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty'\n  },\n  // Turn off performance processing because we utilize\n  // our own hints via the FileSizeReporter\n  performance: false\n};"},"sourceMaps":null,"error":null,"hash":"da106c781b8a2fce20dc3a8c1f523ef8","cacheData":{"env":{}}}