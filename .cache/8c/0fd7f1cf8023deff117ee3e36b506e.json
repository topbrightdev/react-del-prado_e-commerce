{"id":"../node_modules/rxjs/_esm5/internal/operators/expand.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/package.json","includedInParent":true,"mtime":1594570878530},{"name":"tslib","loc":{"line":2,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/expand.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/tslib/tslib.es6.js"},{"name":"../util/tryCatch","loc":{"line":3,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/expand.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/tryCatch.js"},{"name":"../util/errorObject","loc":{"line":4,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/expand.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/errorObject.js"},{"name":"../OuterSubscriber","loc":{"line":5,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/expand.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/OuterSubscriber.js"},{"name":"../util/subscribeToResult","loc":{"line":6,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/operators/expand.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/internal/util/subscribeToResult.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expand = expand;\nexports.ExpandSubscriber = exports.ExpandOperator = void 0;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _tryCatch = require(\"../util/tryCatch\");\n\nvar _errorObject = require(\"../util/errorObject\");\n\nvar _OuterSubscriber = require(\"../OuterSubscriber\");\n\nvar _subscribeToResult = require(\"../util/subscribeToResult\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nfunction expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  if (scheduler === void 0) {\n    scheduler = undefined;\n  }\n\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\n\nvar ExpandOperator = /*@__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n\n  return ExpandOperator;\n}();\n\nexports.ExpandOperator = ExpandOperator;\n\nvar ExpandSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExpandSubscriber, _super);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n        result = arg.result,\n        value = arg.value,\n        index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n\n      return;\n    }\n\n    var index = this.index++;\n\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      var result = (0, _tryCatch.tryCatch)(this.project)(value, index);\n\n      if (result === _errorObject.errorObject) {\n        destination.error(_errorObject.errorObject.e);\n      } else if (!this.scheduler) {\n        this.subscribeToProjection(result, value, index);\n      } else {\n        var state = {\n          subscriber: this,\n          result: result,\n          value: value,\n          index: index\n        };\n        var destination_1 = this.destination;\n        destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add((0, _subscribeToResult.subscribeToResult)(this, result, value, index));\n  };\n\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  };\n\n  ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this._next(innerValue);\n  };\n\n  ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    var destination = this.destination;\n    destination.remove(innerSub);\n    this.active--;\n\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  return ExpandSubscriber;\n}(_OuterSubscriber.OuterSubscriber);\n\nexports.ExpandSubscriber = ExpandSubscriber;"},"sourceMaps":null,"error":null,"hash":"7955758d9eba0ec98fd7a74092d77757","cacheData":{"env":{}}}