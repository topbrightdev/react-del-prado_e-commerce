{"id":"../node_modules/loader-utils/lib/parseQuery.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/loader-utils/package.json","includedInParent":true,"mtime":1594570879294},{"name":"json5","loc":{"line":3,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/loader-utils/lib/parseQuery.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/json5/lib/json5.js"}],"generated":{"js":"\"use strict\";\n\nconst JSON5 = require(\"json5\");\n\nconst specialValues = {\n  \"null\": null,\n  \"true\": true,\n  \"false\": false\n};\n\nfunction parseQuery(query) {\n  if (query.substr(0, 1) !== \"?\") {\n    throw new Error(\"A valid query string passed to parseQuery should begin with '?'\");\n  }\n\n  query = query.substr(1);\n\n  if (!query) {\n    return {};\n  }\n\n  if (query.substr(0, 1) === \"{\" && query.substr(-1) === \"}\") {\n    return JSON5.parse(query);\n  }\n\n  const queryArgs = query.split(/[,&]/g);\n  const result = {};\n  queryArgs.forEach(arg => {\n    const idx = arg.indexOf(\"=\");\n\n    if (idx >= 0) {\n      let name = arg.substr(0, idx);\n      let value = decodeURIComponent(arg.substr(idx + 1));\n\n      if (specialValues.hasOwnProperty(value)) {\n        value = specialValues[value];\n      }\n\n      if (name.substr(-2) === \"[]\") {\n        name = decodeURIComponent(name.substr(0, name.length - 2));\n        if (!Array.isArray(result[name])) result[name] = [];\n        result[name].push(value);\n      } else {\n        name = decodeURIComponent(name);\n        result[name] = value;\n      }\n    } else {\n      if (arg.substr(0, 1) === \"-\") {\n        result[decodeURIComponent(arg.substr(1))] = false;\n      } else if (arg.substr(0, 1) === \"+\") {\n        result[decodeURIComponent(arg.substr(1))] = true;\n      } else {\n        result[decodeURIComponent(arg)] = true;\n      }\n    }\n  });\n  return result;\n}\n\nmodule.exports = parseQuery;"},"sourceMaps":null,"error":null,"hash":"4b02005fc6ee504e9a27998f1c4fa6f1","cacheData":{"env":{}}}