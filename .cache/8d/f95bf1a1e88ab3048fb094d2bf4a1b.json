{"id":"../node_modules/inquirer/lib/inquirer.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/package.json","includedInParent":true,"mtime":1594570878526},{"name":"./objects/separator","loc":{"line":15,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/objects/separator.js"},{"name":"./ui/bottom-bar","loc":{"line":18,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/bottom-bar.js"},{"name":"./ui/prompt","loc":{"line":19,"column":18},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/ui/prompt.js"},{"name":"./prompts/list","loc":{"line":55,"column":40},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/list.js"},{"name":"./prompts/input","loc":{"line":56,"column":41},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/input.js"},{"name":"./prompts/number","loc":{"line":57,"column":42},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/number.js"},{"name":"./prompts/confirm","loc":{"line":58,"column":43},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/confirm.js"},{"name":"./prompts/rawlist","loc":{"line":59,"column":43},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/rawlist.js"},{"name":"./prompts/expand","loc":{"line":60,"column":42},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/expand.js"},{"name":"./prompts/checkbox","loc":{"line":61,"column":44},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js"},{"name":"./prompts/password","loc":{"line":62,"column":44},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/password.js"},{"name":"./prompts/editor","loc":{"line":63,"column":42},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/inquirer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/editor.js"}],"generated":{"js":"'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nvar inquirer = module.exports;\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\ninquirer.Separator = require('./objects/separator');\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt')\n};\n/**\n * Create a new self-contained prompt module.\n */\n\ninquirer.createPromptModule = function (opt) {\n  var promptModule = function (questions) {\n    var ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    var promise = ui.run(questions); // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n\n    promise.ui = ui;\n    return promise;\n  };\n\n  promptModule.prompts = {};\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n  /**\n   * Register the defaults provider prompts\n   */\n\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n  return promptModule;\n};\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\n\ninquirer.prompt = inquirer.createPromptModule(); // Expose helper functions on the top level for easiest usage by common users\n\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};"},"sourceMaps":null,"error":null,"hash":"6a92edd91c0014db3946dcd1928c6e4f","cacheData":{"env":{}}}