{"id":"../node_modules/webpack/lib/EntryOptionPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/package.json","includedInParent":true,"mtime":1594578778161},{"name":"./SingleEntryPlugin","loc":{"line":7,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/EntryOptionPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/SingleEntryPlugin.js"},{"name":"./MultiEntryPlugin","loc":{"line":8,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/EntryOptionPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/MultiEntryPlugin.js"},{"name":"./DynamicEntryPlugin","loc":{"line":9,"column":35},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/EntryOptionPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/lib/DynamicEntryPlugin.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SingleEntryPlugin = require(\"./SingleEntryPlugin\");\n\nvar MultiEntryPlugin = require(\"./MultiEntryPlugin\");\n\nvar DynamicEntryPlugin = require(\"./DynamicEntryPlugin\");\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string} context context path\n * @param {EntryItem} item entry array or single path\n * @param {string} name entry key name\n * @returns {SingleEntryPlugin | MultiEntryPlugin} returns either a single or multi entry plugin\n */\n\n\nvar itemToPlugin = function itemToPlugin(context, item, name) {\n  if (Array.isArray(item)) {\n    return new MultiEntryPlugin(context, item, name);\n  }\n\n  return new SingleEntryPlugin(context, item, name);\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  function EntryOptionPlugin() {\n    _classCallCheck(this, EntryOptionPlugin);\n  }\n\n  _createClass(EntryOptionPlugin, [{\n    key: \"apply\",\n\n    /**\n     * @param {Compiler} compiler the compiler instance one is tapping into\n     * @returns {void}\n     */\n    value: function apply(compiler) {\n      compiler.hooks.entryOption.tap(\"EntryOptionPlugin\", function (context, entry) {\n        if (typeof entry === \"string\" || Array.isArray(entry)) {\n          itemToPlugin(context, entry, \"main\").apply(compiler);\n        } else if (typeof entry === \"object\") {\n          for (var _i = 0, _Object$keys = Object.keys(entry); _i < _Object$keys.length; _i++) {\n            var name = _Object$keys[_i];\n            itemToPlugin(context, entry[name], name).apply(compiler);\n          }\n        } else if (typeof entry === \"function\") {\n          new DynamicEntryPlugin(context, entry).apply(compiler);\n        }\n\n        return true;\n      });\n    }\n  }]);\n\n  return EntryOptionPlugin;\n}();"},"sourceMaps":null,"error":null,"hash":"912eeebaaeeceb2278544f9e11fa89ec","cacheData":{"env":{}}}