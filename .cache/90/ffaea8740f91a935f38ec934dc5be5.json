{"id":"../node_modules/webpack/node_modules/watchpack/lib/watchpack.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/watchpack/package.json","includedInParent":true,"mtime":1594578778153},{"name":"./watcherManager","loc":{"line":7,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/watchpack/lib/watchpack.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/watchpack/lib/watcherManager.js"},{"name":"events","loc":{"line":8,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/watchpack/lib/watchpack.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/events/events.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar watcherManager = require(\"./watcherManager\");\nvar EventEmitter = require(\"events\").EventEmitter;\n\nfunction Watchpack(options) {\n\tEventEmitter.call(this);\n\tif(!options) options = {};\n\tif(!options.aggregateTimeout) options.aggregateTimeout = 200;\n\tthis.options = options;\n\tthis.watcherOptions = {\n\t\tignored: options.ignored,\n\t\tpoll: options.poll\n\t};\n\tthis.fileWatchers = [];\n\tthis.dirWatchers = [];\n\tthis.mtimes = Object.create(null);\n\tthis.paused = false;\n\tthis.aggregatedChanges = [];\n\tthis.aggregatedRemovals = [];\n\tthis.aggregateTimeout = 0;\n\tthis._onTimeout = this._onTimeout.bind(this);\n}\n\nmodule.exports = Watchpack;\n\nWatchpack.prototype = Object.create(EventEmitter.prototype);\n\nWatchpack.prototype.watch = function watch(files, directories, startTime) {\n\tthis.paused = false;\n\tvar oldFileWatchers = this.fileWatchers;\n\tvar oldDirWatchers = this.dirWatchers;\n\tthis.fileWatchers = files.map(function(file) {\n\t\treturn this._fileWatcher(file, watcherManager.watchFile(file, this.watcherOptions, startTime));\n\t}, this);\n\tthis.dirWatchers = directories.map(function(dir) {\n\t\treturn this._dirWatcher(dir, watcherManager.watchDirectory(dir, this.watcherOptions, startTime));\n\t}, this);\n\toldFileWatchers.forEach(function(w) {\n\t\tw.close();\n\t}, this);\n\toldDirWatchers.forEach(function(w) {\n\t\tw.close();\n\t}, this);\n};\n\nWatchpack.prototype.close = function resume() {\n\tthis.paused = true;\n\tif(this.aggregateTimeout)\n\t\tclearTimeout(this.aggregateTimeout);\n\tthis.fileWatchers.forEach(function(w) {\n\t\tw.close();\n\t}, this);\n\tthis.dirWatchers.forEach(function(w) {\n\t\tw.close();\n\t}, this);\n\tthis.fileWatchers.length = 0;\n\tthis.dirWatchers.length = 0;\n};\n\nWatchpack.prototype.pause = function pause() {\n\tthis.paused = true;\n\tif(this.aggregateTimeout)\n\t\tclearTimeout(this.aggregateTimeout);\n};\n\nfunction addWatchersToArray(watchers, array) {\n\twatchers.forEach(function(w) {\n\t\tif(array.indexOf(w.directoryWatcher) < 0) {\n\t\t\tarray.push(w.directoryWatcher);\n\t\t\taddWatchersToArray(Object.keys(w.directoryWatcher.directories).reduce(function(a, dir) {\n\t\t\t\tif(w.directoryWatcher.directories[dir] !== true)\n\t\t\t\t\ta.push(w.directoryWatcher.directories[dir]);\n\t\t\t\treturn a;\n\t\t\t}, []), array);\n\t\t}\n\t});\n}\n\nWatchpack.prototype.getTimes = function() {\n\tvar directoryWatchers = [];\n\taddWatchersToArray(this.fileWatchers.concat(this.dirWatchers), directoryWatchers);\n\tvar obj = Object.create(null);\n\tdirectoryWatchers.forEach(function(w) {\n\t\tvar times = w.getTimes();\n\t\tObject.keys(times).forEach(function(file) {\n\t\t\tobj[file] = times[file];\n\t\t});\n\t});\n\treturn obj;\n};\n\nWatchpack.prototype._fileWatcher = function _fileWatcher(file, watcher) {\n\twatcher.on(\"change\", function(mtime, type) {\n\t\tthis._onChange(file, mtime, file, type);\n\t}.bind(this));\n\twatcher.on(\"remove\", function(type) {\n\t\tthis._onRemove(file, file, type);\n\t}.bind(this));\n\treturn watcher;\n};\n\nWatchpack.prototype._dirWatcher = function _dirWatcher(item, watcher) {\n\twatcher.on(\"change\", function(file, mtime, type) {\n\t\tthis._onChange(item, mtime, file, type);\n\t}.bind(this));\n\treturn watcher;\n};\n\nWatchpack.prototype._onChange = function _onChange(item, mtime, file) {\n\tfile = file || item;\n\tthis.mtimes[file] = mtime;\n\tif(this.paused) return;\n\tthis.emit(\"change\", file, mtime);\n\tif(this.aggregateTimeout)\n\t\tclearTimeout(this.aggregateTimeout);\n\tif(this.aggregatedChanges.indexOf(item) < 0)\n\t\tthis.aggregatedChanges.push(item);\n\tthis.aggregateTimeout = setTimeout(this._onTimeout, this.options.aggregateTimeout);\n};\n\nWatchpack.prototype._onRemove = function _onRemove(item, file) {\n\tfile = file || item;\n\tdelete this.mtimes[item];\n\tif(this.paused) return;\n\tthis.emit(\"remove\", item);\n\tif(this.aggregateTimeout)\n\t\tclearTimeout(this.aggregateTimeout);\n\tif(this.aggregatedRemovals.indexOf(item) < 0)\n\t\tthis.aggregatedRemovals.push(item);\n\tthis.aggregateTimeout = setTimeout(this._onTimeout, this.options.aggregateTimeout);\n};\n\nWatchpack.prototype._onTimeout = function _onTimeout() {\n\tthis.aggregateTimeout = 0;\n\tvar changes = this.aggregatedChanges;\n\tvar removals = this.aggregatedRemovals;\n\tthis.aggregatedChanges = [];\n\tthis.aggregatedRemovals = [];\n\tthis.emit(\"aggregated\", changes, removals);\n};\n"},"sourceMaps":null,"error":null,"hash":"9a50ee6d57f250b06052424de304e6b5","cacheData":{"env":{}}}