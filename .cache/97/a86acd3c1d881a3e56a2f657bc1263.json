{"id":"../node_modules/react-dev-utils/getProcessForPort.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106},{"name":"chalk","loc":{"line":10,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/getProcessForPort.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"child_process","loc":{"line":11,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/getProcessForPort.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":12,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/getProcessForPort.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar chalk = require('chalk');\n\nvar execSync = require('child_process').execSync;\n\nvar path = require('path');\n\nvar execOptions = {\n  encoding: 'utf8',\n  stdio: ['pipe', // stdin (default)\n  'pipe', // stdout (default)\n  'ignore' //stderr\n  ]\n};\n\nfunction isProcessAReactApp(processCommand) {\n  return /^node .*react-scripts\\/scripts\\/start\\.js\\s?$/.test(processCommand);\n}\n\nfunction getProcessIdOnPort(port) {\n  return execSync('lsof -i:' + port + ' -P -t -sTCP:LISTEN', execOptions).split('\\n')[0].trim();\n}\n\nfunction getPackageNameInDirectory(directory) {\n  var packagePath = path.join(directory.trim(), 'package.json');\n\n  try {\n    return require(packagePath).name;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction getProcessCommand(processId, processDirectory) {\n  var command = execSync('ps -o command -p ' + processId + ' | sed -n 2p', execOptions);\n  command = command.replace(/\\n$/, '');\n\n  if (isProcessAReactApp(command)) {\n    var packageName = getPackageNameInDirectory(processDirectory);\n    return packageName ? packageName : command;\n  } else {\n    return command;\n  }\n}\n\nfunction getDirectoryOfProcessById(processId) {\n  return execSync('lsof -p ' + processId + ' | awk \\'$4==\"cwd\" {for (i=9; i<=NF; i++) printf \"%s \", $i}\\'', execOptions).trim();\n}\n\nfunction getProcessForPort(port) {\n  try {\n    var processId = getProcessIdOnPort(port);\n    var directory = getDirectoryOfProcessById(processId);\n    var command = getProcessCommand(processId, directory);\n    return chalk.cyan(command) + chalk.grey(' (pid ' + processId + ')\\n') + chalk.blue('  in ') + chalk.cyan(directory);\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = getProcessForPort;"},"sourceMaps":null,"error":null,"hash":"bec2df0b2e1dd502e77ccff1df631bc4","cacheData":{"env":{}}}