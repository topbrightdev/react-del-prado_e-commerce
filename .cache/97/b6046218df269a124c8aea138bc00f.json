{"id":"../node_modules/selfsigned/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594658474355},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/selfsigned/package.json","includedInParent":true,"mtime":1594570878734},{"name":"node-forge","loc":{"line":1,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/selfsigned/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/node-forge/lib/index.js"}],"generated":{"js":"var forge = require('node-forge');\n\n// a hexString is considered negative if it's most significant bit is 1\n// because serial numbers use ones' complement notation\n// this RFC in section 4.1.2.2 requires serial numbers to be positive\n// http://www.ietf.org/rfc/rfc5280.txt\nfunction toPositiveHex(hexString){\n  var mostSiginficativeHexAsInt = parseInt(hexString[0], 16);\n  if (mostSiginficativeHexAsInt < 8){\n    return hexString;\n  }\n\n  mostSiginficativeHexAsInt -= 8;\n  return mostSiginficativeHexAsInt.toString() + hexString.substring(1);\n}\n\nfunction getAlgorithm(key) {\n  switch (key) {\n    case 'sha256':\n      return forge.md.sha256.create();\n    default:\n      return forge.md.sha1.create();\n  }\n}\n\nexports.generate = function generate(attrs, options, done) {\n  if (typeof attrs === 'function') {\n    done = attrs;\n    attrs = undefined;\n  } else if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var generatePem = function (keyPair) {\n    var cert = forge.pki.createCertificate();\n\n    cert.serialNumber = toPositiveHex(forge.util.bytesToHex(forge.random.getBytesSync(9))); // the serial number can be decimal or hex (if preceded by 0x)\n\n    cert.validity.notBefore = new Date();\n    cert.validity.notAfter = new Date();\n    cert.validity.notAfter.setDate(cert.validity.notBefore.getDate() + (options.days || 365));\n\n    attrs = attrs || [{\n      name: 'commonName',\n      value: 'example.org'\n    }, {\n      name: 'countryName',\n      value: 'US'\n    }, {\n      shortName: 'ST',\n      value: 'Virginia'\n    }, {\n      name: 'localityName',\n      value: 'Blacksburg'\n    }, {\n      name: 'organizationName',\n      value: 'Test'\n    }, {\n      shortName: 'OU',\n      value: 'Test'\n    }];\n\n    cert.setSubject(attrs);\n    cert.setIssuer(attrs);\n\n    cert.publicKey = keyPair.publicKey;\n\n    cert.setExtensions(options.extensions || [{\n      name: 'basicConstraints',\n      cA: true\n    }, {\n      name: 'keyUsage',\n      keyCertSign: true,\n      digitalSignature: true,\n      nonRepudiation: true,\n      keyEncipherment: true,\n      dataEncipherment: true\n    }, {\n      name: 'subjectAltName',\n      altNames: [{\n        type: 6, // URI\n        value: 'http://example.org/webid#me'\n      }]\n    }]);\n\n    cert.sign(keyPair.privateKey, getAlgorithm(options && options.algorithm));\n\n    const fingerprint = forge.md.sha1\n                          .create()\n                          .update(forge.asn1.toDer(forge.pki.certificateToAsn1(cert)).getBytes())\n                          .digest()\n                          .toHex()\n                          .match(/.{2}/g)\n                          .join(':');\n\n    var pem = {\n      private:     forge.pki.privateKeyToPem(keyPair.privateKey),\n      public:      forge.pki.publicKeyToPem(keyPair.publicKey),\n      cert:        forge.pki.certificateToPem(cert),\n      fingerprint: fingerprint,\n    };\n\n    if (options && options.pkcs7) {\n      var p7 = forge.pkcs7.createSignedData();\n      p7.addCertificate(cert);\n      pem.pkcs7 = forge.pkcs7.messageToPem(p7);\n    }\n\n    if (options && options.clientCertificate) {\n      var clientkeys = forge.pki.rsa.generateKeyPair(1024);\n      var clientcert = forge.pki.createCertificate();\n      clientcert.serialNumber = toPositiveHex(forge.util.bytesToHex(forge.random.getBytesSync(9)));\n      clientcert.validity.notBefore = new Date();\n      clientcert.validity.notAfter = new Date();\n      clientcert.validity.notAfter.setFullYear(clientcert.validity.notBefore.getFullYear() + 1);\n\n      var clientAttrs = JSON.parse(JSON.stringify(attrs));\n\n      for(var i = 0; i < clientAttrs.length; i++) {\n        if(clientAttrs[i].name === 'commonName') {\n          if( options.clientCertificateCN )\n            clientAttrs[i] = { name: 'commonName', value: options.clientCertificateCN };\n          else\n            clientAttrs[i] = { name: 'commonName', value: 'John Doe jdoe123' };\n        }\n      }\n\n      clientcert.setSubject(clientAttrs);\n\n      // Set the issuer to the parent key\n      clientcert.setIssuer(attrs);\n\n      clientcert.publicKey = clientkeys.publicKey;\n\n      // Sign client cert with root cert\n      clientcert.sign(keyPair.privateKey);\n\n      pem.clientprivate = forge.pki.privateKeyToPem(clientkeys.privateKey);\n      pem.clientpublic = forge.pki.publicKeyToPem(clientkeys.publicKey);\n      pem.clientcert = forge.pki.certificateToPem(clientcert);\n\n      if (options.pkcs7) {\n        var clientp7 = forge.pkcs7.createSignedData();\n        clientp7.addCertificate(clientcert);\n        pem.clientpkcs7 = forge.pkcs7.messageToPem(clientp7);\n      }\n    }\n\n    var caStore = forge.pki.createCaStore();\n    caStore.addCertificate(cert);\n\n    try {\n      forge.pki.verifyCertificateChain(caStore, [cert],\n        function (vfd, depth, chain) {\n          if (vfd !== true) {\n            throw new Error('Certificate could not be verified.');\n          }\n          return true;\n        });\n    }\n    catch(ex) {\n      throw new Error(ex);\n    }\n\n    return pem;\n  };\n\n  var keySize = options.keySize || 1024;\n\n  if (done) { // async scenario\n    return forge.pki.rsa.generateKeyPair({ bits: keySize }, function (err, keyPair) {\n      if (err) { return done(err); }\n\n      try {\n        return done(null, generatePem(keyPair));\n      } catch (ex) {\n        return done(err);\n      }\n    });\n  }\n\n  var keyPair = options.keyPair ? {\n    privateKey: forge.pki.privateKeyFromPem(options.keyPair.privateKey),\n    publicKey: forge.pki.publicKeyFromPem(options.keyPair.publicKey)\n  } : forge.pki.rsa.generateKeyPair(keySize);\n\n  return generatePem(keyPair);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/selfsigned/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/selfsigned/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}}],"sources":{"../node_modules/selfsigned/index.js":"var forge = require('node-forge');\n\n// a hexString is considered negative if it's most significant bit is 1\n// because serial numbers use ones' complement notation\n// this RFC in section 4.1.2.2 requires serial numbers to be positive\n// http://www.ietf.org/rfc/rfc5280.txt\nfunction toPositiveHex(hexString){\n  var mostSiginficativeHexAsInt = parseInt(hexString[0], 16);\n  if (mostSiginficativeHexAsInt < 8){\n    return hexString;\n  }\n\n  mostSiginficativeHexAsInt -= 8;\n  return mostSiginficativeHexAsInt.toString() + hexString.substring(1);\n}\n\nfunction getAlgorithm(key) {\n  switch (key) {\n    case 'sha256':\n      return forge.md.sha256.create();\n    default:\n      return forge.md.sha1.create();\n  }\n}\n\nexports.generate = function generate(attrs, options, done) {\n  if (typeof attrs === 'function') {\n    done = attrs;\n    attrs = undefined;\n  } else if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  var generatePem = function (keyPair) {\n    var cert = forge.pki.createCertificate();\n\n    cert.serialNumber = toPositiveHex(forge.util.bytesToHex(forge.random.getBytesSync(9))); // the serial number can be decimal or hex (if preceded by 0x)\n\n    cert.validity.notBefore = new Date();\n    cert.validity.notAfter = new Date();\n    cert.validity.notAfter.setDate(cert.validity.notBefore.getDate() + (options.days || 365));\n\n    attrs = attrs || [{\n      name: 'commonName',\n      value: 'example.org'\n    }, {\n      name: 'countryName',\n      value: 'US'\n    }, {\n      shortName: 'ST',\n      value: 'Virginia'\n    }, {\n      name: 'localityName',\n      value: 'Blacksburg'\n    }, {\n      name: 'organizationName',\n      value: 'Test'\n    }, {\n      shortName: 'OU',\n      value: 'Test'\n    }];\n\n    cert.setSubject(attrs);\n    cert.setIssuer(attrs);\n\n    cert.publicKey = keyPair.publicKey;\n\n    cert.setExtensions(options.extensions || [{\n      name: 'basicConstraints',\n      cA: true\n    }, {\n      name: 'keyUsage',\n      keyCertSign: true,\n      digitalSignature: true,\n      nonRepudiation: true,\n      keyEncipherment: true,\n      dataEncipherment: true\n    }, {\n      name: 'subjectAltName',\n      altNames: [{\n        type: 6, // URI\n        value: 'http://example.org/webid#me'\n      }]\n    }]);\n\n    cert.sign(keyPair.privateKey, getAlgorithm(options && options.algorithm));\n\n    const fingerprint = forge.md.sha1\n                          .create()\n                          .update(forge.asn1.toDer(forge.pki.certificateToAsn1(cert)).getBytes())\n                          .digest()\n                          .toHex()\n                          .match(/.{2}/g)\n                          .join(':');\n\n    var pem = {\n      private:     forge.pki.privateKeyToPem(keyPair.privateKey),\n      public:      forge.pki.publicKeyToPem(keyPair.publicKey),\n      cert:        forge.pki.certificateToPem(cert),\n      fingerprint: fingerprint,\n    };\n\n    if (options && options.pkcs7) {\n      var p7 = forge.pkcs7.createSignedData();\n      p7.addCertificate(cert);\n      pem.pkcs7 = forge.pkcs7.messageToPem(p7);\n    }\n\n    if (options && options.clientCertificate) {\n      var clientkeys = forge.pki.rsa.generateKeyPair(1024);\n      var clientcert = forge.pki.createCertificate();\n      clientcert.serialNumber = toPositiveHex(forge.util.bytesToHex(forge.random.getBytesSync(9)));\n      clientcert.validity.notBefore = new Date();\n      clientcert.validity.notAfter = new Date();\n      clientcert.validity.notAfter.setFullYear(clientcert.validity.notBefore.getFullYear() + 1);\n\n      var clientAttrs = JSON.parse(JSON.stringify(attrs));\n\n      for(var i = 0; i < clientAttrs.length; i++) {\n        if(clientAttrs[i].name === 'commonName') {\n          if( options.clientCertificateCN )\n            clientAttrs[i] = { name: 'commonName', value: options.clientCertificateCN };\n          else\n            clientAttrs[i] = { name: 'commonName', value: 'John Doe jdoe123' };\n        }\n      }\n\n      clientcert.setSubject(clientAttrs);\n\n      // Set the issuer to the parent key\n      clientcert.setIssuer(attrs);\n\n      clientcert.publicKey = clientkeys.publicKey;\n\n      // Sign client cert with root cert\n      clientcert.sign(keyPair.privateKey);\n\n      pem.clientprivate = forge.pki.privateKeyToPem(clientkeys.privateKey);\n      pem.clientpublic = forge.pki.publicKeyToPem(clientkeys.publicKey);\n      pem.clientcert = forge.pki.certificateToPem(clientcert);\n\n      if (options.pkcs7) {\n        var clientp7 = forge.pkcs7.createSignedData();\n        clientp7.addCertificate(clientcert);\n        pem.clientpkcs7 = forge.pkcs7.messageToPem(clientp7);\n      }\n    }\n\n    var caStore = forge.pki.createCaStore();\n    caStore.addCertificate(cert);\n\n    try {\n      forge.pki.verifyCertificateChain(caStore, [cert],\n        function (vfd, depth, chain) {\n          if (vfd !== true) {\n            throw new Error('Certificate could not be verified.');\n          }\n          return true;\n        });\n    }\n    catch(ex) {\n      throw new Error(ex);\n    }\n\n    return pem;\n  };\n\n  var keySize = options.keySize || 1024;\n\n  if (done) { // async scenario\n    return forge.pki.rsa.generateKeyPair({ bits: keySize }, function (err, keyPair) {\n      if (err) { return done(err); }\n\n      try {\n        return done(null, generatePem(keyPair));\n      } catch (ex) {\n        return done(err);\n      }\n    });\n  }\n\n  var keyPair = options.keyPair ? {\n    privateKey: forge.pki.privateKeyFromPem(options.keyPair.privateKey),\n    publicKey: forge.pki.publicKeyFromPem(options.keyPair.publicKey)\n  } : forge.pki.rsa.generateKeyPair(keySize);\n\n  return generatePem(keyPair);\n};\n"},"lineCount":192}},"error":null,"hash":"878b83ca4582e2e9765da20c9f15259d","cacheData":{"env":{}}}