{"id":"../node_modules/postcss-selector-not/dist/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/package.json","includedInParent":true,"mtime":1594306880810},{"name":"postcss","loc":{"line":7,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/dist/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/node_modules/postcss/lib/postcss.js"},{"name":"postcss/lib/list","loc":{"line":11,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/dist/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/node_modules/postcss/lib/list.js"},{"name":"balanced-match","loc":{"line":15,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/postcss-selector-not/dist/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/balanced-match/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _list = require(\"postcss/lib/list\");\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _balancedMatch = require(\"balanced-match\");\n\nvar _balancedMatch2 = _interopRequireDefault(_balancedMatch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction explodeSelector(pseudoClass, selector) {\n  var position = locatePseudoClass(selector, pseudoClass);\n  if (selector && position > -1) {\n    var pre = selector.slice(0, position);\n    var matches = (0, _balancedMatch2.default)(\"(\", \")\", selector.slice(position));\n    var bodySelectors = matches.body ? _list2.default.comma(matches.body).map(function (s) {\n      return explodeSelector(pseudoClass, s);\n    }).join(`)${pseudoClass}(`) : \"\";\n    var postSelectors = matches.post ? explodeSelector(pseudoClass, matches.post) : \"\";\n\n    return `${pre}${pseudoClass}(${bodySelectors})${postSelectors}`;\n  }\n  return selector;\n}\n\nvar patternCache = {};\n\nfunction locatePseudoClass(selector, pseudoClass) {\n  patternCache[pseudoClass] = patternCache[pseudoClass] || new RegExp(`([^\\\\\\\\]|^)${pseudoClass}`);\n\n  // The regex is used to ensure that selectors with\n  // escaped colons in them are treated properly\n  // Ex: .foo\\:not-bar is a valid CSS selector\n  // But it is not a reference to a pseudo selector\n  var pattern = patternCache[pseudoClass];\n  var position = selector.search(pattern);\n\n  if (position === -1) {\n    return -1;\n  }\n\n  // The offset returned by the regex may be off by one because\n  // of it including the negated character match in the position\n  return position + selector.slice(position).indexOf(pseudoClass);\n}\n\nfunction explodeSelectors(pseudoClass) {\n  return function () {\n    return function (css) {\n      css.walkRules(function (rule) {\n        if (rule.selector && rule.selector.indexOf(pseudoClass) > -1) {\n          rule.selector = explodeSelector(pseudoClass, rule.selector);\n        }\n      });\n    };\n  };\n}\n\nexports.default = _postcss2.default.plugin(\"postcss-selector-not\", explodeSelectors(\":not\"));\nmodule.exports = exports.default;"},"sourceMaps":null,"error":null,"hash":"c960db904cd97debe2f1deec4d95b155","cacheData":{"env":{}}}