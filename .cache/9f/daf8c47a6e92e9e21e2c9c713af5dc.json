{"id":"../node_modules/enhanced-resolve/lib/SyncAsyncFileSystemDecorator.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/enhanced-resolve/package.json","includedInParent":true,"mtime":1594306879878}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction SyncAsyncFileSystemDecorator(fs) {\n  this.fs = fs;\n\n  if (fs.statSync) {\n    this.stat = function (arg, callback) {\n      var result;\n\n      try {\n        result = fs.statSync(arg);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, result);\n    };\n  }\n\n  if (fs.readdirSync) {\n    this.readdir = function (arg, callback) {\n      var result;\n\n      try {\n        result = fs.readdirSync(arg);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, result);\n    };\n  }\n\n  if (fs.readFileSync) {\n    this.readFile = function (arg, callback) {\n      var result;\n\n      try {\n        result = fs.readFileSync(arg);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, result);\n    };\n  }\n\n  if (fs.readlinkSync) {\n    this.readlink = function (arg, callback) {\n      var result;\n\n      try {\n        result = fs.readlinkSync(arg);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, result);\n    };\n  }\n\n  if (fs.readJsonSync) {\n    this.readJson = function (arg, callback) {\n      var result;\n\n      try {\n        result = fs.readJsonSync(arg);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, result);\n    };\n  }\n}\n\nmodule.exports = SyncAsyncFileSystemDecorator;"},"sourceMaps":null,"error":null,"hash":"bf59fc6493123568a18073d5ee5ead45","cacheData":{"env":{}}}