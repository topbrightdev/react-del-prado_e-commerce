{"id":"../node_modules/clean-css/lib/optimizer/level-2/optimize.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"./merge-adjacent","loc":{"line":1,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-adjacent.js"},{"name":"./merge-media-queries","loc":{"line":2,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-media-queries.js"},{"name":"./merge-non-adjacent-by-body","loc":{"line":3,"column":37},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js"},{"name":"./merge-non-adjacent-by-selector","loc":{"line":4,"column":41},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-selector.js"},{"name":"./reduce-non-adjacent","loc":{"line":5,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/reduce-non-adjacent.js"},{"name":"./remove-duplicate-font-at-rules","loc":{"line":6,"column":41},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/remove-duplicate-font-at-rules.js"},{"name":"./remove-duplicate-media-queries","loc":{"line":7,"column":42},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/remove-duplicate-media-queries.js"},{"name":"./remove-duplicates","loc":{"line":8,"column":31},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/remove-duplicates.js"},{"name":"./remove-unused-at-rules","loc":{"line":9,"column":34},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/remove-unused-at-rules.js"},{"name":"./restructure","loc":{"line":10,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/restructure.js"},{"name":"./properties/optimize","loc":{"line":12,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/properties/optimize.js"},{"name":"../../options/optimization-level","loc":{"line":14,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/options/optimization-level.js"},{"name":"../../tokenizer/token","loc":{"line":16,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/optimize.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/tokenizer/token.js"}],"generated":{"js":"var mergeAdjacent = require('./merge-adjacent');\n\nvar mergeMediaQueries = require('./merge-media-queries');\n\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\n\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\n\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\n\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\n\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\n\nvar removeDuplicates = require('./remove-duplicates');\n\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\n\nvar restructure = require('./restructure');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n      case Token.RULE:\n        isEmpty = token[1].length === 0 || token[2].length === 0;\n        break;\n\n      case Token.NESTED_BLOCK:\n        removeEmpty(token[2]);\n        isEmpty = token[2].length === 0;\n        break;\n\n      case Token.AT_RULE:\n        isEmpty = token[1].length === 0;\n        break;\n\n      case Token.AT_RULE_BLOCK:\n        isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case Token.RULE:\n        optimizeProperties(token[2], true, true, context);\n        break;\n\n      case Token.NESTED_BLOCK:\n        recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\n\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var reduced;\n  var i;\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level2Optimize;"},"sourceMaps":null,"error":null,"hash":"0bd4e568c0261c8fece7f8a118de2a3d","cacheData":{"env":{}}}