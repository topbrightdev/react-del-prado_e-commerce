{"id":"../node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"./is-mergeable","loc":{"line":1,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/is-mergeable.js"},{"name":"../level-1/sort-selectors","loc":{"line":3,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-1/sort-selectors.js"},{"name":"../level-1/tidy-rules","loc":{"line":4,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-1/tidy-rules.js"},{"name":"../../options/optimization-level","loc":{"line":6,"column":32},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/options/optimization-level.js"},{"name":"../../writer/one-time","loc":{"line":9,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/writer/one-time.js"},{"name":"../../tokenizer/token","loc":{"line":11,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/optimizer/level-2/merge-non-adjacent-by-body.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/tokenizer/token.js"}],"generated":{"js":"var isMergeable = require('./is-mergeable');\n\nvar sortSelectors = require('../level-1/sort-selectors');\n\nvar tidyRules = require('../level-1/tidy-rules');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar serializeBody = require('../../writer/one-time').body;\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nvar Token = require('../../tokenizer/token');\n\nfunction unsafeSelector(value) {\n  return /\\.|\\*| :/.test(value);\n}\n\nfunction isBemElement(token) {\n  var asString = serializeRules(token[1]);\n  return asString.indexOf('__') > -1 || asString.indexOf('--') > -1;\n}\n\nfunction withoutModifier(selector) {\n  return selector.replace(/--[^ ,>\\+~:]+/g, '');\n}\n\nfunction removeAnyUnsafeElements(left, candidates) {\n  var leftSelector = withoutModifier(serializeRules(left[1]));\n\n  for (var body in candidates) {\n    var right = candidates[body];\n    var rightSelector = withoutModifier(serializeRules(right[1]));\n    if (rightSelector.indexOf(leftSelector) > -1 || leftSelector.indexOf(rightSelector) > -1) delete candidates[body];\n  }\n}\n\nfunction mergeNonAdjacentByBody(tokens, context) {\n  var options = context.options;\n  var mergeSemantically = options.level[OptimizationLevel.Two].mergeSemantically;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var selectorsSortingMethod = options.level[OptimizationLevel.One].selectorsSortingMethod;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var candidates = {};\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != Token.RULE) continue;\n    if (token[2].length > 0 && !mergeSemantically && unsafeSelector(serializeRules(token[1]))) candidates = {};\n    if (token[2].length > 0 && mergeSemantically && isBemElement(token)) removeAnyUnsafeElements(token, candidates);\n    var candidateBody = serializeBody(token[2]);\n    var oldToken = candidates[candidateBody];\n\n    if (oldToken && isMergeable(serializeRules(token[1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging) && isMergeable(serializeRules(oldToken[1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging)) {\n      if (token[2].length > 0) {\n        token[1] = tidyRules(oldToken[1].concat(token[1]), false, adjacentSpace, false, context.warnings);\n        token[1] = token[1].length > 1 ? sortSelectors(token[1], selectorsSortingMethod) : token[1];\n      } else {\n        token[1] = oldToken[1].concat(token[1]);\n      }\n\n      oldToken[2] = [];\n      candidates[candidateBody] = null;\n    }\n\n    candidates[serializeBody(token[2])] = token;\n  }\n}\n\nmodule.exports = mergeNonAdjacentByBody;"},"sourceMaps":null,"error":null,"hash":"1fee35156468b334a318297bb483a29d","cacheData":{"env":{}}}