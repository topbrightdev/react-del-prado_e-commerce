{"id":"../node_modules/spdy-transport/lib/spdy-transport/protocol/base/framer.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/package.json","includedInParent":true,"mtime":1594570878662},{"name":"util","loc":{"line":3,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/framer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"},{"name":"../../../spdy-transport","loc":{"line":5,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/framer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport.js"},{"name":"./","loc":{"line":6,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/framer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/index.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/spdy-transport/lib/spdy-transport/protocol/base/framer.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict'\n\nvar util = require('util')\n\nvar transport = require('../../../spdy-transport')\nvar base = require('./')\nvar Scheduler = base.Scheduler\n\nfunction Framer (options) {\n  Scheduler.call(this)\n\n  this.version = null\n  this.compress = null\n  this.window = options.window\n  this.timeout = options.timeout\n\n  // Wait for `enablePush`\n  this.pushEnabled = null\n}\nutil.inherits(Framer, Scheduler)\nmodule.exports = Framer\n\nFramer.prototype.setVersion = function setVersion (version) {\n  this.version = version\n  this.emit('version')\n}\n\nFramer.prototype.setCompression = function setCompresion (pair) {\n  this.compress = new transport.utils.LockStream(pair.compress)\n}\n\nFramer.prototype.enablePush = function enablePush (enable) {\n  this.pushEnabled = enable\n  this.emit('_pushEnabled')\n}\n\nFramer.prototype._checkPush = function _checkPush (callback) {\n  if (this.pushEnabled === null) {\n    this.once('_pushEnabled', function () {\n      this._checkPush(callback)\n    })\n    return\n  }\n\n  var err = null\n  if (!this.pushEnabled) {\n    err = new Error('PUSH_PROMISE disabled by other side')\n  }\n  process.nextTick(function () {\n    return callback(err)\n  })\n}\n\nFramer.prototype._resetTimeout = function _resetTimeout () {\n  if (this.timeout) {\n    this.timeout.reset()\n  }\n}\n"},"sourceMaps":null,"error":null,"hash":"90af8e759234a1adaaa0d9693029dce2","cacheData":{"env":{}}}