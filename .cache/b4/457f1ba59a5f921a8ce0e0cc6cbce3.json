{"id":"../node_modules/enhanced-resolve/lib/ModuleKindPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/enhanced-resolve/package.json","includedInParent":true,"mtime":1594306879878}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nmodule.exports = /*#__PURE__*/function () {\n  function ModuleKindPlugin(source, target) {\n    _classCallCheck(this, ModuleKindPlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n\n  _createClass(ModuleKindPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModuleKindPlugin\", function (request, resolveContext, callback) {\n        if (!request.module) return callback();\n        var obj = Object.assign({}, request);\n        delete obj.module;\n        resolver.doResolve(target, obj, \"resolve as module\", resolveContext, function (err, result) {\n          if (err) return callback(err); // Don't allow other alternatives\n\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    }\n  }]);\n\n  return ModuleKindPlugin;\n}();"},"sourceMaps":null,"error":null,"hash":"77fda3d60a21fcbcf53ab0f1260dfae2","cacheData":{"env":{}}}