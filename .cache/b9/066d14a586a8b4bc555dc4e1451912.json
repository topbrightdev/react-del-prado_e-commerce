{"id":"../node_modules/react-dev-utils/getCSSModuleLocalIdent.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106},{"name":"loader-utils","loc":{"line":10,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/getCSSModuleLocalIdent.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/loader-utils/lib/index.js"}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar loaderUtils = require('loader-utils');\n\nmodule.exports = function getLocalIdent(context, localIdentName, localName, options) {\n  // Use the filename or folder name, based on some uses the index.js / index.module.(css|scss|sass) project style\n  var fileNameOrFolder = context.resourcePath.match(/index\\.module\\.(css|scss|sass)$/) ? '[folder]' : '[name]'; // Create a hash based on a the file location and class name. Will be unique across a project, and close to globally unique.\n\n  var hash = loaderUtils.getHashDigest(context.resourcePath + localName, 'md5', 'base64', 5); // Use loaderUtils to find the file or folder name\n\n  var className = loaderUtils.interpolateName(context, fileNameOrFolder + '_' + localName + '__' + hash, options); // remove the .module that appears in every classname when based on the file.\n\n  return className.replace('.module_', '_');\n};"},"sourceMaps":null,"error":null,"hash":"19c7bd20fd77f8af633d253605fd7f4e","cacheData":{"env":{}}}