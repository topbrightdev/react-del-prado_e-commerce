{"id":"../node_modules/set-value/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/package.json","includedInParent":true,"mtime":1594570878670},{"name":"split-string","loc":{"line":10,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/split-string/index.js"},{"name":"extend-shallow","loc":{"line":11,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/node_modules/extend-shallow/index.js"},{"name":"is-plain-object","loc":{"line":12,"column":28},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/is-plain-object/index.js"},{"name":"is-extendable","loc":{"line":13,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/set-value/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/is-extendable/index.js"}],"generated":{"js":"/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar split = require('split-string');\n\nvar extend = require('extend-shallow');\n\nvar isPlainObject = require('is-plain-object');\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function (obj, prop, val) {\n  if (!isObject(obj)) {\n    return obj;\n  }\n\n  if (Array.isArray(prop)) {\n    prop = [].concat.apply([], prop).join('.');\n  }\n\n  if (typeof prop !== 'string') {\n    return obj;\n  }\n\n  var keys = split(prop, {\n    sep: '.',\n    brackets: true\n  });\n  var len = keys.length;\n  var idx = -1;\n  var current = obj;\n\n  while (++idx < len) {\n    var key = keys[idx];\n\n    if (idx !== len - 1) {\n      if (!isObject(current[key])) {\n        current[key] = {};\n      }\n\n      current = current[key];\n      continue;\n    }\n\n    if (isPlainObject(current[key]) && isPlainObject(val)) {\n      current[key] = extend({}, current[key], val);\n    } else {\n      current[key] = val;\n    }\n  }\n\n  return obj;\n};"},"sourceMaps":null,"error":null,"hash":"711f5116169ec9c5b6e1832f1d507a6c","cacheData":{"env":{}}}