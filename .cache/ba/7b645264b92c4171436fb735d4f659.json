{"id":"../node_modules/react-dev-utils/ModuleNotFoundPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106},{"name":"chalk","loc":{"line":10,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/ModuleNotFoundPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"find-up","loc":{"line":11,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/ModuleNotFoundPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/find-up/index.js"},{"name":"path","loc":{"line":12,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/ModuleNotFoundPlugin.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar chalk = require('chalk');\n\nvar findUp = require('find-up');\n\nvar path = require('path');\n\nvar ModuleNotFoundPlugin = /*#__PURE__*/function () {\n  function ModuleNotFoundPlugin(appPath, yarnLockFile) {\n    _classCallCheck(this, ModuleNotFoundPlugin);\n\n    this.appPath = appPath;\n    this.yarnLockFile = yarnLockFile;\n    this.useYarnCommand = this.useYarnCommand.bind(this);\n    this.getRelativePath = this.getRelativePath.bind(this);\n    this.prettierError = this.prettierError.bind(this);\n  }\n\n  _createClass(ModuleNotFoundPlugin, [{\n    key: \"useYarnCommand\",\n    value: function useYarnCommand() {\n      try {\n        return findUp.sync('yarn.lock', {\n          cwd: this.appPath\n        }) != null;\n      } catch (_) {\n        return false;\n      }\n    }\n  }, {\n    key: \"getRelativePath\",\n    value: function getRelativePath(_file) {\n      var file = path.relative(this.appPath, _file);\n\n      if (file.startsWith('..')) {\n        file = _file;\n      } else if (!file.startsWith('.')) {\n        file = '.' + path.sep + file;\n      }\n\n      return file;\n    }\n  }, {\n    key: \"prettierError\",\n    value: function prettierError(err) {\n      var {\n        details: _details = '',\n        origin\n      } = err;\n\n      if (origin == null) {\n        var caseSensitivity = err.message && /\\[CaseSensitivePathsPlugin\\] `(.*?)` .* `(.*?)`/.exec(err.message);\n\n        if (caseSensitivity) {\n          var [, incorrectPath, actualName] = caseSensitivity;\n          var actualFile = this.getRelativePath(path.join(path.dirname(incorrectPath), actualName));\n          var incorrectName = path.basename(incorrectPath);\n          err.message = \"Cannot find file: '\".concat(incorrectName, \"' does not match the corresponding name on disk: '\").concat(actualFile, \"'.\");\n        }\n\n        return err;\n      }\n\n      var file = this.getRelativePath(origin.resource);\n\n      var details = _details.split('\\n');\n\n      var request = /resolve '(.*?)' in '(.*?)'/.exec(details);\n\n      if (request) {\n        var isModule = details[1] && details[1].includes('module');\n        var isFile = details[1] && details[1].includes('file');\n        var [, target, context] = request;\n        context = this.getRelativePath(context);\n\n        if (isModule) {\n          var isYarn = this.useYarnCommand();\n          details = [\"Cannot find module: '\".concat(target, \"'. Make sure this package is installed.\"), '', 'You can install this package by running: ' + (isYarn ? chalk.bold(\"yarn add \".concat(target)) : chalk.bold(\"npm install \".concat(target))) + '.'];\n        } else if (isFile) {\n          details = [\"Cannot find file '\".concat(target, \"' in '\").concat(context, \"'.\")];\n        } else {\n          details = [err.message];\n        }\n      } else {\n        details = [err.message];\n      }\n\n      err.message = [file].concat(_toConsumableArray(details)).join('\\n').replace('Error: ', '');\n      var isModuleScopePluginError = err.error && err.error.__module_scope_plugin;\n\n      if (isModuleScopePluginError) {\n        err.message = err.message.replace('Module not found: ', '');\n      }\n\n      return err;\n    }\n  }, {\n    key: \"apply\",\n    value: function apply(compiler) {\n      var {\n        prettierError\n      } = this;\n      compiler.hooks.make.intercept({\n        register(tap) {\n          if (!(tap.name === 'MultiEntryPlugin' || tap.name === 'SingleEntryPlugin')) {\n            return tap;\n          }\n\n          return Object.assign({}, tap, {\n            fn: function (compilation, callback) {\n              tap.fn(compilation, function (err) {\n                if (err && err.name === 'ModuleNotFoundError') {\n                  err = prettierError(err);\n                }\n\n                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  args[_key - 1] = arguments[_key];\n                }\n\n                callback.apply(void 0, [err].concat(args));\n              });\n            }\n          });\n        }\n\n      });\n      compiler.hooks.normalModuleFactory.tap('ModuleNotFoundPlugin', function (nmf) {\n        nmf.hooks.afterResolve.intercept({\n          register(tap) {\n            if (tap.name !== 'CaseSensitivePathsPlugin') {\n              return tap;\n            }\n\n            return Object.assign({}, tap, {\n              fn: function (compilation, callback) {\n                tap.fn(compilation, function (err) {\n                  if (err && err.message && err.message.includes('CaseSensitivePathsPlugin')) {\n                    err = prettierError(err);\n                  }\n\n                  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                    args[_key2 - 1] = arguments[_key2];\n                  }\n\n                  callback.apply(void 0, [err].concat(args));\n                });\n              }\n            });\n          }\n\n        });\n      });\n    }\n  }]);\n\n  return ModuleNotFoundPlugin;\n}();\n\nmodule.exports = ModuleNotFoundPlugin;"},"sourceMaps":null,"error":null,"hash":"a7a49953dc3c80181a2b4917835953f7","cacheData":{"env":{}}}