{"id":"../node_modules/inquirer/lib/prompts/checkbox.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/package.json","includedInParent":true,"mtime":1594570878526},{"name":"lodash","loc":{"line":6,"column":16},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/lodash/lodash.js"},{"name":"chalk","loc":{"line":7,"column":20},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/chalk/index.js"},{"name":"cli-cursor","loc":{"line":8,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/cli-cursor/index.js"},{"name":"figures","loc":{"line":9,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/figures/index.js"},{"name":"rxjs/operators","loc":{"line":10,"column":33},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/rxjs/_esm5/operators/index.js"},{"name":"./base","loc":{"line":11,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/base.js"},{"name":"../utils/events","loc":{"line":12,"column":22},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/events.js"},{"name":"../utils/paginator","loc":{"line":13,"column":24},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/prompts/checkbox.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/inquirer/lib/utils/paginator.js"}],"generated":{"js":"'use strict';\n/**\n * `list` type prompt\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _ = require('lodash');\n\nvar chalk = require('chalk');\n\nvar cliCursor = require('cli-cursor');\n\nvar figures = require('figures');\n\nvar {\n  map,\n  takeUntil\n} = require('rxjs/operators');\n\nvar Base = require('./base');\n\nvar observe = require('../utils/events');\n\nvar Paginator = require('../utils/paginator');\n\nvar CheckboxPrompt = /*#__PURE__*/function (_Base) {\n  _inherits(CheckboxPrompt, _Base);\n\n  var _super = _createSuper(CheckboxPrompt);\n\n  function CheckboxPrompt(questions, rl, answers) {\n    var _this;\n\n    _classCallCheck(this, CheckboxPrompt);\n\n    _this = _super.call(this, questions, rl, answers);\n\n    if (!_this.opt.choices) {\n      _this.throwParamError('choices');\n    }\n\n    if (_.isArray(_this.opt.default)) {\n      _this.opt.choices.forEach(function (choice) {\n        if (this.opt.default.indexOf(choice.value) >= 0) {\n          choice.checked = true;\n        }\n      }, _assertThisInitialized(_this));\n    }\n\n    _this.pointer = 0;\n    _this.firstRender = true; // Make sure no default is set (so it won't be printed)\n\n    _this.opt.default = null;\n    _this.paginator = new Paginator(_this.screen);\n    return _this;\n  }\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n\n  _createClass(CheckboxPrompt, [{\n    key: \"_run\",\n    value: function _run(cb) {\n      this.done = cb;\n      var events = observe(this.rl);\n      var validation = this.handleSubmitEvents(events.line.pipe(map(this.getCurrentValue.bind(this))));\n      validation.success.forEach(this.onEnd.bind(this));\n      validation.error.forEach(this.onError.bind(this));\n      events.normalizedUpKey.pipe(takeUntil(validation.success)).forEach(this.onUpKey.bind(this));\n      events.normalizedDownKey.pipe(takeUntil(validation.success)).forEach(this.onDownKey.bind(this));\n      events.numberKey.pipe(takeUntil(validation.success)).forEach(this.onNumberKey.bind(this));\n      events.spaceKey.pipe(takeUntil(validation.success)).forEach(this.onSpaceKey.bind(this));\n      events.aKey.pipe(takeUntil(validation.success)).forEach(this.onAllKey.bind(this));\n      events.iKey.pipe(takeUntil(validation.success)).forEach(this.onInverseKey.bind(this)); // Init the prompt\n\n      cliCursor.hide();\n      this.render();\n      this.firstRender = false;\n      return this;\n    }\n    /**\n     * Render the prompt to screen\n     * @return {CheckboxPrompt} self\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(error) {\n      // Render question\n      var message = this.getQuestion();\n      var bottomContent = '';\n\n      if (this.firstRender) {\n        message += '(Press ' + chalk.cyan.bold('<space>') + ' to select, ' + chalk.cyan.bold('<a>') + ' to toggle all, ' + chalk.cyan.bold('<i>') + ' to invert selection)';\n      } // Render choices or answer depending on the state\n\n\n      if (this.status === 'answered') {\n        message += chalk.cyan(this.selection.join(', '));\n      } else {\n        var choicesStr = renderChoices(this.opt.choices, this.pointer);\n        var indexPosition = this.opt.choices.indexOf(this.opt.choices.getChoice(this.pointer));\n        message += '\\n' + this.paginator.paginate(choicesStr, indexPosition, this.opt.pageSize);\n      }\n\n      if (error) {\n        bottomContent = chalk.red('>> ') + error;\n      }\n\n      this.screen.render(message, bottomContent);\n    }\n    /**\n     * When user press `enter` key\n     */\n\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(state) {\n      this.status = 'answered'; // Rerender prompt (and clean subline error)\n\n      this.render();\n      this.screen.done();\n      cliCursor.show();\n      this.done(state.value);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(state) {\n      this.render(state.isValid);\n    }\n  }, {\n    key: \"getCurrentValue\",\n    value: function getCurrentValue() {\n      var choices = this.opt.choices.filter(function (choice) {\n        return Boolean(choice.checked) && !choice.disabled;\n      });\n      this.selection = _.map(choices, 'short');\n      return _.map(choices, 'value');\n    }\n  }, {\n    key: \"onUpKey\",\n    value: function onUpKey() {\n      var len = this.opt.choices.realLength;\n      this.pointer = this.pointer > 0 ? this.pointer - 1 : len - 1;\n      this.render();\n    }\n  }, {\n    key: \"onDownKey\",\n    value: function onDownKey() {\n      var len = this.opt.choices.realLength;\n      this.pointer = this.pointer < len - 1 ? this.pointer + 1 : 0;\n      this.render();\n    }\n  }, {\n    key: \"onNumberKey\",\n    value: function onNumberKey(input) {\n      if (input <= this.opt.choices.realLength) {\n        this.pointer = input - 1;\n        this.toggleChoice(this.pointer);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"onSpaceKey\",\n    value: function onSpaceKey() {\n      this.toggleChoice(this.pointer);\n      this.render();\n    }\n  }, {\n    key: \"onAllKey\",\n    value: function onAllKey() {\n      var shouldBeChecked = Boolean(this.opt.choices.find(function (choice) {\n        return choice.type !== 'separator' && !choice.checked;\n      }));\n      this.opt.choices.forEach(function (choice) {\n        if (choice.type !== 'separator') {\n          choice.checked = shouldBeChecked;\n        }\n      });\n      this.render();\n    }\n  }, {\n    key: \"onInverseKey\",\n    value: function onInverseKey() {\n      this.opt.choices.forEach(function (choice) {\n        if (choice.type !== 'separator') {\n          choice.checked = !choice.checked;\n        }\n      });\n      this.render();\n    }\n  }, {\n    key: \"toggleChoice\",\n    value: function toggleChoice(index) {\n      var item = this.opt.choices.getChoice(index);\n\n      if (item !== undefined) {\n        this.opt.choices.getChoice(index).checked = !item.checked;\n      }\n    }\n  }]);\n\n  return CheckboxPrompt;\n}(Base);\n/**\n * Function for rendering checkbox choices\n * @param  {Number} pointer Position of the pointer\n * @return {String}         Rendered content\n */\n\n\nfunction renderChoices(choices, pointer) {\n  var output = '';\n  var separatorOffset = 0;\n  choices.forEach(function (choice, i) {\n    if (choice.type === 'separator') {\n      separatorOffset++;\n      output += ' ' + choice + '\\n';\n      return;\n    }\n\n    if (choice.disabled) {\n      separatorOffset++;\n      output += ' - ' + choice.name;\n      output += ' (' + (_.isString(choice.disabled) ? choice.disabled : 'Disabled') + ')';\n    } else {\n      var line = getCheckbox(choice.checked) + ' ' + choice.name;\n\n      if (i - separatorOffset === pointer) {\n        output += chalk.cyan(figures.pointer + line);\n      } else {\n        output += ' ' + line;\n      }\n    }\n\n    output += '\\n';\n  });\n  return output.replace(/\\n$/, '');\n}\n/**\n * Get the checkbox\n * @param  {Boolean} checked - add a X or not to the checkbox\n * @return {String} Composited checkbox string\n */\n\n\nfunction getCheckbox(checked) {\n  return checked ? chalk.green(figures.radioOn) : figures.radioOff;\n}\n\nmodule.exports = CheckboxPrompt;"},"sourceMaps":null,"error":null,"hash":"a8538b88c48ff5074658248ce0df9340","cacheData":{"env":{}}}