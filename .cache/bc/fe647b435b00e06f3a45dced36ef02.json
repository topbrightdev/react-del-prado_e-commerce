{"id":"../node_modules/webpack-log/src/loglevel/PrefixFactory.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/package.json","includedInParent":true,"mtime":1594306881666},{"name":"./MethodFactory","loc":{"line":7,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/loglevel/PrefixFactory.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/loglevel/MethodFactory.js"}],"generated":{"js":"'use strict';\n/* eslint-disable\n  no-param-reassign,\n  space-before-function-paren\n*/\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar MethodFactory = require('./MethodFactory');\n\nvar defaults = {\n  name(options) {\n    return options.logger.name;\n  },\n\n  time() {\n    return new Date().toTimeString().split(' ')[0];\n  },\n\n  level(options) {\n    return \"[\".concat(options.level, \"]\");\n  },\n\n  template: '{{time}} {{level}} '\n};\n\nvar PrefixFactory = /*#__PURE__*/function (_MethodFactory) {\n  _inherits(PrefixFactory, _MethodFactory);\n\n  var _super = _createSuper(PrefixFactory);\n\n  function PrefixFactory(logger, options) {\n    var _this;\n\n    _classCallCheck(this, PrefixFactory);\n\n    _this = _super.call(this, logger);\n    _this.options = Object.assign({}, defaults, options);\n    return _this;\n  }\n\n  _createClass(PrefixFactory, [{\n    key: \"interpolate\",\n    value: function interpolate(level) {\n      var _this2 = this;\n\n      return this.options.template.replace(/{{([^{}]*)}}/g, function (stache, prop) {\n        var fn = _this2.options[prop];\n\n        if (fn) {\n          return fn({\n            level,\n            logger: _this2.logger\n          });\n        }\n\n        return stache;\n      });\n    }\n  }, {\n    key: \"make\",\n    value: function make(method) {\n      var _this3 = this;\n\n      var og = _get(_getPrototypeOf(PrefixFactory.prototype), \"make\", this).call(this, method);\n\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var [first] = args;\n\n        var output = _this3.interpolate(method);\n\n        if (typeof first === 'string') {\n          args[0] = output + first;\n        } else {\n          args.unshift(output);\n        }\n\n        og.apply(void 0, args);\n      };\n    }\n  }]);\n\n  return PrefixFactory;\n}(MethodFactory);\n\nmodule.exports = PrefixFactory;"},"sourceMaps":null,"error":null,"hash":"110de8a9bd7fb31fb331f3868278225f","cacheData":{"env":{}}}