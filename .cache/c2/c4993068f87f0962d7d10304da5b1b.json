{"id":"../node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/package.json","includedInParent":true,"mtime":1594306881442},{"name":"stream","loc":{"line":1,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/stream-browserify/index.js"},{"name":"util","loc":{"line":2,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/util/util.js"},{"name":"websocket-driver","loc":{"line":3,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-driver/lib/websocket/driver.js"},{"name":"./api/event_target","loc":{"line":4,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api/event_target.js"},{"name":"./api/event","loc":{"line":5,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api/event.js"},{"name":"buffer","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/sockjs/node_modules/faye-websocket/lib/faye/websocket/api.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar Stream = require('stream').Stream,\n    util = require('util'),\n    driver = require('websocket-driver'),\n    EventTarget = require('./api/event_target'),\n    Event = require('./api/event');\n\nvar API = function (options) {\n  options = options || {};\n  driver.validateOptions(options, ['headers', 'extensions', 'maxLength', 'ping', 'proxy', 'tls', 'ca']);\n  this.readable = this.writable = true;\n  var headers = options.headers;\n\n  if (headers) {\n    for (var name in headers) this._driver.setHeader(name, headers[name]);\n  }\n\n  var extensions = options.extensions;\n\n  if (extensions) {\n    [].concat(extensions).forEach(this._driver.addExtension, this._driver);\n  }\n\n  this._ping = options.ping;\n  this._pingId = 0;\n  this.readyState = API.CONNECTING;\n  this.bufferedAmount = 0;\n  this.protocol = '';\n  this.url = this._driver.url;\n  this.version = this._driver.version;\n  var self = this;\n\n  this._driver.on('open', function (e) {\n    self._open();\n  });\n\n  this._driver.on('message', function (e) {\n    self._receiveMessage(e.data);\n  });\n\n  this._driver.on('close', function (e) {\n    self._beginClose(e.reason, e.code);\n  });\n\n  this._driver.on('error', function (error) {\n    self._emitError(error.message);\n  });\n\n  this.on('error', function () {});\n\n  this._driver.messages.on('drain', function () {\n    self.emit('drain');\n  });\n\n  if (this._ping) this._pingTimer = setInterval(function () {\n    self._pingId += 1;\n    self.ping(self._pingId.toString());\n  }, this._ping * 1000);\n\n  this._configureStream();\n\n  if (!this._proxy) {\n    this._stream.pipe(this._driver.io);\n\n    this._driver.io.pipe(this._stream);\n  }\n};\n\nutil.inherits(API, Stream);\nAPI.CONNECTING = 0;\nAPI.OPEN = 1;\nAPI.CLOSING = 2;\nAPI.CLOSED = 3;\nvar instance = {\n  write: function (data) {\n    return this.send(data);\n  },\n  end: function (data) {\n    if (data !== undefined) this.send(data);\n    this.close();\n  },\n  pause: function () {\n    return this._driver.messages.pause();\n  },\n  resume: function () {\n    return this._driver.messages.resume();\n  },\n  send: function (data) {\n    if (this.readyState > API.OPEN) return false;\n    if (!(data instanceof Buffer)) data = String(data);\n    return this._driver.messages.write(data);\n  },\n  ping: function (message, callback) {\n    if (this.readyState > API.OPEN) return false;\n    return this._driver.ping(message, callback);\n  },\n  close: function (code, reason) {\n    if (code === undefined) code = 1000;\n    if (reason === undefined) reason = '';\n    if (code !== 1000 && (code < 3000 || code > 4999)) throw new Error(\"Failed to execute 'close' on WebSocket: \" + \"The code must be either 1000, or between 3000 and 4999. \" + code + \" is neither.\");\n    if (this.readyState !== API.CLOSED) this.readyState = API.CLOSING;\n\n    this._driver.close(reason, code);\n  },\n  _configureStream: function () {\n    var self = this;\n\n    this._stream.setTimeout(0);\n\n    this._stream.setNoDelay(true);\n\n    ['close', 'end'].forEach(function (event) {\n      this._stream.on(event, function () {\n        self._finalizeClose();\n      });\n    }, this);\n\n    this._stream.on('error', function (error) {\n      self._emitError('Network error: ' + self.url + ': ' + error.message);\n\n      self._finalizeClose();\n    });\n  },\n  _open: function () {\n    if (this.readyState !== API.CONNECTING) return;\n    this.readyState = API.OPEN;\n    this.protocol = this._driver.protocol || '';\n    var event = new Event('open');\n    event.initEvent('open', false, false);\n    this.dispatchEvent(event);\n  },\n  _receiveMessage: function (data) {\n    if (this.readyState > API.OPEN) return false;\n    if (this.readable) this.emit('data', data);\n    var event = new Event('message', {\n      data: data\n    });\n    event.initEvent('message', false, false);\n    this.dispatchEvent(event);\n  },\n  _emitError: function (message) {\n    if (this.readyState >= API.CLOSING) return;\n    var event = new Event('error', {\n      message: message\n    });\n    event.initEvent('error', false, false);\n    this.dispatchEvent(event);\n  },\n  _beginClose: function (reason, code) {\n    if (this.readyState === API.CLOSED) return;\n    this.readyState = API.CLOSING;\n    this._closeParams = [reason, code];\n\n    if (this._stream) {\n      this._stream.end();\n\n      if (!this._stream.readable) this._finalizeClose();\n    }\n  },\n  _finalizeClose: function () {\n    if (this.readyState === API.CLOSED) return;\n    this.readyState = API.CLOSED;\n    if (this._pingTimer) clearInterval(this._pingTimer);\n    if (this._stream) this._stream.end();\n    if (this.readable) this.emit('end');\n    this.readable = this.writable = false;\n    var reason = this._closeParams ? this._closeParams[0] : '',\n        code = this._closeParams ? this._closeParams[1] : 1006;\n    var event = new Event('close', {\n      code: code,\n      reason: reason\n    });\n    event.initEvent('close', false, false);\n    this.dispatchEvent(event);\n  }\n};\n\nfor (var method in instance) API.prototype[method] = instance[method];\n\nfor (var key in EventTarget) API.prototype[key] = EventTarget[key];\n\nmodule.exports = API;"},"sourceMaps":null,"error":null,"hash":"a0d5a66e4285e4af6f243fef7ce411bf","cacheData":{"env":{}}}