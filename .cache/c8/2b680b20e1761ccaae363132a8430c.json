{"id":"../node_modules/webpack/node_modules/webpack-sources/lib/ConcatSource.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/package.json","includedInParent":true,"mtime":1594570878394},{"name":"source-map","loc":{"line":7,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/ConcatSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/source-map/source-map.js"},{"name":"source-list-map","loc":{"line":8,"column":30},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/ConcatSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/source-list-map/lib/index.js"},{"name":"./Source","loc":{"line":9,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/ConcatSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/Source.js"},{"name":"./SourceAndMapMixin","loc":{"line":89,"column":8},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/ConcatSource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/webpack-sources/lib/SourceAndMapMixin.js"}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SourceNode = require(\"source-map\").SourceNode;\nconst SourceListMap = require(\"source-list-map\").SourceListMap;\nconst Source = require(\"./Source\");\n\nclass ConcatSource extends Source {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.children = [];\n\t\tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tvar item = arguments[i];\n\t\t\tif(item instanceof ConcatSource) {\n\t\t\t\tvar children = item.children;\n\t\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\t\tthis.children.push(children[j]);\n\t\t\t} else {\n\t\t\t\tthis.children.push(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(item) {\n\t\tif(item instanceof ConcatSource) {\n\t\t\tvar children = item.children;\n\t\t\tfor(var j = 0; j < children.length; j++)\n\t\t\t\tthis.children.push(children[j]);\n\t\t} else {\n\t\t\tthis.children.push(item);\n\t\t}\n\t}\n\n\tsource() {\n\t\tlet source = \"\";\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsource += typeof child === \"string\" ? child : child.source();\n\t\t}\n\t\treturn source;\n\t}\n\n\tsize() {\n\t\tlet size = 0;\n\t\tconst children = this.children;\n\t\tfor(let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i];\n\t\t\tsize += typeof child === \"string\" ? child.length : child.size();\n\t\t}\n\t\treturn size;\n\t}\n\n\tnode(options) {\n\t\tconst node = new SourceNode(null, null, null, this.children.map(function(item) {\n\t\t\treturn typeof item === \"string\" ? item : item.node(options);\n\t\t}));\n\t\treturn node;\n\t}\n\n\tlistMap(options) {\n\t\tconst map = new SourceListMap();\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\tmap.add(item);\n\t\t\telse\n\t\t\t\tmap.add(item.listMap(options));\n\t\t}\n\t\treturn map;\n\t}\n\n\tupdateHash(hash) {\n\t\tvar children = this.children;\n\t\tfor(var i = 0; i < children.length; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif(typeof item === \"string\")\n\t\t\t\thash.update(item);\n\t\t\telse\n\t\t\t\titem.updateHash(hash);\n\t\t}\n\t}\n}\n\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\n\nmodule.exports = ConcatSource;\n"},"sourceMaps":null,"error":null,"hash":"5e1b385398c441bf751bc762384d241d","cacheData":{"env":{}}}