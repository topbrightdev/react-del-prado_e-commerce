{"id":"../node_modules/loader-utils/lib/stringifyRequest.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/loader-utils/package.json","includedInParent":true,"mtime":1594570879294},{"name":"path","loc":{"line":3,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/loader-utils/lib/stringifyRequest.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"}],"generated":{"js":"\"use strict\";\n\nconst path = require(\"path\");\n\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n  const splitted = request.split(\"!\");\n  const context = loaderContext.context || loaderContext.options && loaderContext.options.context;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    let singlePath = splittedPart ? splittedPart[1] : part;\n    const query = splittedPart ? splittedPart[2] : \"\";\n\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = \"./\" + singlePath;\n      }\n    }\n\n    return singlePath.replace(/\\\\/g, \"/\") + query;\n  }).join(\"!\"));\n}\n\nmodule.exports = stringifyRequest;"},"sourceMaps":null,"error":null,"hash":"684cca68e7aa68274e128d808bd647f7","cacheData":{"env":{}}}