{"id":"../node_modules/react-dev-utils/WatchMissingNodeModulesPlugin.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/package.json","includedInParent":true,"mtime":1594306881106}],"generated":{"js":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This Webpack plugin ensures `npm install <library>` forces a project rebuild.\n// Weâ€™re not sure why this isn't Webpack's default behavior.\n// See https://github.com/facebook/create-react-app/issues/186.\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar WatchMissingNodeModulesPlugin = /*#__PURE__*/function () {\n  function WatchMissingNodeModulesPlugin(nodeModulesPath) {\n    _classCallCheck(this, WatchMissingNodeModulesPlugin);\n\n    this.nodeModulesPath = nodeModulesPath;\n  }\n\n  _createClass(WatchMissingNodeModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.emit.tap('WatchMissingNodeModulesPlugin', function (compilation) {\n        var missingDeps = Array.from(compilation.missingDependencies);\n        var nodeModulesPath = _this.nodeModulesPath; // If any missing files are expected to appear in node_modules...\n\n        if (missingDeps.some(function (file) {\n          return file.includes(nodeModulesPath);\n        })) {\n          // ...tell webpack to watch node_modules recursively until they appear.\n          compilation.contextDependencies.add(nodeModulesPath);\n        }\n      });\n    }\n  }]);\n\n  return WatchMissingNodeModulesPlugin;\n}();\n\nmodule.exports = WatchMissingNodeModulesPlugin;"},"sourceMaps":null,"error":null,"hash":"e51cd0875dd7a90d716ef82e2416a431","cacheData":{"env":{}}}