{"id":"../node_modules/websocket-driver/lib/websocket/http_parser.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-driver/package.json","includedInParent":true,"mtime":1594570878394},{"name":"http-parser-js","loc":{"line":3,"column":29},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-driver/lib/websocket/http_parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/http-parser-js/http-parser.js"},{"name":"process","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-driver/lib/websocket/http_parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/process/browser.js"},{"name":"buffer","parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/websocket-driver/lib/websocket/http_parser.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/buffer/index.js"}],"generated":{"js":"var process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nvar NodeHTTPParser = require('http-parser-js').HTTPParser;\n\nvar VERSION = process.version.match(/[0-9]+/g).map(function (n) {\n  return parseInt(n, 10);\n});\nvar TYPES = {\n  request: NodeHTTPParser.REQUEST || 'request',\n  response: NodeHTTPParser.RESPONSE || 'response'\n};\n\nvar HttpParser = function (type) {\n  this._type = type;\n  this._parser = new NodeHTTPParser(TYPES[type]);\n  this._complete = false;\n  this.headers = {};\n  var current = null,\n      self = this;\n\n  this._parser.onHeaderField = function (b, start, length) {\n    current = b.toString('utf8', start, start + length).toLowerCase();\n  };\n\n  this._parser.onHeaderValue = function (b, start, length) {\n    var value = b.toString('utf8', start, start + length);\n    if (self.headers.hasOwnProperty(current)) self.headers[current] += ', ' + value;else self.headers[current] = value;\n  };\n\n  this._parser.onHeadersComplete = this._parser[NodeHTTPParser.kOnHeadersComplete] = function (majorVersion, minorVersion, headers, method, pathname, statusCode) {\n    var info = arguments[0];\n\n    if (typeof info === 'object') {\n      method = info.method;\n      pathname = info.url;\n      statusCode = info.statusCode;\n      headers = info.headers;\n    }\n\n    self.method = typeof method === 'number' ? HttpParser.METHODS[method] : method;\n    self.statusCode = statusCode;\n    self.url = pathname;\n    if (!headers) return;\n\n    for (var i = 0, n = headers.length, key, value; i < n; i += 2) {\n      key = headers[i].toLowerCase();\n      value = headers[i + 1];\n      if (self.headers.hasOwnProperty(key)) self.headers[key] += ', ' + value;else self.headers[key] = value;\n    }\n\n    self._complete = true;\n  };\n};\n\nHttpParser.METHODS = {\n  0: 'DELETE',\n  1: 'GET',\n  2: 'HEAD',\n  3: 'POST',\n  4: 'PUT',\n  5: 'CONNECT',\n  6: 'OPTIONS',\n  7: 'TRACE',\n  8: 'COPY',\n  9: 'LOCK',\n  10: 'MKCOL',\n  11: 'MOVE',\n  12: 'PROPFIND',\n  13: 'PROPPATCH',\n  14: 'SEARCH',\n  15: 'UNLOCK',\n  16: 'BIND',\n  17: 'REBIND',\n  18: 'UNBIND',\n  19: 'ACL',\n  20: 'REPORT',\n  21: 'MKACTIVITY',\n  22: 'CHECKOUT',\n  23: 'MERGE',\n  24: 'M-SEARCH',\n  25: 'NOTIFY',\n  26: 'SUBSCRIBE',\n  27: 'UNSUBSCRIBE',\n  28: 'PATCH',\n  29: 'PURGE',\n  30: 'MKCALENDAR',\n  31: 'LINK',\n  32: 'UNLINK'\n};\n\nif (VERSION[0] === 0 && VERSION[1] === 12) {\n  HttpParser.METHODS[16] = 'REPORT';\n  HttpParser.METHODS[17] = 'MKACTIVITY';\n  HttpParser.METHODS[18] = 'CHECKOUT';\n  HttpParser.METHODS[19] = 'MERGE';\n  HttpParser.METHODS[20] = 'M-SEARCH';\n  HttpParser.METHODS[21] = 'NOTIFY';\n  HttpParser.METHODS[22] = 'SUBSCRIBE';\n  HttpParser.METHODS[23] = 'UNSUBSCRIBE';\n  HttpParser.METHODS[24] = 'PATCH';\n  HttpParser.METHODS[25] = 'PURGE';\n}\n\nHttpParser.prototype.isComplete = function () {\n  return this._complete;\n};\n\nHttpParser.prototype.parse = function (chunk) {\n  var consumed = this._parser.execute(chunk, 0, chunk.length);\n\n  if (typeof consumed !== 'number') {\n    this.error = consumed;\n    this._complete = true;\n    return;\n  }\n\n  if (VERSION[0] === 0 && VERSION[1] < 6) consumed += 1;\n  if (this._complete) this.body = consumed < chunk.length ? chunk.slice(consumed) : new Buffer(0);\n};\n\nmodule.exports = HttpParser;"},"sourceMaps":null,"error":null,"hash":"b419502c50d47dc3d8e3153079d70ff8","cacheData":{"env":{}}}