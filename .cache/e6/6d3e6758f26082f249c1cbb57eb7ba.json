{"id":"../node_modules/enhanced-resolve/lib/forEachBail.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/enhanced-resolve/package.json","includedInParent":true,"mtime":1594306879878}],"generated":{"js":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = function forEachBail(array, iterator, callback) {\n  if (array.length === 0) return callback();\n  var currentPos = array.length;\n  var currentResult;\n  var done = [];\n\n  for (var i = 0; i < array.length; i++) {\n    var itCb = createIteratorCallback(i);\n    iterator(array[i], itCb);\n    if (currentPos === 0) break;\n  }\n\n  function createIteratorCallback(i) {\n    return function () {\n      if (i >= currentPos) return; // ignore\n\n      done.push(i);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length > 0) {\n        currentPos = i + 1;\n        done = done.filter(function (item) {\n          return item <= i;\n        });\n        currentResult = args;\n      }\n\n      if (done.length === currentPos) {\n        callback.apply(null, currentResult);\n        currentPos = 0;\n      }\n    };\n  }\n};\n\nmodule.exports.withIndex = function forEachBailWithIndex(array, iterator, callback) {\n  if (array.length === 0) return callback();\n  var currentPos = array.length;\n  var currentResult;\n  var done = [];\n\n  for (var i = 0; i < array.length; i++) {\n    var itCb = createIteratorCallback(i);\n    iterator(array[i], i, itCb);\n    if (currentPos === 0) break;\n  }\n\n  function createIteratorCallback(i) {\n    return function () {\n      if (i >= currentPos) return; // ignore\n\n      done.push(i);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (args.length > 0) {\n        currentPos = i + 1;\n        done = done.filter(function (item) {\n          return item <= i;\n        });\n        currentResult = args;\n      }\n\n      if (done.length === currentPos) {\n        callback.apply(null, currentResult);\n        currentPos = 0;\n      }\n    };\n  }\n};"},"sourceMaps":null,"error":null,"hash":"c9e52f6dbc92c5fc2ab425814445401d","cacheData":{"env":{}}}