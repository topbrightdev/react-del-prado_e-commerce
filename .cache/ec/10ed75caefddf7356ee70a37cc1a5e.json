{"id":"../node_modules/clean-css/lib/reader/is-allowed-resource.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/package.json","includedInParent":true,"mtime":1594570879534},{"name":"path","loc":{"line":1,"column":19},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/is-allowed-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"url","loc":{"line":2,"column":18},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/is-allowed-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/url/url.js"},{"name":"../utils/is-remote-resource","loc":{"line":4,"column":31},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/is-allowed-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/is-remote-resource.js"},{"name":"../utils/has-protocol","loc":{"line":5,"column":26},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/reader/is-allowed-resource.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/clean-css/lib/utils/has-protocol.js"}],"generated":{"js":"var path = require('path');\n\nvar url = require('url');\n\nvar isRemoteResource = require('../utils/is-remote-resource');\n\nvar hasProtocol = require('../utils/has-protocol');\n\nvar HTTP_PROTOCOL = 'http:';\n\nfunction isAllowedResource(uri, isRemote, rules) {\n  var match;\n  var absoluteUri;\n  var allowed = isRemote ? false : true;\n  var rule;\n  var isNegated;\n  var normalizedRule;\n  var i;\n\n  if (rules.length === 0) {\n    return false;\n  }\n\n  if (isRemote && !hasProtocol(uri)) {\n    uri = HTTP_PROTOCOL + uri;\n  }\n\n  match = isRemote ? url.parse(uri).host : uri;\n  absoluteUri = isRemote ? uri : path.resolve(uri);\n\n  for (i = 0; i < rules.length; i++) {\n    rule = rules[i];\n    isNegated = rule[0] == '!';\n    normalizedRule = rule.substring(1);\n\n    if (isNegated && isRemote && isRemoteRule(normalizedRule)) {\n      allowed = allowed && !isAllowedResource(uri, true, [normalizedRule]);\n    } else if (isNegated && !isRemote && !isRemoteRule(normalizedRule)) {\n      allowed = allowed && !isAllowedResource(uri, false, [normalizedRule]);\n    } else if (isNegated) {\n      allowed = allowed && true;\n    } else if (rule == 'all') {\n      allowed = true;\n    } else if (isRemote && rule == 'local') {\n      allowed = allowed || false;\n    } else if (isRemote && rule == 'remote') {\n      allowed = true;\n    } else if (!isRemote && rule == 'remote') {\n      allowed = false;\n    } else if (!isRemote && rule == 'local') {\n      allowed = true;\n    } else if (rule === match) {\n      allowed = true;\n    } else if (rule === uri) {\n      allowed = true;\n    } else if (isRemote && absoluteUri.indexOf(rule) === 0) {\n      allowed = true;\n    } else if (!isRemote && absoluteUri.indexOf(path.resolve(rule)) === 0) {\n      allowed = true;\n    } else if (isRemote != isRemoteRule(normalizedRule)) {\n      allowed = allowed && true;\n    } else {\n      allowed = false;\n    }\n  }\n\n  return allowed;\n}\n\nfunction isRemoteRule(rule) {\n  return isRemoteResource(rule) || url.parse(HTTP_PROTOCOL + '//' + rule).host == rule;\n}\n\nmodule.exports = isAllowedResource;"},"sourceMaps":null,"error":null,"hash":"defd2584c949e581f2fffd6f68a5e57a","cacheData":{"env":{}}}