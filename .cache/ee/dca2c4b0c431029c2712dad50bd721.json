{"id":"../node_modules/react-dev-utils/node_modules/find-up/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/find-up/package.json","includedInParent":true,"mtime":1594306881102},{"name":"path","loc":{"line":2,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/find-up/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/path-browserify/index.js"},{"name":"locate-path","loc":{"line":3,"column":27},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/find-up/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/react-dev-utils/node_modules/locate-path/index.js"}],"generated":{"js":"'use strict';\n\nvar path = require('path');\n\nvar locatePath = require('locate-path');\n\nmodule.exports = function (filename) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var startDir = path.resolve(opts.cwd || '');\n  var {\n    root\n  } = path.parse(startDir);\n  var filenames = [].concat(filename);\n  return new Promise(function (resolve) {\n    (function find(dir) {\n      locatePath(filenames, {\n        cwd: dir\n      }).then(function (file) {\n        if (file) {\n          resolve(path.join(dir, file));\n        } else if (dir === root) {\n          resolve(null);\n        } else {\n          find(path.dirname(dir));\n        }\n      });\n    })(startDir);\n  });\n};\n\nmodule.exports.sync = function (filename) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var dir = path.resolve(opts.cwd || '');\n  var {\n    root\n  } = path.parse(dir);\n  var filenames = [].concat(filename); // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    var file = locatePath.sync(filenames, {\n      cwd: dir\n    });\n\n    if (file) {\n      return path.join(dir, file);\n    }\n\n    if (dir === root) {\n      return null;\n    }\n\n    dir = path.dirname(dir);\n  }\n};"},"sourceMaps":null,"error":null,"hash":"8e0e709cde9403096d54b8aa6007bacf","cacheData":{"env":{}}}