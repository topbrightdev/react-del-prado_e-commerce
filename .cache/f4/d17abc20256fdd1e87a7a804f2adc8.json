{"id":"../node_modules/webpack-log/src/index.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655291184},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/package.json","includedInParent":true,"mtime":1594306881666},{"name":"uuid/v4","loc":{"line":9,"column":21},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/uuid/v4.js"},{"name":"ansi-colors","loc":{"line":10,"column":23},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/ansi-colors/index.js"},{"name":"./loglevel","loc":{"line":11,"column":25},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/index.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack-log/src/loglevel/index.js"}],"generated":{"js":"'use strict';\n/* global window: true */\n\n/* eslint-disable\n  no-shadow,\n  no-param-reassign,\n  space-before-function-paren\n*/\n\nvar uuid = require('uuid/v4');\n\nvar colors = require('ansi-colors');\n\nvar loglevel = require('./loglevel');\n\nvar symbols = {\n  trace: colors.grey('₸'),\n  debug: colors.cyan('➤'),\n  info: colors.blue(colors.symbols.info),\n  warn: colors.yellow(colors.symbols.warning),\n  error: colors.red(colors.symbols.cross)\n};\nvar defaults = {\n  name: '<unknown>',\n  level: 'info',\n  unique: true\n};\nvar prefix = {\n  level(options) {\n    return symbols[options.level];\n  },\n\n  template: \"{{level}} \".concat(colors.gray('｢{{name}}｣'), \": \")\n};\n\nfunction log(options) {\n  var opts = Object.assign({}, defaults, options);\n  var {\n    id\n  } = options;\n  opts.prefix = Object.assign({}, prefix, options.prefix);\n  delete opts.id;\n  Object.defineProperty(opts, 'id', {\n    get() {\n      if (!id) {\n        return this.name + (opts.unique ? \"-\".concat(uuid()) : '');\n      }\n\n      return id;\n    }\n\n  });\n\n  if (opts.timestamp) {\n    opts.prefix.template = \"[{{time}}] \".concat(opts.prefix.template);\n  }\n\n  var log = loglevel.getLogger(opts);\n\n  if (!Object.prototype.hasOwnProperty.call(log, 'id')) {\n    Object.defineProperty(log, 'id', {\n      get() {\n        return opts.id;\n      }\n\n    });\n  }\n\n  return log;\n}\n\nmodule.exports = log; // NOTE: this is exported so that consumers of webpack-log can use the same\n// version of ansi-colors to decorate log messages without incurring additional\n// dependency overhead\n\nmodule.exports.colors = colors; // NOTE: This is an undocumented function solely for the purpose of tests.\n// Do not use this method in production code. Using in production code\n// may result in strange behavior.\n\nmodule.exports.delLogger = function delLogger(name) {\n  delete loglevel.loggers[name];\n};\n\nmodule.exports.factories = loglevel.factories;"},"sourceMaps":null,"error":null,"hash":"325859fae75e01147ea3972523ddaf4d","cacheData":{"env":{}}}