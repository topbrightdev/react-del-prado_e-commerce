{"id":"../node_modules/webpack/node_modules/@webassemblyjs/ast/esm/node-helpers.js","dependencies":[{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/package.json","includedInParent":true,"mtime":1594655165833},{"name":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/ast/package.json","includedInParent":true,"mtime":1594578778157},{"name":"@webassemblyjs/wast-parser","loc":{"line":1,"column":93},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/ast/esm/node-helpers.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/wast-parser/esm/index.js"},{"name":"./nodes","loc":{"line":2,"column":70},"parent":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/ast/esm/node-helpers.js","resolved":"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/webpack/node_modules/@webassemblyjs/ast/esm/nodes.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLiteralFromRaw = numberLiteralFromRaw;\nexports.instruction = instruction;\nexports.objectInstruction = objectInstruction;\nexports.withLoc = withLoc;\nexports.withRaw = withRaw;\nexports.funcParam = funcParam;\nexports.indexLiteral = indexLiteral;\nexports.memIndexLiteral = memIndexLiteral;\n\nvar _wastParser = require(\"@webassemblyjs/wast-parser\");\n\nvar _nodes = require(\"./nodes\");\n\nfunction numberLiteralFromRaw(rawValue) {\n  var instructionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"i32\";\n  var original = rawValue; // Remove numeric separators _\n\n  if (typeof rawValue === \"string\") {\n    rawValue = rawValue.replace(/_/g, \"\");\n  }\n\n  if (typeof rawValue === \"number\") {\n    return (0, _nodes.numberLiteral)(rawValue, String(original));\n  } else {\n    switch (instructionType) {\n      case \"i32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _wastParser.parse32I)(rawValue), String(original));\n        }\n\n      case \"u32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _wastParser.parseU32)(rawValue), String(original));\n        }\n\n      case \"i64\":\n        {\n          return (0, _nodes.longNumberLiteral)((0, _wastParser.parse64I)(rawValue), String(original));\n        }\n\n      case \"f32\":\n        {\n          return (0, _nodes.floatLiteral)((0, _wastParser.parse32F)(rawValue), (0, _wastParser.isNanLiteral)(rawValue), (0, _wastParser.isInfLiteral)(rawValue), String(original));\n        }\n      // f64\n\n      default:\n        {\n          return (0, _nodes.floatLiteral)((0, _wastParser.parse64F)(rawValue), (0, _wastParser.isNanLiteral)(rawValue), (0, _wastParser.isInfLiteral)(rawValue), String(original));\n        }\n    }\n  }\n}\n\nfunction instruction(id) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var namedArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _nodes.instr)(id, undefined, args, namedArgs);\n}\n\nfunction objectInstruction(id, object) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var namedArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, _nodes.instr)(id, object, args, namedArgs);\n}\n/**\n * Decorators\n */\n\n\nfunction withLoc(n, end, start) {\n  var loc = {\n    start: start,\n    end: end\n  };\n  n.loc = loc;\n  return n;\n}\n\nfunction withRaw(n, raw) {\n  n.raw = raw;\n  return n;\n}\n\nfunction funcParam(valtype, id) {\n  return {\n    id: id,\n    valtype: valtype\n  };\n}\n\nfunction indexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}\n\nfunction memIndexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}"},"sourceMaps":null,"error":null,"hash":"ed49921a81588e5743e1aff522b90b8b","cacheData":{"env":{}}}