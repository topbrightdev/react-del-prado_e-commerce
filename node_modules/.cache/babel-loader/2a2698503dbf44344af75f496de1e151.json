{"ast":null,"code":"import _toConsumableArray from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, INCREMENT_QTY, DECREMENT_QTY } from \"../constants/ActionTypes\";\nexport default function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cart: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var productId = action.product.id;\n\n      if (state.cart.findIndex(function (product) {\n        return product.id === productId;\n      }) !== -1) {\n        var cart = state.cart.reduce(function (cartAcc, product) {\n          console.log(cartAcc);\n          console.log(product);\n\n          if (product.id === productId) {\n            cartAcc.push(_objectSpread({}, product, {\n              qty: product.qty + 1,\n              sum: product.price * product.discount / 100 * (product.qty + 1)\n            })); // Increment qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return _objectSpread({}, state, {\n          cart: cart\n        });\n      }\n\n      return _objectSpread({}, state, {\n        cart: [].concat(_toConsumableArray(state.cart), [_objectSpread({}, action.product, {\n          qty: action.qty,\n          sum: action.product.price * action.product.discount / 100 * action.qty\n        })])\n      });\n\n    case DECREMENT_QTY:\n      if (state.cart.findIndex(function (product) {\n        return product.id === action.productId;\n      }) !== -1) {\n        var _cart = state.cart.reduce(function (cartAcc, product) {\n          if (product.id === action.productId && product.qty > 1) {\n            //console.log('price: '+product.price+'Qty: '+product.qty)\n            cartAcc.push(_objectSpread({}, product, {\n              qty: product.qty - 1,\n              sum: product.price * product.discount / 100 * (product.qty - 1)\n            })); // Decrement qty\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n\n        return _objectSpread({}, state, {\n          cart: _cart\n        });\n      }\n\n      return _objectSpread({}, state, {\n        cart: [].concat(_toConsumableArray(state.cart), [_objectSpread({}, action.product, {\n          qty: action.qty,\n          sum: action.product.price * action.qty\n        })])\n      });\n\n    case REMOVE_FROM_CART:\n      return {\n        cart: state.cart.filter(function (item) {\n          return item.id !== action.product_id.id;\n        })\n      };\n\n    default:\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","INCREMENT_QTY","DECREMENT_QTY","cartReducer","state","cart","action","type","productId","product","id","findIndex","reduce","cartAcc","console","log","push","qty","sum","price","discount","filter","item","product_id"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  INCREMENT_QTY,\r\n  DECREMENT_QTY,\r\n} from \"../constants/ActionTypes\";\r\n\r\nexport default function cartReducer(\r\n  state = {\r\n    cart: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const productId = action.product.id;\r\n      if (state.cart.findIndex((product) => product.id === productId) !== -1) {\r\n        const cart = state.cart.reduce((cartAcc, product) => {\r\n          console.log(cartAcc);\r\n          console.log(product);\r\n          if (product.id === productId) {\r\n            cartAcc.push({\r\n              ...product,\r\n              qty: product.qty + 1,\r\n              sum:\r\n                ((product.price * product.discount) / 100) * (product.qty + 1),\r\n            }); // Increment qty\r\n          } else {\r\n            cartAcc.push(product);\r\n          }\r\n\r\n          return cartAcc;\r\n        }, []);\r\n\r\n        return {...state, cart};\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: [\r\n          ...state.cart,\r\n          {\r\n            ...action.product,\r\n            qty: action.qty,\r\n            sum:\r\n              ((action.product.price * action.product.discount) / 100) *\r\n              action.qty,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case DECREMENT_QTY:\r\n      if (\r\n        state.cart.findIndex((product) => product.id === action.productId) !==\r\n        -1\r\n      ) {\r\n        const cart = state.cart.reduce((cartAcc, product) => {\r\n          if (product.id === action.productId && product.qty > 1) {\r\n            //console.log('price: '+product.price+'Qty: '+product.qty)\r\n            cartAcc.push({\r\n              ...product,\r\n              qty: product.qty - 1,\r\n              sum:\r\n                ((product.price * product.discount) / 100) * (product.qty - 1),\r\n            }); // Decrement qty\r\n          } else {\r\n            cartAcc.push(product);\r\n          }\r\n\r\n          return cartAcc;\r\n        }, []);\r\n\r\n        return {...state, cart};\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        cart: [\r\n          ...state.cart,\r\n          {\r\n            ...action.product,\r\n            qty: action.qty,\r\n            sum: action.product.price * action.qty,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        cart: state.cart.filter((item) => item.id !== action.product_id.id),\r\n      };\r\n\r\n    default:\r\n  }\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}