{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; // middlewares\n//import thunkMiddleware from \"redux-thunk\";\n\nimport thunk from \"redux-thunk\"; // Import custom components\n\nimport rootReducer from \"../reducers\";\n\nfunction loadFromLocalStorage() {\n  try {\n    var serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    console.log(JSON.parse(serializedState));\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nvar persistedState = loadFromLocalStorage();\n/**\r\n * Create a Redux store that holds the app state.\r\n */\n\nvar store = createStore(rootReducer, persistedState, compose( //applyMiddleware(thunkMiddleware),\napplyMiddleware(thunk), //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n}));\nexport default store;","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","loadFromLocalStorage","serializedState","localStorage","getItem","undefined","console","log","JSON","parse","e","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CAEA;AACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,SAASC,oBAAT,GAAgC;AAC9B,MAAI;AACF,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B,OAAOG,SAAP;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWP,eAAX,CAAZ;AACA,WAAOM,IAAI,CAACC,KAAL,CAAWP,eAAX,CAAP;AACD,GALD,CAKE,OAAOQ,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,WAAOL,SAAP;AACD;AACF;;AAED,IAAMM,cAAc,GAAGV,oBAAoB,EAA3C;AAEA;;;;AAGA,IAAMW,KAAK,GAAGhB,WAAW,CACvBI,WADuB,EAEvBW,cAFuB,EAGvBb,OAAO,EACL;AACAD,eAAe,CAACE,KAAD,CAFV,EAIL;AACAc,MAAM,CAACC,4BAAP,GACID,MAAM,CAACC,4BAAP,EADJ,GAEI,UAASC,CAAT,EAAY;AACV,SAAOA,CAAP;AACD,CATA,CAHgB,CAAzB;AAgBA,eAAeH,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\n// middlewares\r\n//import thunkMiddleware from \"redux-thunk\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// Import custom components\r\nimport rootReducer from \"../reducers\";\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    console.log(JSON.parse(serializedState));\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n */\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    //applyMiddleware(thunkMiddleware),\r\n    applyMiddleware(thunk),\r\n\r\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : function(f) {\r\n          return f;\r\n        }\r\n  )\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}