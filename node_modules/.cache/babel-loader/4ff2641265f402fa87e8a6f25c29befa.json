{"ast":null,"code":"import _classCallCheck from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/components/collection/common/filter.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport InputRange from \"react-input-range\";\nimport \"react-input-range/lib/css/index.css\";\nimport { SlideToggle } from \"react-slide-toggle\";\nimport { getBrands, getColors, getMinMaxPrice } from \"../../../services\";\nimport { filterBrand, filterColor, filterPrice } from \"../../../actions/indexO\";\n\nvar Filter = /*#__PURE__*/function (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.closeFilter = function () {\n      document.querySelector(\".collection-filter\").style = \"left: -365px\";\n    };\n\n    _this.state = {\n      openFilter: false\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"clickBrandHendle\",\n    value: function clickBrandHendle(event, brands) {\n      var index = brands.indexOf(event.target.value);\n      if (event.target.checked) brands.push(event.target.value); // push in array checked value\n      else brands.splice(index, 1); // removed in array unchecked value\n\n      this.props.filterBrand(brands);\n    }\n  }, {\n    key: \"colorHandle\",\n    value: function colorHandle(event, color) {\n      var elems = document.querySelectorAll(\".color-selector ul li\");\n      [].forEach.call(elems, function (el) {\n        el.classList.remove(\"active\");\n      });\n      event.target.classList.add(\"active\");\n      this.props.filterColor(color);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredBrands = this.props.filters.brand; //console.log(this.props.brands);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"collection-filter-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"collection-mobile-back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"filter-back\",\n        onClick: function onClick(e) {\n          return _this2.closeFilter(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-angle-left\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }), \" back\")), /*#__PURE__*/React.createElement(SlideToggle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, function (_ref) {\n        var onToggle = _ref.onToggle,\n            setCollapsibleElement = _ref.setCollapsibleElement;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        }, \"brand\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block-content\",\n          ref: setCollapsibleElement,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-brand-filter\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, _this2.props.brands.map(function (brand, index) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"custom-control custom-checkbox collection-filter-checkbox\",\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            onClick: function onClick(e) {\n              return _this2.clickBrandHendle(e, filteredBrands);\n            },\n            value: brand,\n            defaultChecked: filteredBrands.includes(brand) ? true : false,\n            className: \"custom-control-input\",\n            id: brand,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            className: \"custom-control-label\",\n            htmlFor: brand,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }\n          }, brand));\n        }))));\n      }), /*#__PURE__*/React.createElement(SlideToggle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, function (_ref2) {\n        var onToggle = _ref2.onToggle,\n            setCollapsibleElement = _ref2.setCollapsibleElement;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }, \"colors\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block-content\",\n          ref: setCollapsibleElement,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"color-selector\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }\n        }, _this2.props.colors.map(function (color, index) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: color,\n            title: color,\n            onClick: function onClick(e) {\n              return _this2.colorHandle(e, color);\n            },\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }\n          });\n        })))));\n      }), /*#__PURE__*/React.createElement(SlideToggle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, function (_ref3) {\n        var onToggle = _ref3.onToggle,\n            setCollapsibleElement = _ref3.setCollapsibleElement;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block open\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"collapse-block-title\",\n          onClick: onToggle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }\n        }, \"price\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-collapse-block-content block-price-content\",\n          ref: setCollapsibleElement,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"collection-brand-filter\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-control custom-checkbox collection-filter-checkbox\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(InputRange, {\n          maxValue: _this2.props.prices.max,\n          minValue: _this2.props.prices.min,\n          value: _this2.props.filters.value,\n          onChange: function onChange(value) {\n            return _this2.props.filterPrice({\n              value: value\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        })))));\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    brands: getBrands(state.data.products),\n    colors: getColors(state.data.products),\n    prices: getMinMaxPrice(state.data.products),\n    filters: state.filters\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterBrand: filterBrand,\n  filterColor: filterColor,\n  filterPrice: filterPrice\n})(Filter);","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/components/collection/common/filter.jsx"],"names":["React","Component","connect","InputRange","SlideToggle","getBrands","getColors","getMinMaxPrice","filterBrand","filterColor","filterPrice","Filter","props","closeFilter","document","querySelector","style","state","openFilter","event","brands","index","indexOf","target","value","checked","push","splice","color","elems","querySelectorAll","forEach","call","el","classList","remove","add","filteredBrands","filters","brand","e","onToggle","setCollapsibleElement","map","clickBrandHendle","includes","colors","colorHandle","prices","max","min","mapStateToProps","data","products"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRange from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport {SlideToggle} from \"react-slide-toggle\";\r\n\r\nimport {getBrands, getColors, getMinMaxPrice} from \"../../../services\";\r\nimport {filterBrand, filterColor, filterPrice} from \"../../../actions/indexO\";\r\n\r\nclass Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openFilter: false,\r\n    };\r\n  }\r\n\r\n  closeFilter = () => {\r\n    document.querySelector(\".collection-filter\").style = \"left: -365px\";\r\n  };\r\n\r\n  clickBrandHendle(event, brands) {\r\n    var index = brands.indexOf(event.target.value);\r\n    if (event.target.checked) brands.push(event.target.value);\r\n    // push in array checked value\r\n    else brands.splice(index, 1); // removed in array unchecked value\r\n\r\n    this.props.filterBrand(brands);\r\n  }\r\n\r\n  colorHandle(event, color) {\r\n    var elems = document.querySelectorAll(\".color-selector ul li\");\r\n    [].forEach.call(elems, function(el) {\r\n      el.classList.remove(\"active\");\r\n    });\r\n    event.target.classList.add(\"active\");\r\n    this.props.filterColor(color);\r\n  }\r\n\r\n  render() {\r\n    const filteredBrands = this.props.filters.brand;\r\n    //console.log(this.props.brands);\r\n    return (\r\n      <div className=\"collection-filter-block\">\r\n        {/*brand filter start*/}\r\n        <div className=\"collection-mobile-back\">\r\n          <span className=\"filter-back\" onClick={(e) => this.closeFilter(e)}>\r\n            <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i> back\r\n          </span>\r\n        </div>\r\n        <SlideToggle>\r\n          {({onToggle, setCollapsibleElement}) => (\r\n            <div className=\"collection-collapse-block\">\r\n              <h3 className=\"collapse-block-title\" onClick={onToggle}>\r\n                brand\r\n              </h3>\r\n              <div\r\n                className=\"collection-collapse-block-content\"\r\n                ref={setCollapsibleElement}\r\n              >\r\n                <div className=\"collection-brand-filter\">\r\n                  {this.props.brands.map((brand, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"custom-control custom-checkbox collection-filter-checkbox\"\r\n                        key={index}\r\n                      >\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          onClick={(e) =>\r\n                            this.clickBrandHendle(e, filteredBrands)\r\n                          }\r\n                          value={brand}\r\n                          defaultChecked={\r\n                            filteredBrands.includes(brand) ? true : false\r\n                          }\r\n                          className=\"custom-control-input\"\r\n                          id={brand}\r\n                        />\r\n                        <label className=\"custom-control-label\" htmlFor={brand}>\r\n                          {brand}\r\n                        </label>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </SlideToggle>\r\n\r\n        {/*color filter start here*/}\r\n        <SlideToggle>\r\n          {({onToggle, setCollapsibleElement}) => (\r\n            <div className=\"collection-collapse-block\">\r\n              <h3 className=\"collapse-block-title\" onClick={onToggle}>\r\n                colors\r\n              </h3>\r\n              <div\r\n                className=\"collection-collapse-block-content\"\r\n                ref={setCollapsibleElement}\r\n              >\r\n                <div className=\"color-selector\">\r\n                  <ul>\r\n                    {this.props.colors.map((color, index) => {\r\n                      return (\r\n                        <li\r\n                          className={color}\r\n                          title={color}\r\n                          onClick={(e) => this.colorHandle(e, color)}\r\n                          key={index}\r\n                        ></li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </SlideToggle>\r\n        {/*price filter start here */}\r\n        <SlideToggle>\r\n          {({onToggle, setCollapsibleElement}) => (\r\n            <div className=\"collection-collapse-block open\">\r\n              <h3 className=\"collapse-block-title\" onClick={onToggle}>\r\n                price\r\n              </h3>\r\n              <div\r\n                className=\"collection-collapse-block-content block-price-content\"\r\n                ref={setCollapsibleElement}\r\n              >\r\n                <div className=\"collection-brand-filter\">\r\n                  <div className=\"custom-control custom-checkbox collection-filter-checkbox\">\r\n                    <InputRange\r\n                      maxValue={this.props.prices.max}\r\n                      minValue={this.props.prices.min}\r\n                      value={this.props.filters.value}\r\n                      onChange={(value) => this.props.filterPrice({value})}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </SlideToggle>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  brands: getBrands(state.data.products),\r\n  colors: getColors(state.data.products),\r\n  prices: getMinMaxPrice(state.data.products),\r\n  filters: state.filters,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  filterBrand,\r\n  filterColor,\r\n  filterPrice,\r\n})(Filter);\r\n"]},"metadata":{},"sourceType":"module"}