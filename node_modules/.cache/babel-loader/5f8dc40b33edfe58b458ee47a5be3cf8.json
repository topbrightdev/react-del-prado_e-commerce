{"ast":null,"code":"import _regeneratorRuntime from \"/home/jarri/Desktop/projects/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jarri/Desktop/projects/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/jarri/Desktop/projects/store/frontEnd/src/components/checkout/CheckoutForm.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withTranslate } from \"react-redux-multilingual\";\nimport { CardNumberElement, CardExpiryElement, CardCVCElement, injectStripe } from \"react-stripe-elements\";\nimport axios from \"axios\"; //4242424242424242\n//const urlCharge =\n//  process.env.NODE_ENV.trim() === \"production\"\n//    ? `https://waldenberginc.com:7000/stripe`\n//    : \"http://localhost:7000/stripe\";\n//const urlCharge ='http://waldenberginc.com/api/stripe/charge'\n\nvar urlCharge = \"https://waldenberginc.com/stripe\";\n\nvar newTo = function newTo(data) {\n  return {\n    pathname: \"\".concat(process.env.PUBLIC_URL, \"/order-success\"),\n    data: data\n  };\n};\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  var selectedProduct = _ref.selectedProduct,\n      stripe = _ref.stripe,\n      history = _ref.history,\n      total = _ref.total,\n      email = _ref.email,\n      doOrder = _ref.doOrder,\n      clientData = _ref.clientData,\n      translate = _ref.translate;\n  if (selectedProduct === null) history.push(\"/\");\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var amount, _ref3, token, order, receiptUrl, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              amount = total * 100;\n              amount = amount.toString();\n              _context.next = 5;\n              return stripe.createToken();\n\n            case 5:\n              _ref3 = _context.sent;\n              token = _ref3.token;\n              _context.next = 9;\n              return axios.post(urlCharge, {\n                amount: amount,\n                source: token.id,\n                receipt_email: email\n              }).catch(function (e) {\n                console.log(e);\n              });\n\n            case 9:\n              order = _context.sent;\n              receiptUrl = \"\";\n              receiptUrl = order.data; //history.push(`${process.env.PUBLIC_URL}/order-success`);\n              //this.props.placeOrder(this.createOrderData());\n\n              doOrder(true);\n              data = [receiptUrl, clientData];\n              history.push(newTo(data));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"checkout-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-form farm-19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"checkout-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, translate(\"introduce_credit\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" \", translate(\"total\"), total, \" $\", \" \"), React.createElement(\"div\", {\n    className: \"checkout-number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"checkout-label-number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, translate(\"card_details\"), React.createElement(CardNumberElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"checkout-card-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"checkout-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, translate(\"expiration_date\"), React.createElement(CardExpiryElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"checkout-label cvc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, translate(\"cvc\"), React.createElement(CardCVCElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"checkout-div-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-solid btn\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, translate(\"pay\"))));\n}; //export default injectStripe(CheckoutForm);\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps)(injectStripe(withTranslate(CheckoutForm)));","map":{"version":3,"sources":["/home/jarri/Desktop/projects/store/frontEnd/src/components/checkout/CheckoutForm.jsx"],"names":["React","connect","withTranslate","CardNumberElement","CardExpiryElement","CardCVCElement","injectStripe","axios","urlCharge","newTo","data","pathname","process","env","PUBLIC_URL","CheckoutForm","selectedProduct","stripe","history","total","email","doOrder","clientData","translate","push","handleSubmit","event","preventDefault","amount","toString","createToken","token","post","source","id","receipt_email","catch","e","console","log","order","receiptUrl","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,uBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMC,SAAS,qCAAf;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtB,SAAO;AACLC,IAAAA,QAAQ,YAAKC,OAAO,CAACC,GAAR,CAAYC,UAAjB,mBADH;AAELJ,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALD;;AAOA,IAAMK,YAAY,GAAG,SAAfA,YAAe,OASf;AAAA,MARJC,eAQI,QARJA,eAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,SACI,QADJA,SACI;AACJ,MAAIP,eAAe,KAAK,IAAxB,EAA8BE,OAAO,CAACM,IAAR,CAAa,GAAb;;AAE9B,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACC,cAAN;AAEIC,cAAAA,MAHe,GAGNT,KAAK,GAAG,GAHF;AAInBS,cAAAA,MAAM,GAAGA,MAAM,CAACC,QAAP,EAAT;AAJmB;AAAA,qBAKKZ,MAAM,CAACa,WAAP,EALL;;AAAA;AAAA;AAKXC,cAAAA,KALW,SAKXA,KALW;AAAA;AAAA,qBAOCxB,KAAK,CACtByB,IADiB,CACZxB,SADY,EACD;AACfoB,gBAAAA,MAAM,EAAEA,MADO;AAEfK,gBAAAA,MAAM,EAAEF,KAAK,CAACG,EAFC;AAGfC,gBAAAA,aAAa,EAAEf;AAHA,eADC,EAMjBgB,KANiB,CAMX,UAACC,CAAD,EAAO;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,eARiB,CAPD;;AAAA;AAObG,cAAAA,KAPa;AAgBfC,cAAAA,UAhBe,GAgBF,EAhBE;AAiBnBA,cAAAA,UAAU,GAAGD,KAAK,CAAC9B,IAAnB,CAjBmB,CAkBnB;AACA;;AACAW,cAAAA,OAAO,CAAC,IAAD,CAAP;AACMX,cAAAA,IArBa,GAqBN,CAAC+B,UAAD,EAAanB,UAAb,CArBM;AAsBnBJ,cAAAA,OAAO,CAACM,IAAR,CAAaf,KAAK,CAACC,IAAD,CAAlB;;AAtBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZe,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAyBA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,SAAS,CAAC,kBAAD,CAAxC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGA,SAAS,CAAC,OAAD,CAFZ,EAGGJ,KAHH,QAGY,GAHZ,CAFF,EAQE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAAC,cAAD,CADZ,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CARF,EAcE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAAC,iBAAD,CADZ,EAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAAC,KAAD,CADZ,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CAdF,CADF,EA2BE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAgD,IAAA,OAAO,EAAEE,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAAC,KAAD,CADZ,CADF,CA3BF,CADF;AAmCD,CAxED,C,CA0EA;;;AACA,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCA,IAAAA,KAAK,EAALA;AADkC,GAAZ;AAAA,CAAxB;;AAIA,eAAe1C,OAAO,CAACyC,eAAD,CAAP,CACbpC,YAAY,CAACJ,aAAa,CAACa,YAAD,CAAd,CADC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withTranslate } from \"react-redux-multilingual\";\n\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCVCElement,\n  injectStripe,\n} from \"react-stripe-elements\";\nimport axios from \"axios\";\n\n//4242424242424242\n\n//const urlCharge =\n//  process.env.NODE_ENV.trim() === \"production\"\n//    ? `https://waldenberginc.com:7000/stripe`\n//    : \"http://localhost:7000/stripe\";\n//const urlCharge ='http://waldenberginc.com/api/stripe/charge'\nconst urlCharge = `https://waldenberginc.com/stripe`;\n\nconst newTo = (data) => {\n  return {\n    pathname: `${process.env.PUBLIC_URL}/order-success`,\n    data: data,\n  };\n};\n\nconst CheckoutForm = ({\n  selectedProduct,\n  stripe,\n  history,\n  total,\n  email,\n  doOrder,\n  clientData,\n  translate,\n}) => {\n  if (selectedProduct === null) history.push(\"/\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    var amount = total * 100;\n    amount = amount.toString();\n    const { token } = await stripe.createToken();\n\n    const order = await axios\n      .post(urlCharge, {\n        amount: amount,\n        source: token.id,\n        receipt_email: email,\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    var receiptUrl = \"\";\n    receiptUrl = order.data;\n    //history.push(`${process.env.PUBLIC_URL}/order-success`);\n    //this.props.placeOrder(this.createOrderData());\n    doOrder(true);\n    const data = [receiptUrl, clientData];\n    history.push(newTo(data));\n  };\n\n  return (\n    <div className=\"checkout-details\">\n      <div className=\"checkout-form farm-19\">\n        <h6 className=\"checkout-text\">{translate(\"introduce_credit\")}</h6>\n        <p>\n          {\" \"}\n          {translate(\"total\")}\n          {total} ${\" \"}\n        </p>\n\n        <div className=\"checkout-number\">\n          <label className=\"checkout-label-number\">\n            {translate(\"card_details\")}\n            <CardNumberElement />\n          </label>\n        </div>\n        <div className=\"checkout-card-details\">\n          <label className=\"checkout-label\">\n            {translate(\"expiration_date\")}\n            <CardExpiryElement />\n          </label>\n\n          <label className=\"checkout-label cvc\">\n            {translate(\"cvc\")}\n            <CardCVCElement />\n          </label>\n        </div>\n      </div>\n      <div className=\"checkout-div-button\">\n        <button type=\"button\" className=\"btn-solid btn\" onClick={handleSubmit}>\n          {translate(\"pay\")}\n        </button>\n      </div>\n    </div>\n  );\n};\n\n//export default injectStripe(CheckoutForm);\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default connect(mapStateToProps)(\n  injectStripe(withTranslate(CheckoutForm))\n);\n"]},"metadata":{},"sourceType":"module"}