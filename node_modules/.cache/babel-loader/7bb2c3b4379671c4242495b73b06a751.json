{"ast":null,"code":"import _regeneratorRuntime from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport React, { useState } from \"react\";\nimport { createContext, useContext } from \"react\";\nimport axios from \"axios\";\nimport orderReducer from \"../reducers/order\";\n\nvar wooConfig = require(\"./wooConfig\");\n\nvar WooCommerceAPI = require(\"woocommerce-api\");\n\nvar WooCommerce = new WooCommerceAPI({\n  url: wooConfig.siteUrl,\n  consumerKey: wooConfig.consumerKey,\n  consumerSecret: wooConfig.consumerSecret,\n  wpAPI: true,\n  version: \"wc/v3\"\n});\nvar targetUrl = \"https://grassrootemarket.com/wp-json/\";\nvar urlRegister = \"wp/v2/users/register\";\nvar urlJWT = \"jwt-auth/v1/token\";\nvar userURI = targetUrl + \"wp/v2/users/me\";\n/**\n * Signup Flow\n *  1-Create user : Creates an authenticated Wordpress Account with password\n *  2-Create user in woocommerce -> createCustomer(newcustomer)\n *  3-receiveLogin(data{user,email}) -> fillCustomer(mail)\n *  4-getCustomerId(newCustomer) -> updateCustomer(userId, newCustomer)\n */\n\nvar login = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    var username, password, token, displayName, niceName, email;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = user.username; //this is the nice_name\n\n            password = user.password;\n            email = null;\n            _context.next = 5;\n            return axios.post(\"https://grassrootemarket.com/wp-json/jwt-auth/v1/token\", {\n              username: username,\n              password: password\n            }).then(function (result) {\n              if (result.status === 200) {\n                token = result.data.token;\n                displayName = result.data.user_display_name;\n                niceName = result.data.user_nicename;\n                email = result.data.user_email;\n                var filledFields = null;\n                return fillCustomer(email).then(function (res) {\n                  if (res) {\n                    filledFields = _objectSpread({}, res, {\n                      username: displayName,\n                      email: email,\n                      token: token\n                    });\n                  }\n\n                  return filledFields;\n                });\n              } else {\n                alert(\"error\");\n              }\n            }).catch(function (e) {\n              alert(e.response.data.message);\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //var data = [user, shipping];\n\n\nvar signup = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userData) {\n    var username, email, password, address_1, city, country, first_name, last_name, phone, postcode, state, user, newCustomer, body, created;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            username = userData.username, email = userData.email, password = userData.password, address_1 = userData.address_1, city = userData.city, country = userData.country, first_name = userData.first_name, last_name = userData.last_name, phone = userData.phone, postcode = userData.postcode, state = userData.state;\n            user = {\n              username: username,\n              email: email,\n              password: password\n            };\n            newCustomer = {\n              email: email,\n              first_name: first_name,\n              last_name: last_name,\n              username: username,\n              billing: {\n                first_name: first_name,\n                last_name: last_name,\n                company: \"company\",\n                address_1: address_1,\n                address_2: \"\",\n                city: city,\n                state: state,\n                postcode: postcode,\n                country: \"Spain\",\n                email: email,\n                phone: phone\n              },\n              shipping: {\n                first_name: first_name,\n                last_name: last_name,\n                company: \"\",\n                address: address_1,\n                address2: \"\",\n                city: city,\n                state: state,\n                cp: postcode,\n                country: country\n              }\n            };\n            body = JSON.stringify({\n              username: username,\n              email: email,\n              password: password\n            });\n            created = false; // After filling the vlaue fields,the function will proceed to create\n            // first the wordpress user.\n\n            _context2.next = 7;\n            return fetch(targetUrl + urlRegister, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: body\n            }).catch(function (error) {\n              console.log(error.response.body);\n            }).then(function (res) {\n              return res.json();\n            }).then(function (res) {\n              if (res.message) {\n                alert(res.message);\n\n                if (res.code === 200) {\n                  return createCustomer(newCustomer, email).then(function (res) {\n                    created = true;\n                    return userData;\n                  });\n                } else return null;\n              }\n            });\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function signup(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createCustomer = function createCustomer(newCustomer, email) {\n  if (!email) {\n    var data = {\n      user_display_name: newCustomer.username,\n      user_email: newCustomer.email\n    };\n    receiveLogin(data).then(function (res) {\n      return res;\n    });\n  }\n\n  return getCustomerId(newCustomer);\n};\n\nvar fillCustomer = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return WooCommerce.getAsync(\"customers?email=\".concat(email)).then(function (response) {\n              if (response) {\n                if (response.body) {\n                  var res = JSON.parse(response.body);\n                  var user = res[0];\n                  var thisUser = {\n                    userId: user.id,\n                    company: user.billing.company,\n                    first_name: user.billing.first_name,\n                    last_name: user.billing.last_name,\n                    address_1: user.billing.address_1,\n                    address_2: user.billing.address_2,\n                    city: user.billing.city,\n                    state: user.billing.state,\n                    postcode: user.billing.postcode,\n                    country: user.billing.country,\n                    phone: user.billing.phone\n                  };\n                  return thisUser;\n                }\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function fillCustomer(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction updateAccount(_x4, _x5, _x6) {\n  return _updateAccount.apply(this, arguments);\n}\n\nfunction _updateAccount() {\n  _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id, updatedUser, updatedShipping) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!updatedUser) {\n              _context7.next = 3;\n              break;\n            }\n\n            _context7.next = 3;\n            return axios.post(\"https://grassrootemarket.com/wp-json/wp/v2/users/\".concat(id), {\n              username: updatedUser.userName,\n              mail: updatedUser.email\n            }).then(function (result) {\n              if (result.status === 200) {} else {\n                alert(\"error\");\n              }\n            }).catch(function (e) {\n              alert(e.response.body.message);\n            });\n\n          case 3:\n            if (!updatedShipping) {\n              _context7.next = 6;\n              break;\n            }\n\n            _context7.next = 6;\n            return WooCommerce.putAsync(\"customers/\".concat(id), updatedShipping).then(function (response) {\n              var customer = JSON.parse(response.body);\n            }).catch(function (error) {});\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _updateAccount.apply(this, arguments);\n}\n\nvar updateCustomer = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id, newCustomer) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return WooCommerce.putAsync(\"customers/\".concat(id), newCustomer).then(function (response) {\n              var customer = JSON.parse(response.body);\n              return customer;\n            }).catch(function (error) {});\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function updateCustomer(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getCustomerId = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(newCustomer) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return WooCommerce.getAsync(\"customers?email=\".concat(newCustomer.email)).then(function (response) {\n              if (response) {\n                if (response.body) {\n                  var user = JSON.parse(response.body);\n                  var userId = user[0].id;\n                  return updateCustomer(userId, newCustomer);\n                }\n              }\n            }).catch(function (error) {\n              return null;\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getCustomerId(_x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar order = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(orderData) {\n    var orderReady;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log(orderData);\n            orderReady = fillOrder(orderData);\n            console.log(orderReady);\n\n            if (!orderReady) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 6;\n            return WooCommerce.postAsync(\"orders\", orderReady).then(function (res) {\n              if (res.body) {\n                var r = JSON.parse(res.body);\n                console.log(r);\n              }\n\n              console.log(res);\n            }).then(function (res) {\n              console.log(typeof res);\n              console.log(res);\n              console.log(res.data.message);\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 6:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function order(_x10) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar fillOrder = function fillOrder(orderData) {\n  var ready = false;\n  var orderReady = {};\n  var email = orderData.email,\n      address_1 = orderData.address_1,\n      city = orderData.city,\n      country = orderData.country,\n      first_name = orderData.first_name,\n      last_name = orderData.last_name,\n      phone = orderData.phone,\n      postcode = orderData.postcode,\n      state = orderData.state,\n      cart = orderData.cart,\n      total = orderData.total;\n  console.log(orderData); // const myCart = JSON.stringify(cart);\n\n  if (last_name && first_name && email && address_1 && city && state && postcode && country && phone && cart && total) {\n    orderReady = {\n      payment_method: \"bacs\",\n      payment_method_title: \"Credit Card Payment\",\n      set_paid: \"true\",\n      billing: {\n        first_name: \"\".concat(first_name),\n        last_name: \"\".concat(last_name),\n        address_1: \"\".concat(address_1),\n        address_2: \"\",\n        city: \"\".concat(city),\n        state: \" \".concat(state),\n        postcode: \"\".concat(postcode),\n        country: \"\".concat(country),\n        email: \"\".concat(email),\n        phone: \"\".concat(phone)\n      },\n      shipping: {\n        first_name: \"\".concat(first_name),\n        last_name: \"\".concat(last_name),\n        address_1: \"\".concat(address_1),\n        address_2: \"\",\n        city: \"\".concat(city),\n        state: \"\".concat(state),\n        postcode: \"\".concat(postcode),\n        country: \"\".concat(country),\n        email: \"\".concat(email)\n      },\n      line_items: cart,\n      shipping_lines: [{\n        method_id: \"flat_rate\",\n        method_title: \"Flat Rate\",\n        total: \"\".concat(total)\n      }]\n    };\n  }\n\n  return orderReady;\n};\n\nvar receiveLogin = function receiveLogin(data) {\n  console.log(\"ZOMBIE\");\n\n  _this.setState(function () {\n    return _objectSpread({}, {\n      user: data.user_display_name,\n      email: data.user_email\n    });\n  });\n\n  _this.fillCustomer(data.user_email); // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n\n};\n\nvar logout = function logout(data) {\n  _this.setState(function () {\n    return _objectSpread({}, {\n      user: null,\n      order: null,\n      name: null,\n      lastName: null,\n      email: null,\n      address: null,\n      address2: null,\n      city: null,\n      state: null,\n      cp: null,\n      country: null,\n      phone: null,\n      cart: null,\n      cartSubTotal: null,\n      cartTax: null,\n      total: null\n    });\n  }); // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n\n};\n\nvar receiveSignup = function receiveSignup(data) {\n  var user = data.user;\n  var ship = data.shipping;\n\n  _this.setState(function () {\n    return _objectSpread({}, {\n      name: user.user_display_name,\n      email: user.user_email,\n      phone: ship.phone,\n      address: ship.street,\n      address2: ship.address2,\n      city: ship.city,\n      state: ship.province,\n      cp: ship.postal,\n      country: ship.country\n    });\n  });\n};\n\nexport default {\n  login: login,\n  signup: signup,\n  order: order\n};","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/api/user.js"],"names":["React","useState","createContext","useContext","axios","orderReducer","wooConfig","require","WooCommerceAPI","WooCommerce","url","siteUrl","consumerKey","consumerSecret","wpAPI","version","targetUrl","urlRegister","urlJWT","userURI","login","user","username","password","email","post","then","result","status","token","data","displayName","user_display_name","niceName","user_nicename","user_email","filledFields","fillCustomer","res","alert","catch","e","response","message","signup","userData","address_1","city","country","first_name","last_name","phone","postcode","state","newCustomer","billing","company","address_2","shipping","address","address2","cp","body","JSON","stringify","created","fetch","method","headers","error","console","log","json","code","createCustomer","receiveLogin","getCustomerId","getAsync","parse","thisUser","userId","id","updateAccount","updatedUser","updatedShipping","userName","mail","putAsync","customer","updateCustomer","order","orderData","orderReady","fillOrder","postAsync","r","ready","cart","total","payment_method","payment_method_title","set_paid","line_items","shipping_lines","method_id","method_title","setState","logout","name","lastName","cartSubTotal","cartTax","receiveSignup","ship","street","province","postal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AAEA,IAAME,WAAW,GAAG,IAAID,cAAJ,CAAmB;AACrCE,EAAAA,GAAG,EAAEJ,SAAS,CAACK,OADsB;AAErCC,EAAAA,WAAW,EAAEN,SAAS,CAACM,WAFc;AAGrCC,EAAAA,cAAc,EAAEP,SAAS,CAACO,cAHW;AAIrCC,EAAAA,KAAK,EAAE,IAJ8B;AAKrCC,EAAAA,OAAO,EAAE;AAL4B,CAAnB,CAApB;AAQA,IAAMC,SAAS,GAAG,uCAAlB;AACA,IAAMC,WAAW,GAAG,sBAApB;AACA,IAAMC,MAAM,GAAG,mBAAf;AACA,IAAMC,OAAO,GAAGH,SAAS,GAAG,gBAA5B;AAEA;;;;;;;;AAQA,IAAMI,KAAK;AAAA,sEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,QADQ,GACGD,IAAI,CAACC,QADR,EACkB;;AAC1BC,YAAAA,QAFQ,GAEGF,IAAI,CAACE,QAFR;AAMVC,YAAAA,KANU,GAMF,IANE;AAAA;AAAA,mBAOCpB,KAAK,CACfqB,IADU,CACL,wDADK,EACqD;AAC9DH,cAAAA,QAAQ,EAAEA,QADoD;AAE9DC,cAAAA,QAAQ,EAAEA;AAFoD,aADrD,EAKVG,IALU,CAKL,UAACC,MAAD,EAAY;AAChB,kBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzBC,gBAAAA,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYD,KAApB;AACAE,gBAAAA,WAAW,GAAGJ,MAAM,CAACG,IAAP,CAAYE,iBAA1B;AACAC,gBAAAA,QAAQ,GAAGN,MAAM,CAACG,IAAP,CAAYI,aAAvB;AACAV,gBAAAA,KAAK,GAAGG,MAAM,CAACG,IAAP,CAAYK,UAApB;AACA,oBAAIC,YAAY,GAAG,IAAnB;AACA,uBAAOC,YAAY,CAACb,KAAD,CAAZ,CAAoBE,IAApB,CAAyB,UAACY,GAAD,EAAS;AACvC,sBAAIA,GAAJ,EAAS;AACPF,oBAAAA,YAAY,qBACPE,GADO;AAEVhB,sBAAAA,QAAQ,EAAES,WAFA;AAGVP,sBAAAA,KAAK,EAAEA,KAHG;AAIVK,sBAAAA,KAAK,EAAEA;AAJG,sBAAZ;AAMD;;AACD,yBAAOO,YAAP;AACD,iBAVM,CAAP;AAWD,eAjBD,MAiBO;AACLG,gBAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,aA1BU,EA2BVC,KA3BU,CA2BJ,UAACC,CAAD,EAAO;AACZF,cAAAA,KAAK,CAACE,CAAC,CAACC,QAAF,CAAWZ,IAAX,CAAgBa,OAAjB,CAAL;AACD,aA7BU,CAPD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALvB,KAAK;AAAA;AAAA;AAAA,GAAX,C,CAuCA;;;AAEA,IAAMwB,MAAM;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXvB,YAAAA,QAFW,GAaTuB,QAbS,CAEXvB,QAFW,EAGXE,KAHW,GAaTqB,QAbS,CAGXrB,KAHW,EAIXD,QAJW,GAaTsB,QAbS,CAIXtB,QAJW,EAKXuB,SALW,GAaTD,QAbS,CAKXC,SALW,EAMXC,IANW,GAaTF,QAbS,CAMXE,IANW,EAOXC,OAPW,GAaTH,QAbS,CAOXG,OAPW,EAQXC,UARW,GAaTJ,QAbS,CAQXI,UARW,EASXC,SATW,GAaTL,QAbS,CASXK,SATW,EAUXC,KAVW,GAaTN,QAbS,CAUXM,KAVW,EAWXC,QAXW,GAaTP,QAbS,CAWXO,QAXW,EAYXC,KAZW,GAaTR,QAbS,CAYXQ,KAZW;AAeThC,YAAAA,IAfS,GAeF;AACTC,cAAAA,QAAQ,EAAEA,QADD;AAETE,cAAAA,KAAK,EAAEA,KAFE;AAGTD,cAAAA,QAAQ,EAAEA;AAHD,aAfE;AAqBP+B,YAAAA,WArBO,GAqBO;AAClB9B,cAAAA,KAAK,EAAEA,KADW;AAElByB,cAAAA,UAAU,EAAEA,UAFM;AAGlBC,cAAAA,SAAS,EAAEA,SAHO;AAIlB5B,cAAAA,QAAQ,EAAEA,QAJQ;AAKlBiC,cAAAA,OAAO,EAAE;AACPN,gBAAAA,UAAU,EAAEA,UADL;AAEPC,gBAAAA,SAAS,EAAEA,SAFJ;AAGPM,gBAAAA,OAAO,EAAE,SAHF;AAIPV,gBAAAA,SAAS,EAAEA,SAJJ;AAKPW,gBAAAA,SAAS,EAAE,EALJ;AAMPV,gBAAAA,IAAI,EAAEA,IANC;AAOPM,gBAAAA,KAAK,EAAEA,KAPA;AAQPD,gBAAAA,QAAQ,EAAEA,QARH;AASPJ,gBAAAA,OAAO,EAAE,OATF;AAUPxB,gBAAAA,KAAK,EAAEA,KAVA;AAWP2B,gBAAAA,KAAK,EAAEA;AAXA,eALS;AAkBlBO,cAAAA,QAAQ,EAAE;AACRT,gBAAAA,UAAU,EAAEA,UADJ;AAERC,gBAAAA,SAAS,EAAEA,SAFH;AAGRM,gBAAAA,OAAO,EAAE,EAHD;AAIRG,gBAAAA,OAAO,EAAEb,SAJD;AAKRc,gBAAAA,QAAQ,EAAE,EALF;AAMRb,gBAAAA,IAAI,EAAEA,IANE;AAORM,gBAAAA,KAAK,EAAEA,KAPC;AAQRQ,gBAAAA,EAAE,EAAET,QARI;AASRJ,gBAAAA,OAAO,EAAEA;AATD;AAlBQ,aArBP;AAmDPc,YAAAA,IAnDO,GAmDAC,IAAI,CAACC,SAAL,CAAe;AAC1B1C,cAAAA,QAAQ,EAAEA,QADgB;AAE1BE,cAAAA,KAAK,EAAEA,KAFmB;AAG1BD,cAAAA,QAAQ,EAAEA;AAHgB,aAAf,CAnDA;AAyDT0C,YAAAA,OAzDS,GAyDC,KAzDD,EA2Db;AACA;;AA5Da;AAAA,mBA8DAC,KAAK,CAAClD,SAAS,GAAGC,WAAb,EAA0B;AAC1CkD,cAAAA,MAAM,EAAE,MADkC;AAE1CC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFiC;AAK1CN,cAAAA,IAAI,EAAEA;AALoC,aAA1B,CAAL,CAOVtB,KAPU,CAOJ,UAAC6B,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC3B,QAAN,CAAeoB,IAA3B;AACD,aATU,EAUVpC,IAVU,CAUL,UAASY,GAAT,EAAc;AAClB,qBAAOA,GAAG,CAACkC,IAAJ,EAAP;AACD,aAZU,EAaV9C,IAbU,CAaL,UAASY,GAAT,EAAc;AAClB,kBAAIA,GAAG,CAACK,OAAR,EAAiB;AACfJ,gBAAAA,KAAK,CAACD,GAAG,CAACK,OAAL,CAAL;;AACA,oBAAIL,GAAG,CAACmC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,yBAAOC,cAAc,CAACpB,WAAD,EAAc9B,KAAd,CAAd,CAAmCE,IAAnC,CAAwC,UAACY,GAAD,EAAS;AACtD2B,oBAAAA,OAAO,GAAG,IAAV;AACA,2BAAOpB,QAAP;AACD,mBAHM,CAAP;AAID,iBALD,MAKO,OAAO,IAAP;AACR;AACF,aAvBU,CA9DA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAND,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAwFA,IAAM8B,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,WAAD,EAAc9B,KAAd,EAAwB;AAC7C,MAAI,CAACA,KAAL,EAAY;AACV,QAAMM,IAAI,GAAG;AACXE,MAAAA,iBAAiB,EAAEsB,WAAW,CAAChC,QADpB;AAEXa,MAAAA,UAAU,EAAEmB,WAAW,CAAC9B;AAFb,KAAb;AAIAmD,IAAAA,YAAY,CAAC7C,IAAD,CAAZ,CAAmBJ,IAAnB,CAAwB,UAACY,GAAD,EAAS;AAC/B,aAAOA,GAAP;AACD,KAFD;AAGD;;AACD,SAAOsC,aAAa,CAACtB,WAAD,CAApB;AACD,CAXD;;AAaA,IAAMjB,YAAY;AAAA,uEAAG,kBAAOb,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNf,WAAW,CAACoE,QAAZ,2BAAwCrD,KAAxC,GACVE,IADU,CACL,UAACgB,QAAD,EAAc;AAClB,kBAAIA,QAAJ,EAAc;AACZ,oBAAIA,QAAQ,CAACoB,IAAb,EAAmB;AACjB,sBAAMxB,GAAG,GAAGyB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAZ;AACA,sBAAMzC,IAAI,GAAGiB,GAAG,CAAC,CAAD,CAAhB;AACA,sBAAIyC,QAAQ,GAAG;AACbC,oBAAAA,MAAM,EAAE3D,IAAI,CAAC4D,EADA;AAEbzB,oBAAAA,OAAO,EAAEnC,IAAI,CAACkC,OAAL,CAAaC,OAFT;AAGbP,oBAAAA,UAAU,EAAE5B,IAAI,CAACkC,OAAL,CAAaN,UAHZ;AAIbC,oBAAAA,SAAS,EAAE7B,IAAI,CAACkC,OAAL,CAAaL,SAJX;AAKbJ,oBAAAA,SAAS,EAAEzB,IAAI,CAACkC,OAAL,CAAaT,SALX;AAMbW,oBAAAA,SAAS,EAAEpC,IAAI,CAACkC,OAAL,CAAaE,SANX;AAObV,oBAAAA,IAAI,EAAE1B,IAAI,CAACkC,OAAL,CAAaR,IAPN;AAQbM,oBAAAA,KAAK,EAAEhC,IAAI,CAACkC,OAAL,CAAaF,KARP;AASbD,oBAAAA,QAAQ,EAAE/B,IAAI,CAACkC,OAAL,CAAaH,QATV;AAUbJ,oBAAAA,OAAO,EAAE3B,IAAI,CAACkC,OAAL,CAAaP,OAVT;AAWbG,oBAAAA,KAAK,EAAE9B,IAAI,CAACkC,OAAL,CAAaJ;AAXP,mBAAf;AAaA,yBAAO4B,QAAP;AACD;AACF;AACF,aAtBU,EAuBVvC,KAvBU,CAuBJ,UAAC6B,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAzBU,CADM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZhC,YAAY;AAAA;AAAA;AAAA,GAAlB;;SA6Be6C,a;;;;;4EAAf,kBAA6BD,EAA7B,EAAiCE,WAAjC,EAA8CC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGMD,WAHN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIU/E,KAAK,CACRqB,IADG,4DACsDwD,EADtD,GAC4D;AAC9D3D,cAAAA,QAAQ,EAAE6D,WAAW,CAACE,QADwC;AAE9DC,cAAAA,IAAI,EAAEH,WAAW,CAAC3D;AAF4C,aAD5D,EAKHE,IALG,CAKE,UAACC,MAAD,EAAY;AAChB,kBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B,CAC1B,CADD,MACO;AACLW,gBAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,aAVG,EAWHC,KAXG,CAWG,UAACC,CAAD,EAAO;AACZF,cAAAA,KAAK,CAACE,CAAC,CAACC,QAAF,CAAWoB,IAAX,CAAgBnB,OAAjB,CAAL;AACD,aAbG,CAJV;;AAAA;AAAA,iBAoBMyC,eApBN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAqBU3E,WAAW,CAAC8E,QAAZ,qBAAkCN,EAAlC,GAAwCG,eAAxC,EACH1D,IADG,CACE,UAACgB,QAAD,EAAc;AAClB,kBAAM8C,QAAQ,GAAGzB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAjB;AACD,aAHG,EAIHtB,KAJG,CAIG,UAAC6B,KAAD,EAAW,CAAE,CAJhB,CArBV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6BA,IAAMoB,cAAc;AAAA,uEAAG,kBAAOR,EAAP,EAAW3B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR7C,WAAW,CAAC8E,QAAZ,qBAAkCN,EAAlC,GAAwC3B,WAAxC,EACV5B,IADU,CACL,UAACgB,QAAD,EAAc;AAClB,kBAAM8C,QAAQ,GAAGzB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAjB;AACA,qBAAO0B,QAAP;AACD,aAJU,EAKVhD,KALU,CAKJ,UAAC6B,KAAD,EAAW,CAAE,CALT,CADQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdoB,cAAc;AAAA;AAAA;AAAA,GAApB;;AASA,IAAMb,aAAa;AAAA,uEAAG,kBAAOtB,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP7C,WAAW,CAACoE,QAAZ,2BAAwCvB,WAAW,CAAC9B,KAApD,GACVE,IADU,CACL,UAACgB,QAAD,EAAc;AAClB,kBAAIA,QAAJ,EAAc;AACZ,oBAAIA,QAAQ,CAACoB,IAAb,EAAmB;AACjB,sBAAMzC,IAAI,GAAG0C,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAb;AACA,sBAAMkB,MAAM,GAAG3D,IAAI,CAAC,CAAD,CAAJ,CAAQ4D,EAAvB;AACA,yBAAOQ,cAAc,CAACT,MAAD,EAAS1B,WAAT,CAArB;AACD;AACF;AACF,aATU,EAUVd,KAVU,CAUJ,UAAC6B,KAAD,EAAW;AAChB,qBAAO,IAAP;AACD,aAZU,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbO,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAgBA,IAAMc,KAAK;AAAA,uEAAG,kBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZrB,YAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAZ;AACMC,YAAAA,UAFM,GAEOC,SAAS,CAACF,SAAD,CAFhB;AAGZrB,YAAAA,OAAO,CAACC,GAAR,CAAYqB,UAAZ;;AAHY,iBAIRA,UAJQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKGnF,WAAW,CAACqF,SAAZ,CAAsB,QAAtB,EAAgCF,UAAhC,EACVlE,IADU,CACL,UAACY,GAAD,EAAS;AACb,kBAAIA,GAAG,CAACwB,IAAR,EAAc;AACZ,oBAAMiC,CAAC,GAAGhC,IAAI,CAACe,KAAL,CAAWxC,GAAG,CAACwB,IAAf,CAAV;AACAQ,gBAAAA,OAAO,CAACC,GAAR,CAAYwB,CAAZ;AACD;;AAEDzB,cAAAA,OAAO,CAACC,GAAR,CAAYjC,GAAZ;AACD,aARU,EASVZ,IATU,CASL,UAACY,GAAD,EAAS;AACbgC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAOjC,GAAnB;AACAgC,cAAAA,OAAO,CAACC,GAAR,CAAYjC,GAAZ;AACAgC,cAAAA,OAAO,CAACC,GAAR,CAAYjC,GAAG,CAACR,IAAJ,CAASa,OAArB;AACD,aAbU,EAcVH,KAdU,CAcJ,UAAC6B,KAAD,EAAW;AAChBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAhBU,CALH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALqB,KAAK;AAAA;AAAA;AAAA,GAAX;;AAyBA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACF,SAAD,EAAe;AAC/B,MAAIK,KAAK,GAAG,KAAZ;AACA,MAAIJ,UAAU,GAAG,EAAjB;AAF+B,MAI7BpE,KAJ6B,GAe3BmE,SAf2B,CAI7BnE,KAJ6B;AAAA,MAK7BsB,SAL6B,GAe3B6C,SAf2B,CAK7B7C,SAL6B;AAAA,MAM7BC,IAN6B,GAe3B4C,SAf2B,CAM7B5C,IAN6B;AAAA,MAO7BC,OAP6B,GAe3B2C,SAf2B,CAO7B3C,OAP6B;AAAA,MAQ7BC,UAR6B,GAe3B0C,SAf2B,CAQ7B1C,UAR6B;AAAA,MAS7BC,SAT6B,GAe3ByC,SAf2B,CAS7BzC,SAT6B;AAAA,MAU7BC,KAV6B,GAe3BwC,SAf2B,CAU7BxC,KAV6B;AAAA,MAW7BC,QAX6B,GAe3BuC,SAf2B,CAW7BvC,QAX6B;AAAA,MAY7BC,KAZ6B,GAe3BsC,SAf2B,CAY7BtC,KAZ6B;AAAA,MAa7B4C,IAb6B,GAe3BN,SAf2B,CAa7BM,IAb6B;AAAA,MAc7BC,KAd6B,GAe3BP,SAf2B,CAc7BO,KAd6B;AAgB/B5B,EAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAZ,EAhB+B,CAiB/B;;AAEA,MACEzC,SAAS,IACTD,UADA,IAEAzB,KAFA,IAGAsB,SAHA,IAIAC,IAJA,IAKAM,KALA,IAMAD,QANA,IAOAJ,OAPA,IAQAG,KARA,IASA8C,IATA,IAUAC,KAXF,EAYE;AACAN,IAAAA,UAAU,GAAG;AACXO,MAAAA,cAAc,EAAE,MADL;AAEXC,MAAAA,oBAAoB,EAAE,qBAFX;AAGXC,MAAAA,QAAQ,EAAE,MAHC;AAIX9C,MAAAA,OAAO,EAAE;AACPN,QAAAA,UAAU,YAAKA,UAAL,CADH;AAEPC,QAAAA,SAAS,YAAKA,SAAL,CAFF;AAGPJ,QAAAA,SAAS,YAAKA,SAAL,CAHF;AAIPW,QAAAA,SAAS,IAJF;AAKPV,QAAAA,IAAI,YAAKA,IAAL,CALG;AAMPM,QAAAA,KAAK,aAAMA,KAAN,CANE;AAOPD,QAAAA,QAAQ,YAAKA,QAAL,CAPD;AAQPJ,QAAAA,OAAO,YAAKA,OAAL,CARA;AASPxB,QAAAA,KAAK,YAAKA,KAAL,CATE;AAUP2B,QAAAA,KAAK,YAAKA,KAAL;AAVE,OAJE;AAgBXO,MAAAA,QAAQ,EAAE;AACRT,QAAAA,UAAU,YAAKA,UAAL,CADF;AAERC,QAAAA,SAAS,YAAKA,SAAL,CAFD;AAGRJ,QAAAA,SAAS,YAAKA,SAAL,CAHD;AAIRW,QAAAA,SAAS,IAJD;AAKRV,QAAAA,IAAI,YAAKA,IAAL,CALI;AAMRM,QAAAA,KAAK,YAAKA,KAAL,CANG;AAORD,QAAAA,QAAQ,YAAKA,QAAL,CAPA;AAQRJ,QAAAA,OAAO,YAAKA,OAAL,CARC;AASRxB,QAAAA,KAAK,YAAKA,KAAL;AATG,OAhBC;AA2BX8E,MAAAA,UAAU,EAAEL,IA3BD;AA4BXM,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,SAAS,EAAE,WADb;AAEEC,QAAAA,YAAY,EAAE,WAFhB;AAGEP,QAAAA,KAAK,YAAKA,KAAL;AAHP,OADc;AA5BL,KAAb;AAoCD;;AACD,SAAON,UAAP;AACD,CAtED;;AAwEA,IAAMjB,YAAY,GAAG,SAAfA,YAAe,CAAC7C,IAAD,EAAU;AAC7BwC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,EAAA,KAAI,CAACmC,QAAL,CAAc,YAAM;AAClB,6BACK;AACDrF,MAAAA,IAAI,EAAES,IAAI,CAACE,iBADV;AAEDR,MAAAA,KAAK,EAAEM,IAAI,CAACK;AAFX,KADL;AAMD,GAPD;;AAQA,EAAA,KAAI,CAACE,YAAL,CAAkBP,IAAI,CAACK,UAAvB,EAV6B,CAW7B;AACA;;AACD,CAbD;;AAeA,IAAMwE,MAAM,GAAG,SAATA,MAAS,CAAC7E,IAAD,EAAU;AACvB,EAAA,KAAI,CAAC4E,QAAL,CAAc,YAAM;AAClB,6BACK;AACDrF,MAAAA,IAAI,EAAE,IADL;AAEDqE,MAAAA,KAAK,EAAE,IAFN;AAGDkB,MAAAA,IAAI,EAAE,IAHL;AAIDC,MAAAA,QAAQ,EAAE,IAJT;AAKDrF,MAAAA,KAAK,EAAE,IALN;AAMDmC,MAAAA,OAAO,EAAE,IANR;AAODC,MAAAA,QAAQ,EAAE,IAPT;AAQDb,MAAAA,IAAI,EAAE,IARL;AASDM,MAAAA,KAAK,EAAE,IATN;AAUDQ,MAAAA,EAAE,EAAE,IAVH;AAWDb,MAAAA,OAAO,EAAE,IAXR;AAYDG,MAAAA,KAAK,EAAE,IAZN;AAaD8C,MAAAA,IAAI,EAAE,IAbL;AAcDa,MAAAA,YAAY,EAAE,IAdb;AAeDC,MAAAA,OAAO,EAAE,IAfR;AAgBDb,MAAAA,KAAK,EAAE;AAhBN,KADL;AAoBD,GArBD,EADuB,CAuBvB;AACA;;AACD,CAzBD;;AA2BA,IAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAAClF,IAAD,EAAU;AAC9B,MAAMT,IAAI,GAAGS,IAAI,CAACT,IAAlB;AACA,MAAM4F,IAAI,GAAGnF,IAAI,CAAC4B,QAAlB;;AACA,EAAA,KAAI,CAACgD,QAAL,CAAc,YAAM;AAClB,6BACK;AACDE,MAAAA,IAAI,EAAEvF,IAAI,CAACW,iBADV;AAEDR,MAAAA,KAAK,EAAEH,IAAI,CAACc,UAFX;AAGDgB,MAAAA,KAAK,EAAE8D,IAAI,CAAC9D,KAHX;AAIDQ,MAAAA,OAAO,EAAEsD,IAAI,CAACC,MAJb;AAKDtD,MAAAA,QAAQ,EAAEqD,IAAI,CAACrD,QALd;AAMDb,MAAAA,IAAI,EAAEkE,IAAI,CAAClE,IANV;AAODM,MAAAA,KAAK,EAAE4D,IAAI,CAACE,QAPX;AAQDtD,MAAAA,EAAE,EAAEoD,IAAI,CAACG,MARR;AASDpE,MAAAA,OAAO,EAAEiE,IAAI,CAACjE;AATb,KADL;AAaD,GAdD;AAeD,CAlBD;;AAoBA,eAAe;AAAC5B,EAAAA,KAAK,EAALA,KAAD;AAAQwB,EAAAA,MAAM,EAANA,MAAR;AAAgB8C,EAAAA,KAAK,EAALA;AAAhB,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {createContext, useContext} from \"react\";\nimport axios from \"axios\";\nimport orderReducer from \"../reducers/order\";\n\nconst wooConfig = require(\"./wooConfig\");\nconst WooCommerceAPI = require(\"woocommerce-api\");\n\nconst WooCommerce = new WooCommerceAPI({\n  url: wooConfig.siteUrl,\n  consumerKey: wooConfig.consumerKey,\n  consumerSecret: wooConfig.consumerSecret,\n  wpAPI: true,\n  version: \"wc/v3\",\n});\n\nconst targetUrl = \"https://grassrootemarket.com/wp-json/\";\nconst urlRegister = \"wp/v2/users/register\";\nconst urlJWT = \"jwt-auth/v1/token\";\nconst userURI = targetUrl + \"wp/v2/users/me\";\n\n/**\n * Signup Flow\n *  1-Create user : Creates an authenticated Wordpress Account with password\n *  2-Create user in woocommerce -> createCustomer(newcustomer)\n *  3-receiveLogin(data{user,email}) -> fillCustomer(mail)\n *  4-getCustomerId(newCustomer) -> updateCustomer(userId, newCustomer)\n */\n\nconst login = async (user) => {\n  var username = user.username; //this is the nice_name\n  var password = user.password;\n  var token,\n    displayName,\n    niceName,\n    email = null;\n  return await axios\n    .post(\"https://grassrootemarket.com/wp-json/jwt-auth/v1/token\", {\n      username: username,\n      password: password,\n    })\n    .then((result) => {\n      if (result.status === 200) {\n        token = result.data.token;\n        displayName = result.data.user_display_name;\n        niceName = result.data.user_nicename;\n        email = result.data.user_email;\n        var filledFields = null;\n        return fillCustomer(email).then((res) => {\n          if (res) {\n            filledFields = {\n              ...res,\n              username: displayName,\n              email: email,\n              token: token,\n            };\n          }\n          return filledFields;\n        });\n      } else {\n        alert(\"error\");\n      }\n    })\n    .catch((e) => {\n      alert(e.response.data.message);\n    });\n};\n\n//var data = [user, shipping];\n\nconst signup = async (userData) => {\n  const {\n    username,\n    email,\n    password,\n    address_1,\n    city,\n    country,\n    first_name,\n    last_name,\n    phone,\n    postcode,\n    state,\n  } = userData;\n\n  var user = {\n    username: username,\n    email: email,\n    password: password,\n  };\n\n  const newCustomer = {\n    email: email,\n    first_name: first_name,\n    last_name: last_name,\n    username: username,\n    billing: {\n      first_name: first_name,\n      last_name: last_name,\n      company: \"company\",\n      address_1: address_1,\n      address_2: \"\",\n      city: city,\n      state: state,\n      postcode: postcode,\n      country: \"Spain\",\n      email: email,\n      phone: phone,\n    },\n    shipping: {\n      first_name: first_name,\n      last_name: last_name,\n      company: \"\",\n      address: address_1,\n      address2: \"\",\n      city: city,\n      state: state,\n      cp: postcode,\n      country: country,\n    },\n  };\n  const body = JSON.stringify({\n    username: username,\n    email: email,\n    password: password,\n  });\n\n  var created = false;\n\n  // After filling the vlaue fields,the function will proceed to create\n  // first the wordpress user.\n\n  return await fetch(targetUrl + urlRegister, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  })\n    .catch((error) => {\n      console.log(error.response.body);\n    })\n    .then(function(res) {\n      return res.json();\n    })\n    .then(function(res) {\n      if (res.message) {\n        alert(res.message);\n        if (res.code === 200) {\n          return createCustomer(newCustomer, email).then((res) => {\n            created = true;\n            return userData;\n          });\n        } else return null;\n      }\n    });\n};\n\nconst createCustomer = (newCustomer, email) => {\n  if (!email) {\n    const data = {\n      user_display_name: newCustomer.username,\n      user_email: newCustomer.email,\n    };\n    receiveLogin(data).then((res) => {\n      return res;\n    });\n  }\n  return getCustomerId(newCustomer);\n};\n\nconst fillCustomer = async (email) => {\n  return await WooCommerce.getAsync(`customers?email=${email}`)\n    .then((response) => {\n      if (response) {\n        if (response.body) {\n          const res = JSON.parse(response.body);\n          const user = res[0];\n          var thisUser = {\n            userId: user.id,\n            company: user.billing.company,\n            first_name: user.billing.first_name,\n            last_name: user.billing.last_name,\n            address_1: user.billing.address_1,\n            address_2: user.billing.address_2,\n            city: user.billing.city,\n            state: user.billing.state,\n            postcode: user.billing.postcode,\n            country: user.billing.country,\n            phone: user.billing.phone,\n          };\n          return thisUser;\n        }\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nasync function updateAccount(id, updatedUser, updatedShipping) {\n  // First will check if user values must be modified : name /mail\n  // Check\n  if (updatedUser) {\n    await axios\n      .post(`https://grassrootemarket.com/wp-json/wp/v2/users/${id}`, {\n        username: updatedUser.userName,\n        mail: updatedUser.email,\n      })\n      .then((result) => {\n        if (result.status === 200) {\n        } else {\n          alert(\"error\");\n        }\n      })\n      .catch((e) => {\n        alert(e.response.body.message);\n      });\n  }\n\n  if (updatedShipping) {\n    await WooCommerce.putAsync(`customers/${id}`, updatedShipping)\n      .then((response) => {\n        const customer = JSON.parse(response.body);\n      })\n      .catch((error) => {});\n  }\n}\n\nconst updateCustomer = async (id, newCustomer) => {\n  return await WooCommerce.putAsync(`customers/${id}`, newCustomer)\n    .then((response) => {\n      const customer = JSON.parse(response.body);\n      return customer;\n    })\n    .catch((error) => {});\n};\n\nconst getCustomerId = async (newCustomer) => {\n  return await WooCommerce.getAsync(`customers?email=${newCustomer.email}`)\n    .then((response) => {\n      if (response) {\n        if (response.body) {\n          const user = JSON.parse(response.body);\n          const userId = user[0].id;\n          return updateCustomer(userId, newCustomer);\n        }\n      }\n    })\n    .catch((error) => {\n      return null;\n    });\n};\n\nconst order = async (orderData) => {\n  console.log(orderData);\n  const orderReady = fillOrder(orderData);\n  console.log(orderReady);\n  if (orderReady) {\n    return await WooCommerce.postAsync(\"orders\", orderReady)\n      .then((res) => {\n        if (res.body) {\n          const r = JSON.parse(res.body);\n          console.log(r);\n        }\n\n        console.log(res);\n      })\n      .then((res) => {\n        console.log(typeof res);\n        console.log(res);\n        console.log(res.data.message);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n};\n\nconst fillOrder = (orderData) => {\n  var ready = false;\n  var orderReady = {};\n  const {\n    email,\n    address_1,\n    city,\n    country,\n    first_name,\n    last_name,\n    phone,\n    postcode,\n    state,\n    cart,\n    total,\n  } = orderData;\n  console.log(orderData);\n  // const myCart = JSON.stringify(cart);\n\n  if (\n    last_name &&\n    first_name &&\n    email &&\n    address_1 &&\n    city &&\n    state &&\n    postcode &&\n    country &&\n    phone &&\n    cart &&\n    total\n  ) {\n    orderReady = {\n      payment_method: \"bacs\",\n      payment_method_title: \"Credit Card Payment\",\n      set_paid: \"true\",\n      billing: {\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n        address_1: `${address_1}`,\n        address_2: ``,\n        city: `${city}`,\n        state: ` ${state}`,\n        postcode: `${postcode}`,\n        country: `${country}`,\n        email: `${email}`,\n        phone: `${phone}`,\n      },\n      shipping: {\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n        address_1: `${address_1}`,\n        address_2: ``,\n        city: `${city}`,\n        state: `${state}`,\n        postcode: `${postcode}`,\n        country: `${country}`,\n        email: `${email}`,\n      },\n      line_items: cart,\n      shipping_lines: [\n        {\n          method_id: \"flat_rate\",\n          method_title: \"Flat Rate\",\n          total: `${total}`,\n        },\n      ],\n    };\n  }\n  return orderReady;\n};\n\nconst receiveLogin = (data) => {\n  console.log(\"ZOMBIE\");\n  this.setState(() => {\n    return {\n      ...{\n        user: data.user_display_name,\n        email: data.user_email,\n      },\n    };\n  });\n  this.fillCustomer(data.user_email);\n  // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n};\n\nconst logout = (data) => {\n  this.setState(() => {\n    return {\n      ...{\n        user: null,\n        order: null,\n        name: null,\n        lastName: null,\n        email: null,\n        address: null,\n        address2: null,\n        city: null,\n        state: null,\n        cp: null,\n        country: null,\n        phone: null,\n        cart: null,\n        cartSubTotal: null,\n        cartTax: null,\n        total: null,\n      },\n    };\n  });\n  // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n};\n\nconst receiveSignup = (data) => {\n  const user = data.user;\n  const ship = data.shipping;\n  this.setState(() => {\n    return {\n      ...{\n        name: user.user_display_name,\n        email: user.user_email,\n        phone: ship.phone,\n        address: ship.street,\n        address2: ship.address2,\n        city: ship.city,\n        state: ship.province,\n        cp: ship.postal,\n        country: ship.country,\n      },\n    };\n  });\n};\n\nexport default {login, signup, order};\n"]},"metadata":{},"sourceType":"module"}