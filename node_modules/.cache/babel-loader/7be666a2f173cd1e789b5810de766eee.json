{"ast":null,"code":"import _classCallCheck from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/src/components/checkout/checkoutForm.jsx\";\n// CheckoutForm.js\nimport React from \"react\";\nimport { injectStripe } from \"react-stripe-elements\";\nimport CardSection from \"./CardSection\";\n\nvar CheckoutForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckoutForm, _React$Component);\n\n  function CheckoutForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckoutForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckoutForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (ev) {\n      // We don't want to let default form submission happen here, which would refresh the page.\n      ev.preventDefault(); // Use Elements to get a reference to the Card Element mounted somewhere\n      // in your <Elements> tree. Elements will know how to find your Card Element\n      // because only one is allowed.\n      // See our getElement documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#elements-get-element\n\n      var cardElement = _this.props.elements.getElement(\"card\"); // From here we can call createPaymentMethod to create a PaymentMethod\n      // See our createPaymentMethod documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\n\n\n      _this.props.stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement,\n        billing_details: {\n          name: \"Jenny Rosen\"\n        }\n      }).then(function (_ref) {\n        var paymentMethod = _ref.paymentMethod;\n        console.log(\"Received Stripe PaymentMethod:\", paymentMethod);\n      }); // You can also use confirmCardPayment with the PaymentIntents API automatic confirmation flow.\n      // See our confirmCardPayment documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-payment\n\n\n      _this.props.stripe.confirmCardPayment(\"{PAYMENT_INTENT_CLIENT_SECRET}\", {\n        payment_method: {\n          card: cardElement\n        }\n      }); // You can also use confirmCardSetup with the SetupIntents API.\n      // See our confirmCardSetup documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-setup\n\n\n      _this.props.stripe.confirmCardSetup(\"{PAYMENT_INTENT_CLIENT_SECRET}\", {\n        payment_method: {\n          card: cardElement\n        }\n      }); // You can also use createToken to create tokens.\n      // See our tokens documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-token\n      // With createToken, you will not need to pass in the reference to\n      // the Element. It will be inferred automatically.\n\n\n      _this.props.stripe.createToken({\n        type: \"card\",\n        name: \"Jenny Rosen\"\n      }); // token type can optionally be inferred if there is only one Element\n      // with which to create tokens\n      // this.props.stripe.createToken({name: 'Jenny Rosen'});\n      // You can also use createSource to create Sources.\n      // See our Sources documentation for more:\n      // https://stripe.com/docs/stripe-js/reference#stripe-create-source\n      // With createSource, you will not need to pass in the reference to\n      // the Element. It will be inferred automatically.\n\n\n      _this.props.stripe.createSource({\n        type: \"card\",\n        owner: {\n          name: \"Jenny Rosen\"\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckoutForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Confirm order\"));\n    }\n  }]);\n\n  return CheckoutForm;\n}(React.Component);\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/template-store1/src/components/checkout/checkoutForm.jsx"],"names":["React","injectStripe","CardSection","CheckoutForm","handleSubmit","ev","preventDefault","cardElement","props","elements","getElement","stripe","createPaymentMethod","type","card","billing_details","name","then","paymentMethod","console","log","confirmCardPayment","payment_method","confirmCardSetup","createToken","createSource","owner","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,UAACC,EAAD,EAAQ;AACrB;AACAA,MAAAA,EAAE,CAACC,cAAH,GAFqB,CAIrB;AACA;AACA;AACA;AACA;;AACA,UAAMC,WAAW,GAAG,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,UAApB,CAA+B,MAA/B,CAApB,CATqB,CAWrB;AACA;AACA;;;AACA,YAAKF,KAAL,CAAWG,MAAX,CACGC,mBADH,CACuB;AACnBC,QAAAA,IAAI,EAAE,MADa;AAEnBC,QAAAA,IAAI,EAAEP,WAFa;AAGnBQ,QAAAA,eAAe,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AAHE,OADvB,EAMGC,IANH,CAMQ,gBAAuB;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,aAA9C;AACD,OARH,EAdqB,CAwBrB;AACA;AACA;;;AACA,YAAKV,KAAL,CAAWG,MAAX,CAAkBU,kBAAlB,CAAqC,gCAArC,EAAuE;AACrEC,QAAAA,cAAc,EAAE;AACdR,UAAAA,IAAI,EAAEP;AADQ;AADqD,OAAvE,EA3BqB,CAiCrB;AACA;AACA;;;AACA,YAAKC,KAAL,CAAWG,MAAX,CAAkBY,gBAAlB,CAAmC,gCAAnC,EAAqE;AACnED,QAAAA,cAAc,EAAE;AACdR,UAAAA,IAAI,EAAEP;AADQ;AADmD,OAArE,EApCqB,CA0CrB;AACA;AACA;AACA;AACA;;;AACA,YAAKC,KAAL,CAAWG,MAAX,CAAkBa,WAAlB,CAA8B;AAAEX,QAAAA,IAAI,EAAE,MAAR;AAAgBG,QAAAA,IAAI,EAAE;AAAtB,OAA9B,EA/CqB,CAgDrB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA,YAAKR,KAAL,CAAWG,MAAX,CAAkBc,YAAlB,CAA+B;AAC7BZ,QAAAA,IAAI,EAAE,MADuB;AAE7Ba,QAAAA,KAAK,EAAE;AACLV,UAAAA,IAAI,EAAE;AADD;AAFsB,OAA/B;AAMD,K;;;;;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF;AAMD;;;;EAzEwBJ,KAAK,CAAC2B,S;;AA4EjC,eAAe1B,YAAY,CAACE,YAAD,CAA3B","sourcesContent":["// CheckoutForm.js\nimport React from \"react\";\nimport { injectStripe } from \"react-stripe-elements\";\n\nimport CardSection from \"./CardSection\";\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = (ev) => {\n    // We don't want to let default form submission happen here, which would refresh the page.\n    ev.preventDefault();\n\n    // Use Elements to get a reference to the Card Element mounted somewhere\n    // in your <Elements> tree. Elements will know how to find your Card Element\n    // because only one is allowed.\n    // See our getElement documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#elements-get-element\n    const cardElement = this.props.elements.getElement(\"card\");\n\n    // From here we can call createPaymentMethod to create a PaymentMethod\n    // See our createPaymentMethod documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method\n    this.props.stripe\n      .createPaymentMethod({\n        type: \"card\",\n        card: cardElement,\n        billing_details: { name: \"Jenny Rosen\" },\n      })\n      .then(({ paymentMethod }) => {\n        console.log(\"Received Stripe PaymentMethod:\", paymentMethod);\n      });\n\n    // You can also use confirmCardPayment with the PaymentIntents API automatic confirmation flow.\n    // See our confirmCardPayment documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-payment\n    this.props.stripe.confirmCardPayment(\"{PAYMENT_INTENT_CLIENT_SECRET}\", {\n      payment_method: {\n        card: cardElement,\n      },\n    });\n\n    // You can also use confirmCardSetup with the SetupIntents API.\n    // See our confirmCardSetup documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-confirm-card-setup\n    this.props.stripe.confirmCardSetup(\"{PAYMENT_INTENT_CLIENT_SECRET}\", {\n      payment_method: {\n        card: cardElement,\n      },\n    });\n\n    // You can also use createToken to create tokens.\n    // See our tokens documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-token\n    // With createToken, you will not need to pass in the reference to\n    // the Element. It will be inferred automatically.\n    this.props.stripe.createToken({ type: \"card\", name: \"Jenny Rosen\" });\n    // token type can optionally be inferred if there is only one Element\n    // with which to create tokens\n    // this.props.stripe.createToken({name: 'Jenny Rosen'});\n\n    // You can also use createSource to create Sources.\n    // See our Sources documentation for more:\n    // https://stripe.com/docs/stripe-js/reference#stripe-create-source\n    // With createSource, you will not need to pass in the reference to\n    // the Element. It will be inferred automatically.\n    this.props.stripe.createSource({\n      type: \"card\",\n      owner: {\n        name: \"Jenny Rosen\",\n      },\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <CardSection />\n        <button>Confirm order</button>\n      </form>\n    );\n  }\n}\n\nexport default injectStripe(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}