{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\"; // middlewares\n\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Import custom components\n\nimport rootReducer from \"../reducers\";\n\nfunction cleanLocalStorage() {\n  try {\n    localStorage.clear();\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction saveToLocalStorage(state) {\n  try {\n    var serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    var serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    console.log(JSON.parse(serializedState));\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nvar persistedState = loadFromLocalStorage();\n/**\r\n * Create a Redux store that holds the app state.\r\n */\n\nvar store = createStore(rootReducer, persistedState, compose(applyMiddleware(thunkMiddleware), //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n}));\nvar unsubscribe = store.subscribe(function () {\n  var state = store.getState();\n  saveToLocalStorage(state);\n});\nexport default store;","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunkMiddleware","logger","rootReducer","cleanLocalStorage","localStorage","clear","e","console","log","saveToLocalStorage","state","serializedState","JSON","stringify","setItem","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","unsubscribe","subscribe","getState"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAI;AACFC,IAAAA,YAAY,CAACC,KAAb;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,SAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAN,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BH,eAA9B;AACD,GAHD,CAGE,OAAOL,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,SAASS,oBAAT,GAAgC;AAC9B,MAAI;AACF,QAAMJ,eAAe,GAAGP,YAAY,CAACY,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIL,eAAe,KAAK,IAAxB,EAA8B,OAAOM,SAAP;AAC9BV,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACM,KAAL,CAAWP,eAAX,CAAZ;AACA,WAAOC,IAAI,CAACM,KAAL,CAAWP,eAAX,CAAP;AACD,GALD,CAKE,OAAOL,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOW,SAAP;AACD;AACF;;AAED,IAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA;;;;AAGA,IAAMK,KAAK,GAAGvB,WAAW,CACvBK,WADuB,EAEvBiB,cAFuB,EAGvBpB,OAAO,CACLD,eAAe,CAACE,eAAD,CADV,EAGL;AACAqB,MAAM,CAACC,4BAAP,GACID,MAAM,CAACC,4BAAP,EADJ,GAEI,UAASC,CAAT,EAAY;AACV,SAAOA,CAAP;AACD,CARA,CAHgB,CAAzB;AAcA,IAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgB,YAAM;AACxC,MAAMf,KAAK,GAAGU,KAAK,CAACM,QAAN,EAAd;AACAjB,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,CAHmB,CAApB;AAKA,eAAeU,KAAf","sourcesContent":["import {createStore, applyMiddleware, compose} from \"redux\";\r\n\r\n// middlewares\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\n// Import custom components\r\nimport rootReducer from \"../reducers\";\r\n\r\nfunction cleanLocalStorage() {\r\n  try {\r\n    localStorage.clear();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    console.log(JSON.parse(serializedState));\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n */\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(thunkMiddleware),\r\n\r\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : function(f) {\r\n          return f;\r\n        }\r\n  )\r\n);\r\nconst unsubscribe = store.subscribe(() => {\r\n  const state = store.getState();\r\n  saveToLocalStorage(state);\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}