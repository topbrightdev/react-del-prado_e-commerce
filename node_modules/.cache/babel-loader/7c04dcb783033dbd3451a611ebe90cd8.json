{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"/wp/v2/users/\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport axios from \"axios\";\n\nvar wooConfig = require(\"./wooConfig\");\n\nvar WooCommerceAPI = require(\"woocommerce-api\");\n\nvar WooCommerce = new WooCommerceAPI({\n  url: wooConfig.siteUrl,\n  consumerKey: wooConfig.consumerKey,\n  consumerSecret: wooConfig.consumerSecret,\n  wpAPI: true,\n  version: \"wc/v3\"\n});\n/**\n * Signup Flow\n *  1-Create user : Creates an authenticated Wordpress Account with password\n *  2-Create user in woocommerce -> createCustomer(newcustomer)\n *  3-receiveLogin(data{user,email}) -> fillCustomer(mail)\n *  4-getCustomerId(newCustomer) -> updateCustomer(userId, newCustomer)\n */\n\nvar login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(user) {\n    var username, password, token, displayName, email;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = user.username; //this is the nice_name\n\n            password = user.password;\n            email = null;\n            _context.next = 5;\n            return axios // .post(\"https://grassrootemarket.com/wp-json/jwt-auth/v1/token\", {\n            .post(process.env.REACT_APP_WORDPRESS + process.env.REACT_APP_JWT, {\n              username: username,\n              password: password\n            }).then(function (result) {\n              if (result.status === 200) {\n                token = result.data.token;\n                displayName = result.data.user_display_name;\n                email = result.data.user_email;\n                var filledFields = null;\n                return fillCustomer(email).then(function (res) {\n                  if (res) {\n                    filledFields = _objectSpread({}, res, {\n                      username: displayName,\n                      email: email,\n                      token: token\n                    });\n                  }\n\n                  return filledFields;\n                });\n              } else {\n                alert(\"error\");\n              }\n            }).catch(function (e) {\n              alert(e.response.data.message);\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function login(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //var data = [user, shipping];\n\n\nvar signup =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(userData) {\n    var username, email, password, address_1, city, country, first_name, last_name, phone, postcode, state, newCustomer, body;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            username = userData.username, email = userData.email, password = userData.password, address_1 = userData.address_1, city = userData.city, country = userData.country, first_name = userData.first_name, last_name = userData.last_name, phone = userData.phone, postcode = userData.postcode, state = userData.state;\n            newCustomer = {\n              email: email,\n              first_name: first_name,\n              last_name: last_name,\n              username: username,\n              billing: {\n                first_name: first_name,\n                last_name: last_name,\n                company: \"company\",\n                address_1: address_1,\n                address_2: \"\",\n                city: city,\n                state: state,\n                postcode: postcode,\n                country: \"Spain\",\n                email: email,\n                phone: phone\n              },\n              shipping: {\n                first_name: first_name,\n                last_name: last_name,\n                company: \"\",\n                address: address_1,\n                address2: \"\",\n                city: city,\n                state: state,\n                cp: postcode,\n                country: country\n              }\n            };\n            body = JSON.stringify({\n              username: username,\n              email: email,\n              password: password\n            });\n            console.log(body); // After filling the vlaue fields,the function will proceed to create\n            // first the wordpress user.\n            //return await fetch(targetUrl + urlRegister, {\n\n            _context2.next = 6;\n            return fetch(process.env.REACT_APP_WORDPRESS + process.env.REACT_APP_REGISTER, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: body\n            }).catch(function (error) {\n              console.log(error.response.body);\n            }).then(function (res) {\n              return res.json();\n            }).then(function (res) {\n              if (res.message) {\n                //  alert(res.message);\n                if (res.code === 200) {\n                  return createCustomer(newCustomer, email).then(function (res) {\n                    return userData;\n                  });\n                } else return null;\n              }\n            });\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function signup(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar createCustomer = function createCustomer(newCustomer, email) {\n  if (!email) {\n    var data = {\n      user_display_name: newCustomer.username,\n      user_email: newCustomer.email\n    };\n    receiveLogin(data).then(function (res) {\n      return res;\n    });\n  }\n\n  return getCustomerId(newCustomer);\n};\n\nvar fillCustomer =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(email) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return WooCommerce.getAsync(\"customers?email=\".concat(email)).then(function (response) {\n              if (response) {\n                if (response.body) {\n                  var res = JSON.parse(response.body);\n                  var user = res[0];\n                  var thisUser = {\n                    userId: user.id,\n                    company: user.billing.company,\n                    first_name: user.billing.first_name,\n                    last_name: user.billing.last_name,\n                    address_1: user.billing.address_1,\n                    address_2: user.billing.address_2,\n                    city: user.billing.city,\n                    state: user.billing.state,\n                    postcode: user.billing.postcode,\n                    country: user.billing.country,\n                    phone: user.billing.phone\n                  };\n                  return thisUser;\n                }\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function fillCustomer(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar updateAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(userData, userOldData) {\n    var id, username, email, address_1, city, country, first_name, last_name, phone, postcode, state, user, customer;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // First will check if user values must be modified : name /mail\n            // Check\n            id = userData.id, username = userData.username, email = userData.email, address_1 = userData.address_1, city = userData.city, country = userData.country, first_name = userData.first_name, last_name = userData.last_name, phone = userData.phone, postcode = userData.postcode, state = userData.state;\n            user = null;\n\n            if (username !== userOldData.username || email !== userOldData.email) {\n              user = {\n                username: username,\n                email: email\n              };\n            } else {\n              customer = null;\n\n              if (userOldData) {\n                customer = {\n                  email: email,\n                  first_name: first_name,\n                  last_name: last_name,\n                  username: username,\n                  billing: {\n                    first_name: first_name,\n                    last_name: last_name,\n                    company: \"company\",\n                    address_1: address_1,\n                    address_2: \"\",\n                    city: city,\n                    state: state,\n                    postcode: postcode,\n                    country: \"Spain\",\n                    email: email,\n                    phone: phone\n                  },\n                  shipping: {\n                    first_name: first_name,\n                    last_name: last_name,\n                    company: \"\",\n                    address: address_1,\n                    address2: \"\",\n                    city: city,\n                    state: state,\n                    cp: postcode,\n                    country: country\n                  }\n                };\n              }\n            }\n\n            if (!user) {\n              _context4.next = 7;\n              break;\n            }\n\n            _context4.next = 6;\n            return axios.post(process.env.REACT_APP_WORDPRESS(_templateObject(), id), {\n              username: user.username,\n              mail: user.email\n            }).then(function (result) {\n              if (result.status === 200) {\n                var thisUser = {\n                  userId: user.id,\n                  username: user.username,\n                  mail: user.email,\n                  company: userOldData.company,\n                  first_name: userOldData.first_name,\n                  last_name: userOldData.last_name,\n                  address_1: userOldData.address_1,\n                  address_2: userOldData.address_2,\n                  city: userOldData.city,\n                  state: userOldData.state,\n                  postcode: userOldData.postcode,\n                  country: userOldData.country,\n                  phone: userOldData.phone\n                };\n\n                _this.login(thisUser);\n\n                return thisUser;\n              } else {\n                alert(\"error\");\n              }\n            }).catch(function (e) {\n              console.log(e.response.body.message);\n              alert(e.response.body.message);\n            });\n\n          case 6:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 7:\n            if (!customer) {\n              _context4.next = 11;\n              break;\n            }\n\n            _context4.next = 10;\n            return WooCommerce.putAsync(\"customers/\".concat(id), customer).then(function (response) {\n              if (response.body) {\n                var res = JSON.parse(response.body);\n                var thisUser = {\n                  username: userOldData.username,\n                  email: userOldData.email,\n                  userId: res.id,\n                  company: res.billing.company,\n                  first_name: res.billing.first_name,\n                  last_name: res.billing.last_name,\n                  address_1: res.billing.address_1,\n                  address_2: res.billing.address_2,\n                  city: res.billing.city,\n                  state: res.billing.state,\n                  postcode: res.billing.postcode,\n                  country: res.billing.country,\n                  phone: res.billing.phone\n                };\n\n                _this.login(thisUser);\n\n                return thisUser;\n              }\n            }).catch(function (error) {});\n\n          case 10:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this);\n  }));\n\n  return function updateAccount(_x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar updateCustomer =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(id, newCustomer) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return WooCommerce.putAsync(\"customers/\".concat(id), newCustomer).then(function (response) {\n              var customer = JSON.parse(response.body);\n              return customer;\n            }).catch(function (error) {});\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, this);\n  }));\n\n  return function updateCustomer(_x6, _x7) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar getCustomerId =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(newCustomer) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return WooCommerce.getAsync(\"customers?email=\".concat(newCustomer.email)).then(function (response) {\n              if (response) {\n                if (response.body) {\n                  var user = JSON.parse(response.body);\n                  var userId = user[0].id;\n                  return updateCustomer(userId, newCustomer);\n                }\n              }\n            }).catch(function (error) {\n              return null;\n            });\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, this);\n  }));\n\n  return function getCustomerId(_x8) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar order =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(orderData) {\n    var orderReady;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            orderReady = fillOrder(orderData);\n\n            if (!orderReady) {\n              _context7.next = 5;\n              break;\n            }\n\n            _context7.next = 4;\n            return WooCommerce.postAsync(\"orders\", orderReady).then(function (res) {\n              if (res.body) {\n                var r = JSON.parse(res.body);\n                return r;\n              }\n            });\n\n          case 4:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, this);\n  }));\n\n  return function order(_x9) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar fillOrder = function fillOrder(orderData) {\n  var orderReady = {};\n  var email = orderData.email,\n      address_1 = orderData.address_1,\n      city = orderData.city,\n      country = orderData.country,\n      first_name = orderData.first_name,\n      last_name = orderData.last_name,\n      phone = orderData.phone,\n      postcode = orderData.postcode,\n      state = orderData.state,\n      cart = orderData.cart,\n      total = orderData.total;\n  var theCart = [];\n  cart.map(function (i) {\n    var product = {\n      product_id: i.id,\n      quantity: i.qty\n    };\n    return theCart.push(product);\n  });\n\n  if (last_name && first_name && email && address_1 && city && state && postcode && country && phone && cart && total) {\n    orderReady = {\n      payment_method: \"bacs\",\n      payment_method_title: \"Credit Card Payment\",\n      set_paid: \"true\",\n      billing: {\n        first_name: \"\".concat(first_name),\n        last_name: \"\".concat(last_name),\n        address_1: \"\".concat(address_1),\n        address_2: \"\",\n        city: \"\".concat(city),\n        state: \" \".concat(state),\n        postcode: \"\".concat(postcode),\n        country: \"\".concat(country),\n        email: \"\".concat(email),\n        phone: \"\".concat(phone)\n      },\n      shipping: {\n        first_name: \"\".concat(first_name),\n        last_name: \"\".concat(last_name),\n        address_1: \"\".concat(address_1),\n        address_2: \"\",\n        city: \"\".concat(city),\n        state: \"\".concat(state),\n        postcode: \"\".concat(postcode),\n        country: \"\".concat(country),\n        email: \"\".concat(email)\n      },\n      line_items: theCart,\n      shipping_lines: [{\n        method_id: \"flat_rate\",\n        method_title: \"Flat Rate\",\n        total: \"\".concat(total)\n      }]\n    };\n  }\n\n  return orderReady;\n};\n\nvar receiveLogin = function receiveLogin(data) {\n  _this.setState(function () {\n    return _objectSpread({}, {\n      user: data.user_display_name,\n      email: data.user_email\n    });\n  });\n\n  _this.fillCustomer(data.user_email); // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n\n};\n\nexport default {\n  login: login,\n  signup: signup,\n  updateAccount: updateAccount,\n  order: order\n};","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/api/user.js"],"names":["axios","wooConfig","require","WooCommerceAPI","WooCommerce","url","siteUrl","consumerKey","consumerSecret","wpAPI","version","login","user","username","password","email","post","process","env","REACT_APP_WORDPRESS","REACT_APP_JWT","then","result","status","token","data","displayName","user_display_name","user_email","filledFields","fillCustomer","res","alert","catch","e","response","message","signup","userData","address_1","city","country","first_name","last_name","phone","postcode","state","newCustomer","billing","company","address_2","shipping","address","address2","cp","body","JSON","stringify","console","log","fetch","REACT_APP_REGISTER","method","headers","error","json","code","createCustomer","receiveLogin","getCustomerId","getAsync","parse","thisUser","userId","id","updateAccount","userOldData","customer","mail","putAsync","updateCustomer","order","orderData","orderReady","fillOrder","postAsync","r","cart","total","theCart","map","i","product","product_id","quantity","qty","push","payment_method","payment_method_title","set_paid","line_items","shipping_lines","method_id","method_title","setState"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAD,CAA9B;;AAEA,IAAME,WAAW,GAAG,IAAID,cAAJ,CAAmB;AACrCE,EAAAA,GAAG,EAAEJ,SAAS,CAACK,OADsB;AAErCC,EAAAA,WAAW,EAAEN,SAAS,CAACM,WAFc;AAGrCC,EAAAA,cAAc,EAAEP,SAAS,CAACO,cAHW;AAIrCC,EAAAA,KAAK,EAAE,IAJ8B;AAKrCC,EAAAA,OAAO,EAAE;AAL4B,CAAnB,CAApB;AAQA;;;;;;;;AAQA,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,QADQ,GACGD,IAAI,CAACC,QADR,EACkB;;AAC1BC,YAAAA,QAFQ,GAEGF,IAAI,CAACE,QAFR;AAKVC,YAAAA,KALU,GAKF,IALE;AAAA;AAAA,mBAMCf,KAAK,CAChB;AADgB,aAEfgB,IAFU,CAELC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkCF,OAAO,CAACC,GAAR,CAAYE,aAFzC,EAEwD;AACjEP,cAAAA,QAAQ,EAAEA,QADuD;AAEjEC,cAAAA,QAAQ,EAAEA;AAFuD,aAFxD,EAMVO,IANU,CAML,UAACC,MAAD,EAAY;AAChB,kBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzBC,gBAAAA,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYD,KAApB;AACAE,gBAAAA,WAAW,GAAGJ,MAAM,CAACG,IAAP,CAAYE,iBAA1B;AACAZ,gBAAAA,KAAK,GAAGO,MAAM,CAACG,IAAP,CAAYG,UAApB;AACA,oBAAIC,YAAY,GAAG,IAAnB;AACA,uBAAOC,YAAY,CAACf,KAAD,CAAZ,CAAoBM,IAApB,CAAyB,UAACU,GAAD,EAAS;AACvC,sBAAIA,GAAJ,EAAS;AACPF,oBAAAA,YAAY,qBACPE,GADO;AAEVlB,sBAAAA,QAAQ,EAAEa,WAFA;AAGVX,sBAAAA,KAAK,EAAEA,KAHG;AAIVS,sBAAAA,KAAK,EAAEA;AAJG,sBAAZ;AAMD;;AACD,yBAAOK,YAAP;AACD,iBAVM,CAAP;AAWD,eAhBD,MAgBO;AACLG,gBAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,aA1BU,EA2BVC,KA3BU,CA2BJ,UAACC,CAAD,EAAO;AACZF,cAAAA,KAAK,CAACE,CAAC,CAACC,QAAF,CAAWV,IAAX,CAAgBW,OAAjB,CAAL;AACD,aA7BU,CAND;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALzB,KAAK;AAAA;AAAA;AAAA,GAAX,C,CAsCA;;;AAEA,IAAM0B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXzB,YAAAA,QAFW,GAaTyB,QAbS,CAEXzB,QAFW,EAGXE,KAHW,GAaTuB,QAbS,CAGXvB,KAHW,EAIXD,QAJW,GAaTwB,QAbS,CAIXxB,QAJW,EAKXyB,SALW,GAaTD,QAbS,CAKXC,SALW,EAMXC,IANW,GAaTF,QAbS,CAMXE,IANW,EAOXC,OAPW,GAaTH,QAbS,CAOXG,OAPW,EAQXC,UARW,GAaTJ,QAbS,CAQXI,UARW,EASXC,SATW,GAaTL,QAbS,CASXK,SATW,EAUXC,KAVW,GAaTN,QAbS,CAUXM,KAVW,EAWXC,QAXW,GAaTP,QAbS,CAWXO,QAXW,EAYXC,KAZW,GAaTR,QAbS,CAYXQ,KAZW;AAePC,YAAAA,WAfO,GAeO;AAClBhC,cAAAA,KAAK,EAAEA,KADW;AAElB2B,cAAAA,UAAU,EAAEA,UAFM;AAGlBC,cAAAA,SAAS,EAAEA,SAHO;AAIlB9B,cAAAA,QAAQ,EAAEA,QAJQ;AAKlBmC,cAAAA,OAAO,EAAE;AACPN,gBAAAA,UAAU,EAAEA,UADL;AAEPC,gBAAAA,SAAS,EAAEA,SAFJ;AAGPM,gBAAAA,OAAO,EAAE,SAHF;AAIPV,gBAAAA,SAAS,EAAEA,SAJJ;AAKPW,gBAAAA,SAAS,EAAE,EALJ;AAMPV,gBAAAA,IAAI,EAAEA,IANC;AAOPM,gBAAAA,KAAK,EAAEA,KAPA;AAQPD,gBAAAA,QAAQ,EAAEA,QARH;AASPJ,gBAAAA,OAAO,EAAE,OATF;AAUP1B,gBAAAA,KAAK,EAAEA,KAVA;AAWP6B,gBAAAA,KAAK,EAAEA;AAXA,eALS;AAkBlBO,cAAAA,QAAQ,EAAE;AACRT,gBAAAA,UAAU,EAAEA,UADJ;AAERC,gBAAAA,SAAS,EAAEA,SAFH;AAGRM,gBAAAA,OAAO,EAAE,EAHD;AAIRG,gBAAAA,OAAO,EAAEb,SAJD;AAKRc,gBAAAA,QAAQ,EAAE,EALF;AAMRb,gBAAAA,IAAI,EAAEA,IANE;AAORM,gBAAAA,KAAK,EAAEA,KAPC;AAQRQ,gBAAAA,EAAE,EAAET,QARI;AASRJ,gBAAAA,OAAO,EAAEA;AATD;AAlBQ,aAfP;AA6CPc,YAAAA,IA7CO,GA6CAC,IAAI,CAACC,SAAL,CAAe;AAC1B5C,cAAAA,QAAQ,EAAEA,QADgB;AAE1BE,cAAAA,KAAK,EAAEA,KAFmB;AAG1BD,cAAAA,QAAQ,EAAEA;AAHgB,aAAf,CA7CA;AAmDb4C,YAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAnDa,CAqDb;AACA;AACA;;AAvDa;AAAA,mBAyDAK,KAAK,CAChB3C,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkCF,OAAO,CAACC,GAAR,CAAY2C,kBAD9B,EAEhB;AACEC,cAAAA,MAAM,EAAE,MADV;AAEEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFX;AAKER,cAAAA,IAAI,EAAEA;AALR,aAFgB,CAAL,CAUVtB,KAVU,CAUJ,UAAC+B,KAAD,EAAW;AAChBN,cAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAAC7B,QAAN,CAAeoB,IAA3B;AACD,aAZU,EAaVlC,IAbU,CAaL,UAASU,GAAT,EAAc;AAClB,qBAAOA,GAAG,CAACkC,IAAJ,EAAP;AACD,aAfU,EAgBV5C,IAhBU,CAgBL,UAASU,GAAT,EAAc;AAClB,kBAAIA,GAAG,CAACK,OAAR,EAAiB;AACf;AACA,oBAAIL,GAAG,CAACmC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,yBAAOC,cAAc,CAACpB,WAAD,EAAchC,KAAd,CAAd,CAAmCM,IAAnC,CAAwC,UAACU,GAAD,EAAS;AACtD,2BAAOO,QAAP;AACD,mBAFM,CAAP;AAGD,iBAJD,MAIO,OAAO,IAAP;AACR;AACF,aAzBU,CAzDA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAND,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAqFA,IAAM8B,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,WAAD,EAAchC,KAAd,EAAwB;AAC7C,MAAI,CAACA,KAAL,EAAY;AACV,QAAMU,IAAI,GAAG;AACXE,MAAAA,iBAAiB,EAAEoB,WAAW,CAAClC,QADpB;AAEXe,MAAAA,UAAU,EAAEmB,WAAW,CAAChC;AAFb,KAAb;AAIAqD,IAAAA,YAAY,CAAC3C,IAAD,CAAZ,CAAmBJ,IAAnB,CAAwB,UAACU,GAAD,EAAS;AAC/B,aAAOA,GAAP;AACD,KAFD;AAGD;;AACD,SAAOsC,aAAa,CAACtB,WAAD,CAApB;AACD,CAXD;;AAaA,IAAMjB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOf,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNX,WAAW,CAACkE,QAAZ,2BAAwCvD,KAAxC,GACVM,IADU,CACL,UAACc,QAAD,EAAc;AAClB,kBAAIA,QAAJ,EAAc;AACZ,oBAAIA,QAAQ,CAACoB,IAAb,EAAmB;AACjB,sBAAMxB,GAAG,GAAGyB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAZ;AACA,sBAAM3C,IAAI,GAAGmB,GAAG,CAAC,CAAD,CAAhB;AACA,sBAAIyC,QAAQ,GAAG;AACbC,oBAAAA,MAAM,EAAE7D,IAAI,CAAC8D,EADA;AAEbzB,oBAAAA,OAAO,EAAErC,IAAI,CAACoC,OAAL,CAAaC,OAFT;AAGbP,oBAAAA,UAAU,EAAE9B,IAAI,CAACoC,OAAL,CAAaN,UAHZ;AAIbC,oBAAAA,SAAS,EAAE/B,IAAI,CAACoC,OAAL,CAAaL,SAJX;AAKbJ,oBAAAA,SAAS,EAAE3B,IAAI,CAACoC,OAAL,CAAaT,SALX;AAMbW,oBAAAA,SAAS,EAAEtC,IAAI,CAACoC,OAAL,CAAaE,SANX;AAObV,oBAAAA,IAAI,EAAE5B,IAAI,CAACoC,OAAL,CAAaR,IAPN;AAQbM,oBAAAA,KAAK,EAAElC,IAAI,CAACoC,OAAL,CAAaF,KARP;AASbD,oBAAAA,QAAQ,EAAEjC,IAAI,CAACoC,OAAL,CAAaH,QATV;AAUbJ,oBAAAA,OAAO,EAAE7B,IAAI,CAACoC,OAAL,CAAaP,OAVT;AAWbG,oBAAAA,KAAK,EAAEhC,IAAI,CAACoC,OAAL,CAAaJ;AAXP,mBAAf;AAaA,yBAAO4B,QAAP;AACD;AACF;AACF,aAtBU,EAuBVvC,KAvBU,CAuBJ,UAAC+B,KAAD,EAAW;AAChBN,cAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,aAzBU,CADM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZlC,YAAY;AAAA;AAAA;AAAA,GAAlB;;AA6BA,IAAM6C,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOrC,QAAP,EAAiBsC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACA;AAEEF,YAAAA,EAJkB,GAehBpC,QAfgB,CAIlBoC,EAJkB,EAKlB7D,QALkB,GAehByB,QAfgB,CAKlBzB,QALkB,EAMlBE,KANkB,GAehBuB,QAfgB,CAMlBvB,KANkB,EAOlBwB,SAPkB,GAehBD,QAfgB,CAOlBC,SAPkB,EAQlBC,IARkB,GAehBF,QAfgB,CAQlBE,IARkB,EASlBC,OATkB,GAehBH,QAfgB,CASlBG,OATkB,EAUlBC,UAVkB,GAehBJ,QAfgB,CAUlBI,UAVkB,EAWlBC,SAXkB,GAehBL,QAfgB,CAWlBK,SAXkB,EAYlBC,KAZkB,GAehBN,QAfgB,CAYlBM,KAZkB,EAalBC,QAbkB,GAehBP,QAfgB,CAalBO,QAbkB,EAclBC,KAdkB,GAehBR,QAfgB,CAclBQ,KAdkB;AAiBhBlC,YAAAA,IAjBgB,GAiBT,IAjBS;;AAkBpB,gBAAIC,QAAQ,KAAK+D,WAAW,CAAC/D,QAAzB,IAAqCE,KAAK,KAAK6D,WAAW,CAAC7D,KAA/D,EAAsE;AACpEH,cAAAA,IAAI,GAAG;AACLC,gBAAAA,QAAQ,EAAEA,QADL;AAELE,gBAAAA,KAAK,EAAEA;AAFF,eAAP;AAID,aALD,MAKO;AACD8D,cAAAA,QADC,GACU,IADV;;AAEL,kBAAID,WAAJ,EAAiB;AACfC,gBAAAA,QAAQ,GAAG;AACT9D,kBAAAA,KAAK,EAAEA,KADE;AAET2B,kBAAAA,UAAU,EAAEA,UAFH;AAGTC,kBAAAA,SAAS,EAAEA,SAHF;AAIT9B,kBAAAA,QAAQ,EAAEA,QAJD;AAKTmC,kBAAAA,OAAO,EAAE;AACPN,oBAAAA,UAAU,EAAEA,UADL;AAEPC,oBAAAA,SAAS,EAAEA,SAFJ;AAGPM,oBAAAA,OAAO,EAAE,SAHF;AAIPV,oBAAAA,SAAS,EAAEA,SAJJ;AAKPW,oBAAAA,SAAS,EAAE,EALJ;AAMPV,oBAAAA,IAAI,EAAEA,IANC;AAOPM,oBAAAA,KAAK,EAAEA,KAPA;AAQPD,oBAAAA,QAAQ,EAAEA,QARH;AASPJ,oBAAAA,OAAO,EAAE,OATF;AAUP1B,oBAAAA,KAAK,EAAEA,KAVA;AAWP6B,oBAAAA,KAAK,EAAEA;AAXA,mBALA;AAkBTO,kBAAAA,QAAQ,EAAE;AACRT,oBAAAA,UAAU,EAAEA,UADJ;AAERC,oBAAAA,SAAS,EAAEA,SAFH;AAGRM,oBAAAA,OAAO,EAAE,EAHD;AAIRG,oBAAAA,OAAO,EAAEb,SAJD;AAKRc,oBAAAA,QAAQ,EAAE,EALF;AAMRb,oBAAAA,IAAI,EAAEA,IANE;AAORM,oBAAAA,KAAK,EAAEA,KAPC;AAQRQ,oBAAAA,EAAE,EAAET,QARI;AASRJ,oBAAAA,OAAO,EAAEA;AATD;AAlBD,iBAAX;AA8BD;AACF;;AAzDmB,iBA2DhB7B,IA3DgB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA4DLZ,KAAK,CACfgB,IADU,CACLC,OAAO,CAACC,GAAR,CAAYC,mBADP,oBAC0CuD,EAD1C,GACgD;AACzD7D,cAAAA,QAAQ,EAAED,IAAI,CAACC,QAD0C;AAEzDiE,cAAAA,IAAI,EAAElE,IAAI,CAACG;AAF8C,aADhD,EAKVM,IALU,CAKL,UAACC,MAAD,EAAY;AAChB,kBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACzB,oBAAIiD,QAAQ,GAAG;AACbC,kBAAAA,MAAM,EAAE7D,IAAI,CAAC8D,EADA;AAEb7D,kBAAAA,QAAQ,EAAED,IAAI,CAACC,QAFF;AAGbiE,kBAAAA,IAAI,EAAElE,IAAI,CAACG,KAHE;AAIbkC,kBAAAA,OAAO,EAAE2B,WAAW,CAAC3B,OAJR;AAKbP,kBAAAA,UAAU,EAAEkC,WAAW,CAAClC,UALX;AAMbC,kBAAAA,SAAS,EAAEiC,WAAW,CAACjC,SANV;AAObJ,kBAAAA,SAAS,EAAEqC,WAAW,CAACrC,SAPV;AAQbW,kBAAAA,SAAS,EAAE0B,WAAW,CAAC1B,SARV;AASbV,kBAAAA,IAAI,EAAEoC,WAAW,CAACpC,IATL;AAUbM,kBAAAA,KAAK,EAAE8B,WAAW,CAAC9B,KAVN;AAWbD,kBAAAA,QAAQ,EAAE+B,WAAW,CAAC/B,QAXT;AAYbJ,kBAAAA,OAAO,EAAEmC,WAAW,CAACnC,OAZR;AAabG,kBAAAA,KAAK,EAAEgC,WAAW,CAAChC;AAbN,iBAAf;;AAeA,gBAAA,KAAI,CAACjC,KAAL,CAAW6D,QAAX;;AACA,uBAAOA,QAAP;AACD,eAlBD,MAkBO;AACLxC,gBAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF,aA3BU,EA4BVC,KA5BU,CA4BJ,UAACC,CAAD,EAAO;AACZwB,cAAAA,OAAO,CAACC,GAAR,CAAYzB,CAAC,CAACC,QAAF,CAAWoB,IAAX,CAAgBnB,OAA5B;AACAJ,cAAAA,KAAK,CAACE,CAAC,CAACC,QAAF,CAAWoB,IAAX,CAAgBnB,OAAjB,CAAL;AACD,aA/BU,CA5DK;;AAAA;AAAA;;AAAA;AAAA,iBA8FhByC,QA9FgB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA+FLzE,WAAW,CAAC2E,QAAZ,qBAAkCL,EAAlC,GAAwCG,QAAxC,EACVxD,IADU,CACL,UAACc,QAAD,EAAc;AAClB,kBAAIA,QAAQ,CAACoB,IAAb,EAAmB;AACjB,oBAAMxB,GAAG,GAAGyB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAZ;AAEA,oBAAIiB,QAAQ,GAAG;AACb3D,kBAAAA,QAAQ,EAAE+D,WAAW,CAAC/D,QADT;AAEbE,kBAAAA,KAAK,EAAE6D,WAAW,CAAC7D,KAFN;AAGb0D,kBAAAA,MAAM,EAAE1C,GAAG,CAAC2C,EAHC;AAIbzB,kBAAAA,OAAO,EAAElB,GAAG,CAACiB,OAAJ,CAAYC,OAJR;AAKbP,kBAAAA,UAAU,EAAEX,GAAG,CAACiB,OAAJ,CAAYN,UALX;AAMbC,kBAAAA,SAAS,EAAEZ,GAAG,CAACiB,OAAJ,CAAYL,SANV;AAObJ,kBAAAA,SAAS,EAAER,GAAG,CAACiB,OAAJ,CAAYT,SAPV;AAQbW,kBAAAA,SAAS,EAAEnB,GAAG,CAACiB,OAAJ,CAAYE,SARV;AASbV,kBAAAA,IAAI,EAAET,GAAG,CAACiB,OAAJ,CAAYR,IATL;AAUbM,kBAAAA,KAAK,EAAEf,GAAG,CAACiB,OAAJ,CAAYF,KAVN;AAWbD,kBAAAA,QAAQ,EAAEd,GAAG,CAACiB,OAAJ,CAAYH,QAXT;AAYbJ,kBAAAA,OAAO,EAAEV,GAAG,CAACiB,OAAJ,CAAYP,OAZR;AAabG,kBAAAA,KAAK,EAAEb,GAAG,CAACiB,OAAJ,CAAYJ;AAbN,iBAAf;;AAeA,gBAAA,KAAI,CAACjC,KAAL,CAAW6D,QAAX;;AAEA,uBAAOA,QAAP;AACD;AACF,aAxBU,EAyBVvC,KAzBU,CAyBJ,UAAC+B,KAAD,EAAW,CAAE,CAzBT,CA/FK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbW,aAAa;AAAA;AAAA;AAAA,GAAnB;;AA4HA,IAAMK,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAON,EAAP,EAAW3B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR3C,WAAW,CAAC2E,QAAZ,qBAAkCL,EAAlC,GAAwC3B,WAAxC,EACV1B,IADU,CACL,UAACc,QAAD,EAAc;AAClB,kBAAM0C,QAAQ,GAAGrB,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAjB;AACA,qBAAOsB,QAAP;AACD,aAJU,EAKV5C,KALU,CAKJ,UAAC+B,KAAD,EAAW,CAAE,CALT,CADQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdgB,cAAc;AAAA;AAAA;AAAA,GAApB;;AASA,IAAMX,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOtB,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP3C,WAAW,CAACkE,QAAZ,2BAAwCvB,WAAW,CAAChC,KAApD,GACVM,IADU,CACL,UAACc,QAAD,EAAc;AAClB,kBAAIA,QAAJ,EAAc;AACZ,oBAAIA,QAAQ,CAACoB,IAAb,EAAmB;AACjB,sBAAM3C,IAAI,GAAG4C,IAAI,CAACe,KAAL,CAAWpC,QAAQ,CAACoB,IAApB,CAAb;AACA,sBAAMkB,MAAM,GAAG7D,IAAI,CAAC,CAAD,CAAJ,CAAQ8D,EAAvB;AACA,yBAAOM,cAAc,CAACP,MAAD,EAAS1B,WAAT,CAArB;AACD;AACF;AACF,aATU,EAUVd,KAVU,CAUJ,UAAC+B,KAAD,EAAW;AAChB,qBAAO,IAAP;AACD,aAZU,CADO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbK,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAgBA,IAAMY,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,YAAAA,UADM,GACOC,SAAS,CAACF,SAAD,CADhB;;AAAA,iBAERC,UAFQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGG/E,WAAW,CAACiF,SAAZ,CAAsB,QAAtB,EAAgCF,UAAhC,EAA4C9D,IAA5C,CAAiD,UAACU,GAAD,EAAS;AACrE,kBAAIA,GAAG,CAACwB,IAAR,EAAc;AACZ,oBAAM+B,CAAC,GAAG9B,IAAI,CAACe,KAAL,CAAWxC,GAAG,CAACwB,IAAf,CAAV;AACA,uBAAO+B,CAAP;AACD;AACF,aALY,CAHH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALL,KAAK;AAAA;AAAA;AAAA,GAAX;;AAYA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACF,SAAD,EAAe;AAC/B,MAAIC,UAAU,GAAG,EAAjB;AAD+B,MAG7BpE,KAH6B,GAc3BmE,SAd2B,CAG7BnE,KAH6B;AAAA,MAI7BwB,SAJ6B,GAc3B2C,SAd2B,CAI7B3C,SAJ6B;AAAA,MAK7BC,IAL6B,GAc3B0C,SAd2B,CAK7B1C,IAL6B;AAAA,MAM7BC,OAN6B,GAc3ByC,SAd2B,CAM7BzC,OAN6B;AAAA,MAO7BC,UAP6B,GAc3BwC,SAd2B,CAO7BxC,UAP6B;AAAA,MAQ7BC,SAR6B,GAc3BuC,SAd2B,CAQ7BvC,SAR6B;AAAA,MAS7BC,KAT6B,GAc3BsC,SAd2B,CAS7BtC,KAT6B;AAAA,MAU7BC,QAV6B,GAc3BqC,SAd2B,CAU7BrC,QAV6B;AAAA,MAW7BC,KAX6B,GAc3BoC,SAd2B,CAW7BpC,KAX6B;AAAA,MAY7ByC,IAZ6B,GAc3BL,SAd2B,CAY7BK,IAZ6B;AAAA,MAa7BC,KAb6B,GAc3BN,SAd2B,CAa7BM,KAb6B;AAe/B,MAAIC,OAAO,GAAG,EAAd;AACAF,EAAAA,IAAI,CAACG,GAAL,CAAS,UAACC,CAAD,EAAO;AACd,QAAMC,OAAO,GAAG;AACdC,MAAAA,UAAU,EAAEF,CAAC,CAACjB,EADA;AAEdoB,MAAAA,QAAQ,EAAEH,CAAC,CAACI;AAFE,KAAhB;AAIA,WAAON,OAAO,CAACO,IAAR,CAAaJ,OAAb,CAAP;AACD,GAND;;AAQA,MACEjD,SAAS,IACTD,UADA,IAEA3B,KAFA,IAGAwB,SAHA,IAIAC,IAJA,IAKAM,KALA,IAMAD,QANA,IAOAJ,OAPA,IAQAG,KARA,IASA2C,IATA,IAUAC,KAXF,EAYE;AACAL,IAAAA,UAAU,GAAG;AACXc,MAAAA,cAAc,EAAE,MADL;AAEXC,MAAAA,oBAAoB,EAAE,qBAFX;AAGXC,MAAAA,QAAQ,EAAE,MAHC;AAIXnD,MAAAA,OAAO,EAAE;AACPN,QAAAA,UAAU,YAAKA,UAAL,CADH;AAEPC,QAAAA,SAAS,YAAKA,SAAL,CAFF;AAGPJ,QAAAA,SAAS,YAAKA,SAAL,CAHF;AAIPW,QAAAA,SAAS,IAJF;AAKPV,QAAAA,IAAI,YAAKA,IAAL,CALG;AAMPM,QAAAA,KAAK,aAAMA,KAAN,CANE;AAOPD,QAAAA,QAAQ,YAAKA,QAAL,CAPD;AAQPJ,QAAAA,OAAO,YAAKA,OAAL,CARA;AASP1B,QAAAA,KAAK,YAAKA,KAAL,CATE;AAUP6B,QAAAA,KAAK,YAAKA,KAAL;AAVE,OAJE;AAgBXO,MAAAA,QAAQ,EAAE;AACRT,QAAAA,UAAU,YAAKA,UAAL,CADF;AAERC,QAAAA,SAAS,YAAKA,SAAL,CAFD;AAGRJ,QAAAA,SAAS,YAAKA,SAAL,CAHD;AAIRW,QAAAA,SAAS,IAJD;AAKRV,QAAAA,IAAI,YAAKA,IAAL,CALI;AAMRM,QAAAA,KAAK,YAAKA,KAAL,CANG;AAORD,QAAAA,QAAQ,YAAKA,QAAL,CAPA;AAQRJ,QAAAA,OAAO,YAAKA,OAAL,CARC;AASR1B,QAAAA,KAAK,YAAKA,KAAL;AATG,OAhBC;AA2BXqF,MAAAA,UAAU,EAAEX,OA3BD;AA4BXY,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,SAAS,EAAE,WADb;AAEEC,QAAAA,YAAY,EAAE,WAFhB;AAGEf,QAAAA,KAAK,YAAKA,KAAL;AAHP,OADc;AA5BL,KAAb;AAoCD;;AACD,SAAOL,UAAP;AACD,CA3ED;;AA6EA,IAAMf,YAAY,GAAG,SAAfA,YAAe,CAAC3C,IAAD,EAAU;AAC7B,EAAA,KAAI,CAAC+E,QAAL,CAAc,YAAM;AAClB,6BACK;AACD5F,MAAAA,IAAI,EAAEa,IAAI,CAACE,iBADV;AAEDZ,MAAAA,KAAK,EAAEU,IAAI,CAACG;AAFX,KADL;AAMD,GAPD;;AAQA,EAAA,KAAI,CAACE,YAAL,CAAkBL,IAAI,CAACG,UAAvB,EAT6B,CAU7B;AACA;;AACD,CAZD;;AAcA,eAAe;AAAEjB,EAAAA,KAAK,EAALA,KAAF;AAAS0B,EAAAA,MAAM,EAANA,MAAT;AAAiBsC,EAAAA,aAAa,EAAbA,aAAjB;AAAgCM,EAAAA,KAAK,EAALA;AAAhC,CAAf","sourcesContent":["import axios from \"axios\";\nconst wooConfig = require(\"./wooConfig\");\nconst WooCommerceAPI = require(\"woocommerce-api\");\n\nconst WooCommerce = new WooCommerceAPI({\n  url: wooConfig.siteUrl,\n  consumerKey: wooConfig.consumerKey,\n  consumerSecret: wooConfig.consumerSecret,\n  wpAPI: true,\n  version: \"wc/v3\",\n});\n\n/**\n * Signup Flow\n *  1-Create user : Creates an authenticated Wordpress Account with password\n *  2-Create user in woocommerce -> createCustomer(newcustomer)\n *  3-receiveLogin(data{user,email}) -> fillCustomer(mail)\n *  4-getCustomerId(newCustomer) -> updateCustomer(userId, newCustomer)\n */\n\nconst login = async (user) => {\n  var username = user.username; //this is the nice_name\n  var password = user.password;\n  var token,\n    displayName,\n    email = null;\n  return await axios\n    // .post(\"https://grassrootemarket.com/wp-json/jwt-auth/v1/token\", {\n    .post(process.env.REACT_APP_WORDPRESS + process.env.REACT_APP_JWT, {\n      username: username,\n      password: password,\n    })\n    .then((result) => {\n      if (result.status === 200) {\n        token = result.data.token;\n        displayName = result.data.user_display_name;\n        email = result.data.user_email;\n        var filledFields = null;\n        return fillCustomer(email).then((res) => {\n          if (res) {\n            filledFields = {\n              ...res,\n              username: displayName,\n              email: email,\n              token: token,\n            };\n          }\n          return filledFields;\n        });\n      } else {\n        alert(\"error\");\n      }\n    })\n    .catch((e) => {\n      alert(e.response.data.message);\n    });\n};\n\n//var data = [user, shipping];\n\nconst signup = async (userData) => {\n  const {\n    username,\n    email,\n    password,\n    address_1,\n    city,\n    country,\n    first_name,\n    last_name,\n    phone,\n    postcode,\n    state,\n  } = userData;\n\n  const newCustomer = {\n    email: email,\n    first_name: first_name,\n    last_name: last_name,\n    username: username,\n    billing: {\n      first_name: first_name,\n      last_name: last_name,\n      company: \"company\",\n      address_1: address_1,\n      address_2: \"\",\n      city: city,\n      state: state,\n      postcode: postcode,\n      country: \"Spain\",\n      email: email,\n      phone: phone,\n    },\n    shipping: {\n      first_name: first_name,\n      last_name: last_name,\n      company: \"\",\n      address: address_1,\n      address2: \"\",\n      city: city,\n      state: state,\n      cp: postcode,\n      country: country,\n    },\n  };\n  const body = JSON.stringify({\n    username: username,\n    email: email,\n    password: password,\n  });\n\n  console.log(body);\n\n  // After filling the vlaue fields,the function will proceed to create\n  // first the wordpress user.\n  //return await fetch(targetUrl + urlRegister, {\n\n  return await fetch(\n    process.env.REACT_APP_WORDPRESS + process.env.REACT_APP_REGISTER,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }\n  )\n    .catch((error) => {\n      console.log(error.response.body);\n    })\n    .then(function(res) {\n      return res.json();\n    })\n    .then(function(res) {\n      if (res.message) {\n        //  alert(res.message);\n        if (res.code === 200) {\n          return createCustomer(newCustomer, email).then((res) => {\n            return userData;\n          });\n        } else return null;\n      }\n    });\n};\n\nconst createCustomer = (newCustomer, email) => {\n  if (!email) {\n    const data = {\n      user_display_name: newCustomer.username,\n      user_email: newCustomer.email,\n    };\n    receiveLogin(data).then((res) => {\n      return res;\n    });\n  }\n  return getCustomerId(newCustomer);\n};\n\nconst fillCustomer = async (email) => {\n  return await WooCommerce.getAsync(`customers?email=${email}`)\n    .then((response) => {\n      if (response) {\n        if (response.body) {\n          const res = JSON.parse(response.body);\n          const user = res[0];\n          var thisUser = {\n            userId: user.id,\n            company: user.billing.company,\n            first_name: user.billing.first_name,\n            last_name: user.billing.last_name,\n            address_1: user.billing.address_1,\n            address_2: user.billing.address_2,\n            city: user.billing.city,\n            state: user.billing.state,\n            postcode: user.billing.postcode,\n            country: user.billing.country,\n            phone: user.billing.phone,\n          };\n          return thisUser;\n        }\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nconst updateAccount = async (userData, userOldData) => {\n  // First will check if user values must be modified : name /mail\n  // Check\n  const {\n    id,\n    username,\n    email,\n    address_1,\n    city,\n    country,\n    first_name,\n    last_name,\n    phone,\n    postcode,\n    state,\n  } = userData;\n\n  var user = null;\n  if (username !== userOldData.username || email !== userOldData.email) {\n    user = {\n      username: username,\n      email: email,\n    };\n  } else {\n    var customer = null;\n    if (userOldData) {\n      customer = {\n        email: email,\n        first_name: first_name,\n        last_name: last_name,\n        username: username,\n        billing: {\n          first_name: first_name,\n          last_name: last_name,\n          company: \"company\",\n          address_1: address_1,\n          address_2: \"\",\n          city: city,\n          state: state,\n          postcode: postcode,\n          country: \"Spain\",\n          email: email,\n          phone: phone,\n        },\n        shipping: {\n          first_name: first_name,\n          last_name: last_name,\n          company: \"\",\n          address: address_1,\n          address2: \"\",\n          city: city,\n          state: state,\n          cp: postcode,\n          country: country,\n        },\n      };\n    }\n  }\n\n  if (user) {\n    return await axios\n      .post(process.env.REACT_APP_WORDPRESS`/wp/v2/users/${id}`, {\n        username: user.username,\n        mail: user.email,\n      })\n      .then((result) => {\n        if (result.status === 200) {\n          var thisUser = {\n            userId: user.id,\n            username: user.username,\n            mail: user.email,\n            company: userOldData.company,\n            first_name: userOldData.first_name,\n            last_name: userOldData.last_name,\n            address_1: userOldData.address_1,\n            address_2: userOldData.address_2,\n            city: userOldData.city,\n            state: userOldData.state,\n            postcode: userOldData.postcode,\n            country: userOldData.country,\n            phone: userOldData.phone,\n          };\n          this.login(thisUser);\n          return thisUser;\n        } else {\n          alert(\"error\");\n        }\n      })\n      .catch((e) => {\n        console.log(e.response.body.message);\n        alert(e.response.body.message);\n      });\n  }\n\n  if (customer) {\n    return await WooCommerce.putAsync(`customers/${id}`, customer)\n      .then((response) => {\n        if (response.body) {\n          const res = JSON.parse(response.body);\n\n          var thisUser = {\n            username: userOldData.username,\n            email: userOldData.email,\n            userId: res.id,\n            company: res.billing.company,\n            first_name: res.billing.first_name,\n            last_name: res.billing.last_name,\n            address_1: res.billing.address_1,\n            address_2: res.billing.address_2,\n            city: res.billing.city,\n            state: res.billing.state,\n            postcode: res.billing.postcode,\n            country: res.billing.country,\n            phone: res.billing.phone,\n          };\n          this.login(thisUser);\n\n          return thisUser;\n        }\n      })\n      .catch((error) => {});\n  }\n};\n\nconst updateCustomer = async (id, newCustomer) => {\n  return await WooCommerce.putAsync(`customers/${id}`, newCustomer)\n    .then((response) => {\n      const customer = JSON.parse(response.body);\n      return customer;\n    })\n    .catch((error) => {});\n};\n\nconst getCustomerId = async (newCustomer) => {\n  return await WooCommerce.getAsync(`customers?email=${newCustomer.email}`)\n    .then((response) => {\n      if (response) {\n        if (response.body) {\n          const user = JSON.parse(response.body);\n          const userId = user[0].id;\n          return updateCustomer(userId, newCustomer);\n        }\n      }\n    })\n    .catch((error) => {\n      return null;\n    });\n};\n\nconst order = async (orderData) => {\n  const orderReady = fillOrder(orderData);\n  if (orderReady) {\n    return await WooCommerce.postAsync(\"orders\", orderReady).then((res) => {\n      if (res.body) {\n        const r = JSON.parse(res.body);\n        return r;\n      }\n    });\n  }\n};\n\nconst fillOrder = (orderData) => {\n  var orderReady = {};\n  const {\n    email,\n    address_1,\n    city,\n    country,\n    first_name,\n    last_name,\n    phone,\n    postcode,\n    state,\n    cart,\n    total,\n  } = orderData;\n  var theCart = [];\n  cart.map((i) => {\n    const product = {\n      product_id: i.id,\n      quantity: i.qty,\n    };\n    return theCart.push(product);\n  });\n\n  if (\n    last_name &&\n    first_name &&\n    email &&\n    address_1 &&\n    city &&\n    state &&\n    postcode &&\n    country &&\n    phone &&\n    cart &&\n    total\n  ) {\n    orderReady = {\n      payment_method: \"bacs\",\n      payment_method_title: \"Credit Card Payment\",\n      set_paid: \"true\",\n      billing: {\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n        address_1: `${address_1}`,\n        address_2: ``,\n        city: `${city}`,\n        state: ` ${state}`,\n        postcode: `${postcode}`,\n        country: `${country}`,\n        email: `${email}`,\n        phone: `${phone}`,\n      },\n      shipping: {\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n        address_1: `${address_1}`,\n        address_2: ``,\n        city: `${city}`,\n        state: `${state}`,\n        postcode: `${postcode}`,\n        country: `${country}`,\n        email: `${email}`,\n      },\n      line_items: theCart,\n      shipping_lines: [\n        {\n          method_id: \"flat_rate\",\n          method_title: \"Flat Rate\",\n          total: `${total}`,\n        },\n      ],\n    };\n  }\n  return orderReady;\n};\n\nconst receiveLogin = (data) => {\n  this.setState(() => {\n    return {\n      ...{\n        user: data.user_display_name,\n        email: data.user_email,\n      },\n    };\n  });\n  this.fillCustomer(data.user_email);\n  // Also must to retrieve from wooApi the rest of information\n  // about the logged user and populate its state\n};\n\nexport default { login, signup, updateAccount, order };\n"]},"metadata":{},"sourceType":"module"}