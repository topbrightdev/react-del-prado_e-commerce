{"ast":null,"code":"import _objectSpread from \"/home/jarri/Desktop/projects/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_CATEGORYTREE, RECEIVE_CATEGORYTREE } from \"../constants/ActionTypes\";\nvar initialState = {\n  categoryTree: [],\n  category: []\n};\n\nvar categoryTreeReducer = function categoryTreeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_CATEGORYTREE:\n      return _objectSpread({}, state, {\n        categoryTree: action.categoryTree\n      });\n\n    case FETCH_CATEGORYTREE:\n      if (state.categoryTree.findIndex(function (category) {\n        if (category.id !== -1) {\n          var singleCategory = state.categoryTree.reduce(function (categoryTree) {\n            return categoryTree;\n          }, []);\n          return _objectSpread({}, state, {\n            category: singleCategory\n          });\n        } else return null;\n      })) ;\n      break;\n\n    default:\n      return state;\n  }\n};\n\nexport default categoryTreeReducer;","map":{"version":3,"sources":["/home/jarri/Desktop/projects/store/frontEnd/src/reducers/categoryTree.js"],"names":["FETCH_CATEGORYTREE","RECEIVE_CATEGORYTREE","initialState","categoryTree","category","categoryTreeReducer","state","action","type","findIndex","id","singleCategory","reduce"],"mappings":";AAAA,SACEA,kBADF,EAEEC,oBAFF,QAGO,0BAHP;AAKA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,oBAAL;AACE,+BACKK,KADL;AAEEH,QAAAA,YAAY,EAAEI,MAAM,CAACJ;AAFvB;;AAKF,SAAKH,kBAAL;AACE,UACEM,KAAK,CAACH,YAAN,CAAmBM,SAAnB,CAA6B,UAACL,QAAD,EAAc;AACzC,YAAIA,QAAQ,CAACM,EAAT,KAAgB,CAAC,CAArB,EAAwB;AACtB,cAAMC,cAAc,GAAGL,KAAK,CAACH,YAAN,CAAmBS,MAAnB,CAA0B,UAACT,YAAD,EAAkB;AACjE,mBAAOA,YAAP;AACD,WAFsB,EAEpB,EAFoB,CAAvB;AAGA,mCACKG,KADL;AAEEF,YAAAA,QAAQ,EAAEO;AAFZ;AAID,SARD,MAQO,OAAO,IAAP;AACR,OAVD,CADF,EAYC;AACD;;AAEF;AACE,aAAOL,KAAP;AAxBJ;AA0BD,CA3BD;;AA4BA,eAAeD,mBAAf","sourcesContent":["import {\r\n  FETCH_CATEGORYTREE,\r\n  RECEIVE_CATEGORYTREE,\r\n} from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n  categoryTree: [],\r\n  category: [],\r\n};\r\n\r\nconst categoryTreeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_CATEGORYTREE:\r\n      return {\r\n        ...state,\r\n        categoryTree: action.categoryTree,\r\n      };\r\n\r\n    case FETCH_CATEGORYTREE:\r\n      if (\r\n        state.categoryTree.findIndex((category) => {\r\n          if (category.id !== -1) {\r\n            const singleCategory = state.categoryTree.reduce((categoryTree) => {\r\n              return categoryTree;\r\n            }, []);\r\n            return {\r\n              ...state,\r\n              category: singleCategory,\r\n            };\r\n          } else return null;\r\n        })\r\n      );\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default categoryTreeReducer;\r\n"]},"metadata":{},"sourceType":"module"}