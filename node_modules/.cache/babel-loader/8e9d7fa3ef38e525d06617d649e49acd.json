{"ast":null,"code":"import _classCallCheck from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/breadcrumb.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslate } from \"react-redux-multilingual\";\nvar tree = [];\nvar done = null;\n\nvar Breadcrumb =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Breadcrumb, _Component);\n\n  function Breadcrumb(props) {\n    var _this;\n\n    _classCallCheck(this, Breadcrumb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Breadcrumb).call(this, props));\n\n    _this.build = function (title, data) {\n      var oldTree = [];\n      oldTree = _this.state.tree;\n\n      if (data !== _this.state.data) {\n        if (true) {\n          var categoryList = _this.props.data.state.data2.categoryTree;\n          tree = [];\n          var item = categoryList.find(function (c) {\n            return c.name === title;\n          });\n          tree.push(item);\n\n          _this.hasParent(item, categoryList);\n\n          var length = tree.length;\n          var l = length - 1;\n\n          if (!done) {\n            _this.hasParent(tree[l], categoryList);\n          }\n\n          length = tree.length;\n          l = length - 1;\n\n          if (!done) {\n            _this.hasParent(tree[l], categoryList);\n          }\n\n          length = tree.length;\n          l = length - 1;\n\n          if (!done) {\n            _this.hasParent(tree[l], categoryList);\n          }\n        }\n\n        if (done) {\n          done = null;\n\n          if (oldTree !== tree) {\n            _this.setState(function () {\n              var treeReversed = tree.reverse();\n              return {\n                tree: treeReversed,\n                newTree: \"true\"\n              };\n            });\n          }\n        }\n      }\n    };\n\n    _this.newTo = function (key) {\n      return {\n        pathname: \"\".concat(process.env.PUBLIC_URL, \"/no-sidebar/collection/\"),\n        category: key\n      };\n    };\n\n    _this.collectionLink = function (name, i) {\n      if (name !== \"\") {\n        return React.createElement(Link, {\n          key: i,\n          to: _this.newTo(name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, name);\n      }\n    };\n\n    _this.state = {\n      title: null,\n      parent: null,\n      data: null,\n      tree: null,\n      newTree: null\n    };\n    return _this;\n  }\n\n  _createClass(Breadcrumb, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props) {\n        var _this$props = this.props,\n            title = _this$props.title,\n            parent = _this$props.parent,\n            data = _this$props.data;\n\n        if (data !== this.state.data || title !== this.state.title) {\n          this.setState(function () {\n            return {\n              title: title,\n              parent: parent,\n              data: data\n            };\n          });\n\n          if (data) {\n            this.build(title, data);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props) {\n        var _this$props2 = this.props,\n            title = _this$props2.title,\n            parent = _this$props2.parent,\n            data = _this$props2.data;\n\n        if (data !== this.state.data || title !== this.state.title) {\n          this.setState(function () {\n            return {\n              title: title,\n              parent: parent,\n              data: data\n            };\n          });\n\n          if (data) {\n            this.build(title, data);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"hasParent\",\n    value: function hasParent(category, categoryList) {\n      if (category !== undefined) {\n        if (category.id) {\n          var parent = categoryList.find(function (c) {\n            return c.id === category.parent;\n          });\n\n          if (parent) {\n            if (parent.id) {\n              tree.push(parent);\n\n              if (parent.id === 19) {\n                done = \"true\";\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var translate = this.props.translate;\n\n      if (this.state.tree) {\n        return React.createElement(\"div\", {\n          className: \"breadcrumb-section\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"page-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          \"aria-label\": \"breadcrumb\",\n          className: \"theme-breadcrumb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"ol\", {\n          className: \"breadcrumb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"breadcrumb-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(process.env.PUBLIC_URL),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, translate(\"home\"))), this.state.tree.map(function (c, i) {\n          return React.createElement(\"li\", {\n            key: i,\n            className: \"breadcrumb-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, _this2.collectionLink(c.name, i));\n        })))))));\n      } else return null;\n    }\n  }]);\n\n  return Breadcrumb;\n}(Component);\n\nexport default withTranslate(Breadcrumb);","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/breadcrumb.jsx"],"names":["React","Component","Link","withTranslate","tree","done","Breadcrumb","props","build","title","data","oldTree","state","categoryList","data2","categoryTree","item","find","c","name","push","hasParent","length","l","setState","treeReversed","reverse","newTree","newTo","key","pathname","process","env","PUBLIC_URL","category","collectionLink","i","parent","undefined","id","translate","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withTranslate } from \"react-redux-multilingual\";\r\n\r\nvar tree = [];\r\nvar done = null;\r\n\r\nclass Breadcrumb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: null,\r\n      parent: null,\r\n      data: null,\r\n      tree: null,\r\n      newTree: null,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props) {\r\n      const { title, parent, data } = this.props;\r\n      if (data !== this.state.data || title !== this.state.title) {\r\n        this.setState(() => {\r\n          return {\r\n            title,\r\n            parent,\r\n            data,\r\n          };\r\n        });\r\n        if (data) {\r\n          this.build(title, data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props) {\r\n      const { title, parent, data } = this.props;\r\n      if (data !== this.state.data || title !== this.state.title) {\r\n        this.setState(() => {\r\n          return {\r\n            title,\r\n            parent,\r\n            data,\r\n          };\r\n        });\r\n        if (data) {\r\n          this.build(title, data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  build = (title, data) => {\r\n    var oldTree = [];\r\n    oldTree = this.state.tree;\r\n    if (data !== this.state.data) {\r\n      if (true) {\r\n        const categoryList = this.props.data.state.data2.categoryTree;\r\n        tree = [];\r\n        var item = categoryList.find((c) => c.name === title);\r\n        tree.push(item);\r\n        this.hasParent(item, categoryList);\r\n        var length = tree.length;\r\n\r\n        var l = length - 1;\r\n        if (!done) {\r\n          this.hasParent(tree[l], categoryList);\r\n        }\r\n\r\n        length = tree.length;\r\n        l = length - 1;\r\n\r\n        if (!done) {\r\n          this.hasParent(tree[l], categoryList);\r\n        }\r\n\r\n        length = tree.length;\r\n        l = length - 1;\r\n\r\n        if (!done) {\r\n          this.hasParent(tree[l], categoryList);\r\n        }\r\n      }\r\n\r\n      if (done) {\r\n        done = null;\r\n\r\n        if (oldTree !== tree) {\r\n          this.setState(() => {\r\n            var treeReversed = tree.reverse();\r\n            return { tree: treeReversed, newTree: \"true\" };\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  hasParent(category, categoryList) {\r\n    if (category !== undefined) {\r\n      if (category.id) {\r\n        var parent = categoryList.find((c) => c.id === category.parent);\r\n\r\n        if (parent) {\r\n          if (parent.id) {\r\n            tree.push(parent);\r\n            if (parent.id === 19) {\r\n              done = \"true\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  newTo = (key) => {\r\n    return {\r\n      pathname: `${process.env.PUBLIC_URL}/no-sidebar/collection/`,\r\n      category: key,\r\n    };\r\n  };\r\n\r\n  collectionLink = (name, i) => {\r\n    if (name !== \"\") {\r\n      return (\r\n        <Link key={i} to={this.newTo(name)}>\r\n          {name}\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { translate } = this.props;\r\n\r\n    if (this.state.tree) {\r\n      return (\r\n        <div className=\"breadcrumb-section\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"page-title\" />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <nav aria-label=\"breadcrumb\" className=\"theme-breadcrumb\">\r\n                  <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <Link to={`${process.env.PUBLIC_URL}`}>\r\n                        {translate(\"home\")}\r\n                      </Link>\r\n                    </li>\r\n                    {this.state.tree.map((c, i) => {\r\n                      return (\r\n                        <li key={i} className=\"breadcrumb-item\">\r\n                          {this.collectionLink(c.name, i)}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ol>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default withTranslate(Breadcrumb);\r\n"]},"metadata":{},"sourceType":"module"}