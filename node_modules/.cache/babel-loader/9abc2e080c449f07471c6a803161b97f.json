{"ast":null,"code":"import _regeneratorRuntime from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jarri/Desktop/projects-web/react-store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jarri/Desktop/projects-web/react-store/src/api/shop.js\";\nimport React, { Component } from \"react\";\nimport { useContext } from \"react\";\nimport Loader from \"../Loader\";\nimport { storeProducts, detailProduct } from \"../data\";\nimport { tree } from \"../categoryContext\";\nimport WooContext from \"./wooContext\";\n\nvar wooConfig = require(\"../components/wooConfig\");\n\nvar WooCommerceAPI = require(\"woocommerce-api\");\n\nvar WooCommerce = new WooCommerceAPI({\n  url: wooConfig.siteUrl,\n  consumerKey: wooConfig.consumerKey,\n  consumerSecret: wooConfig.consumerSecret,\n  wpAPI: true,\n  version: \"wc/v3\"\n});\nvar ProductContext = React.createContext();\nexport var setStuff = function setStuff(tree) {\n  if (tree) {// console.log(tree);\n  }\n};\nvar pos = 1;\nvar addresses = [{\n  id: 19,\n  level: 0,\n  position: 0,\n  name: \"Product Categories\"\n}];\nvar cart = [];\nvar length = null;\n\nvar ProductProvider = /*#__PURE__*/function (_Component) {\n  _inherits(ProductProvider, _Component);\n\n  function ProductProvider(props) {\n    var _this;\n\n    _classCallCheck(this, ProductProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductProvider).call(this, props));\n    _this.oldProducts = false;\n\n    _this.getItem = function (id) {\n      var product = null;\n\n      if (_this.state.products === undefined || !_this.state.products[0]) {\n        if (_this.state.detailProduct.id === id) {\n          product = _this.state.detailProduct;\n        }\n\n        if (_this.state.modalProduct.id === id) {\n          product = _this.state.modalProduct;\n        }\n      } else {\n        product = _this.state.products.find(function (item) {\n          return item.id === id;\n        });\n      }\n\n      return product;\n    };\n\n    _this.handleDetail = function (id) {\n      // If the function receives a whole product parse it directly to the state\n      if (id.id) {\n        var newItem = {\n          id: id.id,\n          title: id.name,\n          img: id.img,\n          price: parseInt(id.sale_price),\n          company: \"nurumia\",\n          info: id.description,\n          inCart: false,\n          count: 1,\n          total: 1,\n          categories: id.categories,\n          stock: id.stock_quantity\n        };\n\n        _this.setState(function () {\n          return {\n            detailProduct: newItem\n          };\n        });\n      } else {\n        var product = _this.getItem(id); //  console.log(this.state);\n\n\n        _this.setState(function () {\n          return {\n            detailProduct: product\n          };\n        });\n      }\n    };\n\n    _this.addToCart = function (data) {\n      var id = null;\n      var product = null;\n      var repeated = false;\n      length++;\n\n      var tempProducts = _toConsumableArray(_this.state.products); //console.log(data)\n\n\n      if (data.id) {\n        id = data.id;\n      }\n\n      if (data.preCart) {\n        if (data.preCart[0]) {\n          // console.log(data.preCart[0]);\n          if (data.preCart[0].id) {\n            if (data.preCart[0].id === id) {\n              product = data.preCart[0];\n            } else {\n              tempProducts.map(function (item) {\n                if (item.id === id) {\n                  product = item;\n                }\n              });\n            }\n          }\n        } else {\n          _this.state.products.map(function (item) {\n            if (item.id === id) {\n              product = item;\n            }\n          });\n        }\n      } else {\n        if (_this.state.products[0]) {\n          _this.state.products.map(function (item) {\n            if (item.id === id) {\n              product = item;\n            }\n          });\n        } else {\n          if (_this.state.detailProduct.id === data.id) {\n            product = _this.state.detailProduct;\n            product.count = 1;\n          }\n        }\n      }\n\n      if (product) {\n        product.inCart = true;\n        var price = product.price;\n        product.total = price;\n\n        if (cart) {\n          cart.map(function (item) {\n            if (item.id === product.id) {\n              var totalCount = item.count + product.count;\n\n              if (product.stock > totalCount) {\n                product.count = totalCount;\n                cart.pop(item);\n                cart = [].concat(_toConsumableArray(cart), [product]);\n              }\n\n              repeated = true;\n            }\n          });\n        }\n\n        if (!repeated) {\n          cart = [].concat(_toConsumableArray(_this.state.cart), [product]);\n        }\n\n        _this.parseIt(cart);\n\n        _this.setState(function () {\n          return {\n            //  products: tempProducts,\n            cart: cart,\n            preCart: []\n          };\n        }, function () {\n          _this.addTotals();\n        });\n      }\n    };\n\n    _this.openModal = function (id) {\n      var product = null;\n\n      if (id.id) {\n        _this.setState(function () {\n          return {\n            modalProduct: id,\n            modalOpen: true\n          };\n        });\n      } else {\n        product = _this.getItem(id);\n\n        _this.setState(function () {\n          return {\n            modalProduct: product,\n            modalOpen: true\n          };\n        });\n      }\n    };\n\n    _this.closeModal = function () {\n      _this.setState(function () {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    _this.increment = function (receivedItem) {\n      // It receives the id of the item with the count to be incremented in the cart\n      var tempCart = _this.state.cart; // It copies the current cart\n\n      var found = false;\n      var index = 0;\n      var j = 0;\n      var selectedProduct = null;\n      tempCart.map(function (item) {\n        // Looks for the item in the cart and set a flag true if it found it\n        if (item.id === receivedItem.id) {\n          found = true;\n          selectedProduct = receivedItem;\n          index = j;\n        }\n\n        j++;\n      });\n\n      if (!found) {\n        // If can't find the current item will add it to cart (I dont think this is needed)\n        _this.addToCart(id);\n\n        tempCart = cart;\n        selectedProduct.count = 0; // This has non sense\n      } else {\n        if (selectedProduct.count + 1 <= selectedProduct.stock) {\n          var count = selectedProduct.count + 1;\n          tempCart[index].count = count;\n          var total = count * selectedProduct.price;\n          tempCart[index].total = total;\n        }\n      }\n\n      _this.setState(function () {\n        return {\n          cart: tempCart\n        };\n      }, function () {\n        _this.addTotals();\n      });\n    };\n\n    _this.decrement = function (id) {\n      var tempCart = _toConsumableArray(_this.state.cart);\n\n      var found = false;\n      cart.find(function (item) {\n        if (item.id === id) {\n          found = true;\n        }\n      });\n\n      if (!found) {\n        _this.addToCart(id);\n\n        tempCart = cart;\n      }\n\n      var selectedProduct = tempCart.find(function (item) {\n        return item.id === id;\n      });\n      var index = tempCart.indexOf(selectedProduct);\n      var product = tempCart[index];\n\n      if (product) {\n        if (product.count >= 1) {\n          product.count = product.count - 1;\n        }\n\n        if (product.count === 0) {\n          _this.removeItem(id);\n        } else {\n          product.total = product.count * product.price;\n\n          _this.setState(function () {\n            return {\n              cart: _toConsumableArray(tempCart)\n            };\n          }, function () {\n            _this.addTotals();\n          });\n        }\n      }\n    };\n\n    _this.removeItem = function (id) {\n      var tempProducts = _toConsumableArray(_this.state.products);\n\n      var tempCart = _this.state.cart;\n      tempCart = tempCart.filter(function (item) {\n        return item.id !== id;\n      }); // console.log(tempProducts);\n      // console.log(tempCart);\n\n      var index = tempProducts.indexOf(_this.getItem(id));\n      var removedProduct = tempProducts[index]; // console.log(index);\n      // console.log(removedProduct);\n      // removedProduct.inCart = null;\n      // removedProduct.count = 0;\n      // removedProduct.total = 0;\n\n      cart = _toConsumableArray(tempCart); //console.log(cart);\n\n      _this.setState(function () {\n        return {\n          cart: _toConsumableArray(tempCart),\n          products: _toConsumableArray(tempProducts)\n        };\n      }, function () {\n        _this.addTotals();\n      });\n    };\n\n    _this.clearCart = function () {\n      cart = [];\n\n      _this.setState(function () {\n        return {\n          cart: []\n        };\n      }, function () {\n        _this.addTotals();\n      });\n    };\n\n    _this.addTotals = function () {\n      var subTotal = 0;\n\n      _this.state.cart.map(function (item) {\n        return subTotal += item.total;\n      });\n\n      var tempTax = subTotal * 0.075;\n      var tax = parseFloat(tempTax.toFixed(2));\n      var total = subTotal + tax;\n\n      _this.setState(function () {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n\n      cart = _this.state.cart;\n\n      _this.wooPipe();\n    };\n\n    _this.getList = function (res) {\n      WooCommerce.getAsync(\"products?category=\".concat(res)).then(function (res) {\n        return res.toJSON().body;\n      }).then(function (json) {\n        var data = json;\n        Object.json1 = JSON.parse(data);\n        var items = Object.json1;\n        var products = [];\n        items.map(function (_ref) {\n          var id = _ref.id,\n              name = _ref.name,\n              images = _ref.images,\n              price = _ref.price,\n              categories = _ref.categories,\n              description = _ref.description,\n              stock_quantity = _ref.stock_quantity;\n          var img;\n          images.map(function (data) {\n            img = data.src;\n          });\n          var newItem = {\n            id: id,\n            title: name,\n            img: img,\n            price: parseInt(price),\n            company: \"nurumia\",\n            info: description,\n            inCart: null,\n            count: 1,\n            total: 1,\n            categories: categories,\n            stock: stock_quantity\n          };\n          products.push(newItem); // Push the object\n\n          _this.oldProducts = true;\n        });\n\n        _this.setState(_objectSpread({}, {\n          isListLoaded: true,\n          products: products\n        }));\n      });\n    };\n\n    _this.getSales2 = function () {\n      WooCommerce.getAsync(\"products?on_sale=true\").then(function (res) {\n        return res.toJSON().body;\n      }).then(function (json) {\n        var data = json;\n        Object.json1 = JSON.parse(data);\n        var items = Object.json1;\n        var sales = [];\n        items.map(function (_ref2) {\n          var id = _ref2.id,\n              name = _ref2.name,\n              images = _ref2.images,\n              sale_price = _ref2.sale_price,\n              categories = _ref2.categories,\n              description = _ref2.description;\n          var img;\n          images.map(function (data) {\n            img = data.src;\n          });\n          var newItem = {\n            id: id,\n            title: name,\n            img: img,\n            price: parseInt(sale_price),\n            company: \"nurumia\",\n            info: description,\n            inCart: false,\n            count: 1,\n            total: 1,\n            categories: categories\n          };\n          sales.push(newItem); // Push the object\n        });\n\n        _this.setState(_objectSpread({}, {\n          sales: sales\n        }));\n      });\n    };\n\n    _this.getSales = function () {\n      WooCommerce.getAsync(\"products?on_sale=true\").then(function (res) {\n        return res.toJSON().body;\n      }).then(function (json) {\n        var data = json;\n        Object.json1 = JSON.parse(data);\n        var items = Object.json1;\n        var sales = [];\n        items.map(function (item) {\n          var img;\n          item.images.map(function (data) {\n            img = data.src;\n          });\n          var newItem = item;\n          newItem.img = img, newItem.price = parseInt(item.sale_price), newItem.company = \"nurumia\", sales.push(newItem); // Push the object\n        });\n\n        _this.setState(_objectSpread({}, {\n          sales: sales\n        }));\n      });\n    };\n\n    _this.getCategories = function (parent, level) {\n      return WooCommerce.getAsync(\"products/categories?hide_empty=false&per_page=30\".concat(parent)).then(function (res) {\n        if (res) {\n          var data = res.toJSON().body; // console.log(data)\n\n          Object.json1 = JSON.parse(data);\n          var items = Object.json1;\n          var categories = [];\n\n          if (items[0]) {\n            if (items[0].id != undefined) {\n              pos = 0;\n              items.map(function (_ref3) {\n                var id = _ref3.id,\n                    name = _ref3.name,\n                    parent = _ref3.parent;\n                var newCategory = {\n                  id: id,\n                  name: name,\n                  parent: parent,\n                  children: []\n                };\n                var addr = {\n                  id: id,\n                  level: level,\n                  position: pos,\n                  name: name\n                };\n                addresses.push(addr);\n                categories.push(newCategory); // Push the object\n\n                pos++;\n              });\n              return categories;\n            }\n          }\n        }\n      });\n    };\n\n    _this.imageClick = function (res) {\n      _this.setState({\n        imageClicked: res\n      });\n    };\n\n    _this.categoryClick = function (res) {\n      _this.setState({\n        categoryClicked: res.id,\n        isMenuLoaded: true\n      });\n\n      _this.getList(res.id);\n      /* I need to use res(id) to find the category in the tree and check who is parent is,then \n      load all the categories belonging to that main category */\n\n\n      if (_this.state.tree.children[0]) {\n        _this.state.tree.children[0].map(function (item) {\n          if (item.name === res.parent) {\n            _this.setState({\n              tree2: item\n            });\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      products: [],\n      sales: [],\n      tree: [],\n      tree2: [],\n      imageClicked: null,\n      categoryClicked: null,\n      detailProduct: detailProduct,\n      cart: [],\n      // preCart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      isListLoaded: false,\n      isTreeLoaded: false,\n      isMenuLoaded: false\n    };\n    _this.imageClick = _this.imageClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.categoryClick = _this.categoryClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductProvider, [{\n    key: \"wooPipe\",\n    value: function wooPipe() {\n      var wooFunctions = this.context;\n      wooFunctions.receiveCart(this.state);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.createTree();\n      this.getSales();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    }\n  }, {\n    key: \"parseIt\",\n    value: function () {\n      var _parseIt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cart) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.setState(function () {\n                  return {\n                    // products: tempProducts,\n                    cart: cart,\n                    preCart: []\n                  };\n                }, function () {\n                  _this2.addTotals();\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function parseIt(_x) {\n        return _parseIt.apply(this, arguments);\n      }\n\n      return parseIt;\n    }()\n  }, {\n    key: \"createTree\",\n    value: function createTree() {\n      var _this3 = this;\n\n      var root = \"&parent=19\";\n      var Str = \"&parent=\";\n      var level = 1;\n\n      if (this.state.isTreeLoaded === false) {\n        this.getCategories(root, level).then(function (res) {\n          tree.children[0] = res;\n\n          if (res) {\n            level++;\n            var i = 0;\n            res.map(function (m) {\n              // With m.id I request and what I get goes into\n              // m.children\n              if (m) {\n                if (m.id) {\n                  root = Str + \"\".concat(m.id);\n\n                  _this3.getCategories(root, level).then(function (res) {\n                    if (res) {\n                      if (tree.children) {\n                        if (tree.children[0]) {\n                          if (tree.children[0][i]) {\n                            if (tree.children[0][i].children) {\n                              var arrayPos = 0;\n                              addresses.map(function (addr) {\n                                if (addr.id === m.id) {\n                                  arrayPos = addr.position;\n                                }\n                              });\n\n                              if (!tree.children[0][arrayPos].children[0]) {\n                                tree.children[0][arrayPos].children.push(res);\n                              }\n\n                              i++;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  });\n                }\n              }\n            });\n          }\n\n          _this3.setState(_objectSpread({}, {\n            tree: tree,\n            isTreeLoaded: true\n          }));\n\n          setStuff(tree);\n          return tree;\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isTreeLoaded !== true) {\n        // if (false !== true) {\n        return /*#__PURE__*/React.createElement(Loader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(ProductContext.Provider, {\n          value: _objectSpread({}, this.state, {\n            length: length,\n            handleDetail: this.handleDetail,\n            addToCart: this.addToCart,\n            openModal: this.openModal,\n            closeModal: this.closeModal,\n            increment: this.increment,\n            decrement: this.decrement,\n            removeItem: this.removeItem,\n            clearCart: this.clearCart,\n            updateValue: this.updateValue,\n            imageClick: this.imageClick,\n            categoryClick: this.categoryClick,\n            getItem: this.getItem,\n            getList: this.getList,\n            parsePreCart: this.parsePreCart\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 17\n          }\n        }, \" \", this.props.children, \" \"), \" \");\n      }\n    }\n  }]);\n\n  return ProductProvider;\n}(Component);\n\nProductProvider.contextType = WooContext;\nvar ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\nexport function useProduct() {\n  return useContext(ProductContext);\n}\nexport default ProductContext;","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/react-store/src/api/shop.js"],"names":["React","Component","useContext","Loader","storeProducts","detailProduct","tree","WooContext","wooConfig","require","WooCommerceAPI","WooCommerce","url","siteUrl","consumerKey","consumerSecret","wpAPI","version","ProductContext","createContext","setStuff","pos","addresses","id","level","position","name","cart","length","ProductProvider","props","oldProducts","getItem","product","state","products","undefined","modalProduct","find","item","handleDetail","newItem","title","img","price","parseInt","sale_price","company","info","description","inCart","count","total","categories","stock","stock_quantity","setState","addToCart","data","repeated","tempProducts","preCart","map","totalCount","pop","parseIt","addTotals","openModal","modalOpen","closeModal","increment","receivedItem","tempCart","found","index","j","selectedProduct","decrement","indexOf","removeItem","filter","removedProduct","clearCart","subTotal","tempTax","tax","parseFloat","toFixed","cartSubTotal","cartTax","cartTotal","wooPipe","getList","res","getAsync","then","toJSON","body","json","Object","json1","JSON","parse","items","images","src","push","isListLoaded","getSales2","sales","getSales","getCategories","parent","newCategory","children","addr","imageClick","imageClicked","categoryClick","categoryClicked","isMenuLoaded","tree2","isTreeLoaded","bind","wooFunctions","context","receiveCart","createTree","root","Str","i","m","arrayPos","updateValue","parsePreCart","contextType","ProductConsumer","Consumer","useProduct"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from \"react\";\nimport {\n    useContext\n} from \"react\";\nimport Loader from \"../Loader\";\nimport {\n    storeProducts,\n    detailProduct\n} from \"../data\";\nimport {\n    tree\n} from \"../categoryContext\";\nimport WooContext from \"./wooContext\";\n\nconst wooConfig = require(\"../components/wooConfig\");\nconst WooCommerceAPI = require(\"woocommerce-api\");\n\nconst WooCommerce = new WooCommerceAPI({\n    url: wooConfig.siteUrl,\n    consumerKey: wooConfig.consumerKey,\n    consumerSecret: wooConfig.consumerSecret,\n    wpAPI: true,\n    version: \"wc/v3\",\n});\n\nconst ProductContext = React.createContext();\n\nexport const setStuff = (tree) => {\n    if (tree) {\n        // console.log(tree);\n    }\n};\n\nvar pos = 1;\n\nvar addresses = [{\n    id: 19,\n    level: 0,\n    position: 0,\n    name: \"Product Categories\"\n}];\nvar cart = [];\nvar length = null;\n\nclass ProductProvider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            sales: [],\n            tree: [],\n            tree2: [],\n            imageClicked: null,\n            categoryClicked: null,\n            detailProduct: detailProduct,\n            cart: [],\n            // preCart: [],\n            modalOpen: false,\n            modalProduct: detailProduct,\n            cartSubTotal: 0,\n            cartTax: 0,\n            cartTotal: 0,\n            isListLoaded: false,\n            isTreeLoaded: false,\n            isMenuLoaded: false,\n        };\n        this.imageClick = this.imageClick.bind(this);\n        this.categoryClick = this.categoryClick.bind(this);\n    }\n    static contextType = WooContext;\n\n    wooPipe() {\n        const wooFunctions = this.context;\n        wooFunctions.receiveCart(this.state);\n    }\n\n    oldProducts = false;\n\n    componentWillMount() {\n        this.createTree();\n        this.getSales();\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n\n    getItem = (id) => {\n        var product = null;\n\n        if (this.state.products === undefined || !this.state.products[0]) {\n            if (this.state.detailProduct.id === id) {\n                product = this.state.detailProduct;\n            }\n            if (this.state.modalProduct.id === id) {\n                product = this.state.modalProduct;\n            }\n        } else {\n            product = this.state.products.find((item) => item.id === id);\n        }\n\n        return product;\n    };\n\n\n    handleDetail = (id) => {\n        // If the function receives a whole product parse it directly to the state\n        if (id.id) {\n            const newItem = {\n                id: id.id,\n                title: id.name,\n                img: id.img,\n                price: parseInt(id.sale_price),\n                company: \"nurumia\",\n                info: id.description,\n                inCart: false,\n                count: 1,\n                total: 1,\n                categories: id.categories,\n                stock: id.stock_quantity\n            };\n\n            this.setState(() => {\n                return {\n                    detailProduct: newItem\n                };\n            });\n\n        } else {\n            var product = this.getItem(id);\n            //  console.log(this.state);\n            this.setState(() => {\n                return {\n                    detailProduct: product\n                };\n            });\n        }\n    };\n\n\n\n    addToCart = (data) => {\n        var id = null;\n        var product = null;\n        var repeated = false;\n        length++;\n        var tempProducts = [...this.state.products];\n        //console.log(data)\n        if (data.id) {\n            id = data.id;\n        }\n\n        if (data.preCart) {\n            if (data.preCart[0]) {\n                // console.log(data.preCart[0]);\n                if (data.preCart[0].id) {\n                    if (data.preCart[0].id === id) {\n                        product = data.preCart[0];\n                    } else {\n                        tempProducts.map((item) => {\n                            if (item.id === id) {\n                                product = item;\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.state.products.map((item) => {\n                    if (item.id === id) {\n                        product = item;\n                    }\n                });\n            }\n        } else {\n            if (this.state.products[0]) {\n                this.state.products.map((item) => {\n                    if (item.id === id) {\n                        product = item;\n                    }\n                });\n            } else {\n                if (this.state.detailProduct.id === data.id) {\n                    product = this.state.detailProduct\n                    product.count = 1;\n                }\n            }\n        }\n\n        if (product) {\n            product.inCart = true;\n            const price = product.price;\n            product.total = price;\n\n            if (cart) {\n                cart.map((item) => {\n                    if (item.id === product.id) {\n\n                        var totalCount = item.count + product.count;\n                        if (product.stock > totalCount) {\n                            product.count = totalCount;\n                            cart.pop(item);\n                            cart = [...cart, product];\n                        }\n                        repeated = true;\n\n                    }\n                });\n            }\n            if (!repeated) {\n                cart = [...this.state.cart, product];\n            }\n\n            this.parseIt(cart);\n\n            this.setState(\n                () => {\n                    return {\n                        //  products: tempProducts,\n                        cart: cart,\n                        preCart: [],\n                    };\n                },\n                () => {\n                    this.addTotals();\n                }\n            );\n        }\n    };\n\n    async parseIt(cart) {\n        await this.setState(\n            () => {\n                return {\n                    // products: tempProducts,\n                    cart: cart,\n                    preCart: [],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    }\n\n    openModal = (id) => {\n        var product = null\n\n        if (id.id) {\n            this.setState(() => {\n                return {\n                    modalProduct: id,\n                    modalOpen: true\n                };\n            });\n        } else {\n            product = this.getItem(id);\n            this.setState(() => {\n                return {\n                    modalProduct: product,\n                    modalOpen: true\n                };\n            });\n        }\n\n    };\n\n    closeModal = () => {\n        this.setState(() => {\n            return {\n                modalOpen: false\n            };\n        });\n    };\n\n    /* The below function will increment the count in one individual item inside de cartList \n Component */\n\n    increment = (receivedItem) => {\n        // It receives the id of the item with the count to be incremented in the cart\n        var tempCart = this.state.cart; // It copies the current cart\n        var found = false;\n        var index = 0;\n        var j = 0;\n        var selectedProduct = null;\n\n        tempCart.map((item) => {\n            // Looks for the item in the cart and set a flag true if it found it\n\n            if (item.id === receivedItem.id) {\n                found = true;\n                selectedProduct = receivedItem;\n                index = j;\n            }\n            j++;\n        });\n\n        if (!found) {\n            // If can't find the current item will add it to cart (I dont think this is needed)\n\n            this.addToCart(id);\n            tempCart = cart;\n            selectedProduct.count = 0; // This has non sense\n        } else {\n            if ((selectedProduct.count + 1) <= selectedProduct.stock) {\n                const count = selectedProduct.count + 1;\n                tempCart[index].count = count;\n                const total = count * selectedProduct.price;\n                tempCart[index].total = total;\n            }\n\n        }\n\n        this.setState(\n            () => {\n                return {\n                    cart: tempCart,\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        var found = false;\n        cart.find((item) => {\n            if (item.id === id) {\n                found = true;\n            }\n        });\n\n        if (!found) {\n            this.addToCart(id);\n            tempCart = cart;\n        }\n\n        const selectedProduct = tempCart.find((item) => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        if (product) {\n            if (product.count >= 1) {\n                product.count = product.count - 1;\n            }\n\n            if (product.count === 0) {\n                this.removeItem(id);\n            } else {\n                product.total = product.count * product.price;\n                this.setState(\n                    () => {\n                        return {\n                            cart: [...tempCart],\n                        };\n                    },\n                    () => {\n                        this.addTotals();\n                    }\n                );\n            }\n        }\n    };\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = this.state.cart;\n        tempCart = tempCart.filter((item) => item.id !== id);\n        // console.log(tempProducts);\n        // console.log(tempCart);\n\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        // console.log(index);\n        // console.log(removedProduct);\n        // removedProduct.inCart = null;\n        // removedProduct.count = 0;\n        // removedProduct.total = 0;\n        cart = [...tempCart];\n        //console.log(cart);\n        this.setState(\n            () => {\n                return {\n                    cart: [...tempCart],\n                    products: [...tempProducts],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    clearCart = () => {\n        cart = [];\n        this.setState(\n            () => {\n                return {\n                    cart: [],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n\n\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map((item) => (subTotal += item.total));\n        const tempTax = subTotal * 0.075;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n\n        this.setState(() => {\n            return {\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total,\n            };\n        });\n        cart = this.state.cart;\n        this.wooPipe();\n    };\n\n\n\n    getList = (res) => {\n        WooCommerce.getAsync(`products?category=${res}`)\n            .then((res) => res.toJSON().body)\n            .then((json) => {\n                var data = json;\n                Object.json1 = JSON.parse(data);\n                var items = Object.json1;\n                var products = [];\n                items.map(({\n                    id,\n                    name,\n                    images,\n                    price,\n                    categories,\n                    description,\n                    stock_quantity\n                }) => {\n                    var img;\n                    images.map((data) => {\n                        img = data.src;\n                    });\n\n                    const newItem = {\n                        id: id,\n                        title: name,\n                        img: img,\n                        price: parseInt(price),\n                        company: \"nurumia\",\n                        info: description,\n                        inCart: null,\n                        count: 1,\n                        total: 1,\n                        categories: categories,\n                        stock: stock_quantity\n\n                    };\n\n                    products.push(newItem); // Push the object\n                    this.oldProducts = true;\n                });\n                this.setState({\n                    ...{\n                        isListLoaded: true,\n                        products: products\n                    }\n                });\n            });\n    };\n\n\n\n    getSales2 = () => {\n        WooCommerce.getAsync(`products?on_sale=true`)\n            .then((res) => res.toJSON().body)\n            .then((json) => {\n                var data = json;\n                Object.json1 = JSON.parse(data);\n                var items = Object.json1;\n                var sales = [];\n                items.map(({\n                    id,\n                    name,\n                    images,\n                    sale_price,\n                    categories,\n                    description\n                }) => {\n                    var img;\n\n                    images.map((data) => {\n                        img = data.src;\n                    });\n                    const newItem = {\n                        id: id,\n                        title: name,\n                        img: img,\n                        price: parseInt(sale_price),\n                        company: \"nurumia\",\n                        info: description,\n                        inCart: false,\n                        count: 1,\n                        total: 1,\n                        categories: categories\n                    };\n                    sales.push(newItem); // Push the object\n                });\n\n                this.setState({\n                    ...{\n                        sales: sales\n                    }\n                });\n            });\n    };\n\n\n\n    getSales = () => {\n        WooCommerce.getAsync(`products?on_sale=true`)\n            .then((res) => res.toJSON().body)\n            .then((json) => {\n                var data = json;\n                Object.json1 = JSON.parse(data);\n                var items = Object.json1;\n                var sales = [];\n                items.map((item) => {\n                    var img;\n\n                    item.images.map((data) => {\n                        img = data.src;\n                    });\n                    var newItem = item;\n\n                    newItem.img = img,\n                        newItem.price = parseInt(item.sale_price),\n                        newItem.company = \"nurumia\",\n\n                        sales.push(newItem); // Push the object\n                });\n\n                this.setState({\n                    ...{\n                        sales: sales\n                    }\n                });\n            });\n    };\n\n    createTree() {\n        var root = `&parent=19`;\n        const Str = `&parent=`;\n        var level = 1;\n        if (this.state.isTreeLoaded === false) {\n            this.getCategories(root, level).then((res) => {\n                tree.children[0] = res;\n\n                if (res) {\n                    level++;\n                    var i = 0;\n\n                    res.map((m) => {\n                        // With m.id I request and what I get goes into\n                        // m.children\n                        if (m) {\n                            if (m.id) {\n                                root = Str + `${m.id}`;\n\n                                this.getCategories(root, level).then((res) => {\n                                    if (res) {\n                                        if (tree.children) {\n                                            if (tree.children[0]) {\n                                                if (tree.children[0][i]) {\n                                                    if (tree.children[0][i].children) {\n                                                        var arrayPos = 0;\n                                                        addresses.map((addr) => {\n                                                            if (addr.id === m.id) {\n                                                                arrayPos = addr.position;\n                                                            }\n                                                        });\n\n                                                        if (!tree.children[0][arrayPos].children[0]) {\n                                                            tree.children[0][arrayPos].children.push(res);\n                                                        }\n\n                                                        i++;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                }\n                this.setState({\n                    ...{\n                        tree: tree,\n                        isTreeLoaded: true\n                    }\n                });\n                setStuff(tree);\n                return tree;\n            });\n        }\n    }\n\n    getCategories = (parent, level) => {\n        return WooCommerce.getAsync(\n            `products/categories?hide_empty=false&per_page=30${parent}`\n        ).then((res) => {\n            if (res) {\n                var data = res.toJSON().body;\n                // console.log(data)\n                Object.json1 = JSON.parse(data);\n                var items = Object.json1;\n                var categories = [];\n\n                if (items[0]) {\n                    if (items[0].id != undefined) {\n                        pos = 0;\n\n                        items.map(({\n                            id,\n                            name,\n                            parent\n                        }) => {\n                            const newCategory = {\n                                id: id,\n                                name: name,\n                                parent: parent,\n                                children: [],\n                            };\n                            const addr = {\n                                id: id,\n                                level: level,\n                                position: pos,\n                                name: name,\n                            };\n\n                            addresses.push(addr);\n                            categories.push(newCategory); // Push the object\n\n                            pos++;\n                        });\n\n                        return categories;\n                    }\n                }\n            }\n        });\n    };\n\n    imageClick = (res) => {\n        this.setState({\n            imageClicked: res\n        });\n    };\n\n    categoryClick = (res) => {\n        this.setState({\n            categoryClicked: res.id,\n            isMenuLoaded: true,\n        });\n        this.getList(res.id);\n        /* I need to use res(id) to find the category in the tree and check who is parent is,then \n        load all the categories belonging to that main category */\n\n        if (this.state.tree.children[0]) {\n            this.state.tree.children[0].map((item) => {\n                if (item.name === res.parent) {\n                    this.setState({\n                        tree2: item\n                    });\n                }\n            });\n        }\n    };\n\n    render() {\n        if (this.state.isTreeLoaded !== true) {\n            // if (false !== true) {\n            return <Loader / > ;\n        } else {\n            return ( <\n                div >\n                <\n                ProductContext.Provider value = {\n                    {\n                        ...this.state,\n                        length,\n                        handleDetail: this.handleDetail,\n                        addToCart: this.addToCart,\n                        openModal: this.openModal,\n                        closeModal: this.closeModal,\n                        increment: this.increment,\n                        decrement: this.decrement,\n                        removeItem: this.removeItem,\n                        clearCart: this.clearCart,\n                        updateValue: this.updateValue,\n                        imageClick: this.imageClick,\n                        categoryClick: this.categoryClick,\n                        getItem: this.getItem,\n                        getList: this.getList,\n                        parsePreCart: this.parsePreCart,\n                    }\n                } > {\n                    this.props.children\n                } <\n                /ProductContext.Provider> < /\n                div >\n            );\n        }\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {\n    ProductProvider,\n    ProductConsumer\n};\n\nexport function useProduct() {\n    return useContext(ProductContext);\n}\n\nexport default ProductContext;"]},"metadata":{},"sourceType":"module"}