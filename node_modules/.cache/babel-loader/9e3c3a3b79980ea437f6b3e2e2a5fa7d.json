{"ast":null,"code":"import _defineProperty from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/pages/account.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { updateAccount } from \"../../actions/indexO\";\nimport Breadcrumb from \"../breadcrumb\";\n\nvar Account =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _this.handleChange = function (e) {\n      var value = e.currentTarget.value;\n      var name = e.currentTarget.name;\n\n      if (e.currentTarget.name) {\n        if (name === \"postcode\" || name === \"phone\") {\n          _this.setState(function () {\n            return _defineProperty({}, name, value.replace(/\\D/, \"\"));\n          });\n        } else {\n          _this.setState(function () {\n            return _defineProperty({}, name, value);\n          });\n        }\n      } else return null;\n    };\n\n    _this.state = {\n      payment: \"stripe\",\n      id: \"\",\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      phone: \"\",\n      email: \"\",\n      country: \"\",\n      address_1: \"\",\n      city: \"\",\n      state: \"\",\n      postcode: \"\"\n    };\n    _this.validator = new SimpleReactValidator();\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.props);\n      console.log(this.props.state.user.log);\n\n      if (this.props.state.user.log.username) {\n        // alert(this.state.first_name + \" you are currently logged in !\");\n        this.fillFields();\n      } else {\n        alert(this.state.first_name + \" your account has been updated !\");\n        this.props.history.push(\"/\");\n      }\n    }\n    /**\r\n    * \r\n    *  componentDidUpdate() {\r\n      console.log(this.props);\r\n      console.log(this.props.state.user.log);\r\n        if (this.props.state.user.log.username) {\r\n        alert(this.state.first_name + \" you are currently logged in !\");\r\n        this.fillFields();\r\n      } else {\r\n        this.props.history.push(\"/\");\r\n      }\r\n    } \r\n    * \r\n    */\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      console.log(this.props);\n      this.props.history.push(\"/\");\n    }\n  }, {\n    key: \"fillFields\",\n    value: function fillFields() {\n      var _this$props$state$use = this.props.state.user.log,\n          username = _this$props$state$use.username,\n          first_name = _this$props$state$use.first_name,\n          password = _this$props$state$use.password,\n          last_name = _this$props$state$use.last_name,\n          phone = _this$props$state$use.phone,\n          email = _this$props$state$use.email,\n          country = _this$props$state$use.country,\n          address_1 = _this$props$state$use.address_1,\n          city = _this$props$state$use.city,\n          state = _this$props$state$use.state,\n          postcode = _this$props$state$use.postcode,\n          userId = _this$props$state$use.userId;\n      console.log(this.props.state.user.log);\n      this.setState(function () {\n        return {\n          username: username,\n          first_name: first_name,\n          password: password,\n          last_name: last_name,\n          phone: phone,\n          email: email,\n          country: country,\n          address_1: address_1,\n          city: city,\n          state: state,\n          postcode: postcode,\n          id: userId\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log(event);\n      event.preventDefault();\n\n      if (this.state.first_name.length > 0) {\n        var _this$state = this.state,\n            id = _this$state.id,\n            username = _this$state.username,\n            first_name = _this$state.first_name,\n            password = _this$state.password,\n            last_name = _this$state.last_name,\n            phone = _this$state.phone,\n            email = _this$state.email,\n            country = _this$state.country,\n            address_1 = _this$state.address_1,\n            city = _this$state.city,\n            state = _this$state.state,\n            postcode = _this$state.postcode; //id, updatedUser, updatedShipping\n\n        var userData = {\n          id: id,\n          username: username,\n          first_name: first_name,\n          password: password,\n          last_name: last_name,\n          phone: phone,\n          email: email,\n          country: country,\n          address_1: address_1,\n          city: city,\n          state: state,\n          postcode: postcode\n        };\n        var userOldData = this.props.state.user.log;\n        console.log(userOldData, userData);\n        this.props.updateAccount(userData, userOldData);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        title: \"Update Account Parameters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        className: \"register-page section-b-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Updata Account Parameters\"), React.createElement(\"div\", {\n        className: \"theme-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"theme-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"User Name\"), React.createElement(\"input\", {\n        id: \"uname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"User Name\",\n        required: \"\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), this.validator.message(\"username\", this.state.username, \"required|alpha\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"email\"), React.createElement(\"input\", {\n        id: \"email2\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Email\",\n        required: \"\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), this.validator.message(\"email\", this.state.email, \"required|alpha\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        id: \"fname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"First Name\",\n        required: \"\",\n        name: \"first_name\",\n        value: this.state.first_name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), this.validator.message(\"first_name\", this.state.first_name, \"required|alpha\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        id: \"lname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Last Name\",\n        required: \"\",\n        name: \"last_name\",\n        value: this.state.last_name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), this.validator.message(\"last_name\", this.state.last_name, \"required|alpha\"))), React.createElement(\"div\", {\n        className: \"checkout-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Billing Details\")), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"country \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"country \"), React.createElement(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Country\",\n        required: \"\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), this.validator.message(\"country \", this.state.country, \"required|alpha\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"input\", {\n        id: \"phone\",\n        type: \"tel\",\n        pattern: \"[0-9]{9}\",\n        maxLength: \"9\",\n        className: \"form-control\",\n        required: \"\",\n        name: \"phone\",\n        placeholder: \"Enter phone number\",\n        value: this.state.phone,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), this.validator.message(\"phone\", this.state.phone, \"required|alpha\"))), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"address \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"address \"), React.createElement(\"input\", {\n        id: \"address_1\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Address\",\n        required: \"\",\n        name: \"address_1\",\n        value: this.state.address_1,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), this.validator.message(\"address_1 \", this.state.address_1, \"required|alpha\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"City\",\n        required: \"\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), this.validator.message(\"city\", this.state.city, \"required|alpha\")), \" \"), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"state \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"state / province \"), React.createElement(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"State / Province \",\n        required: \"\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), this.validator.message(\"state \", this.state.state, \"required|alpha\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Postal\"), React.createElement(\"input\", {\n        id: \"postcode\",\n        type: \"tel\",\n        pattern: \"[0-9]{5}\",\n        maxLength: \"5\",\n        className: \"form-control\",\n        placeholder: \"Postal\",\n        required: \"\",\n        name: \"postcode\",\n        value: this.state.postcode,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), this.validator.message(\"postal\", this.state.postcode, \"required|alpha\"))), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-solid\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Update Account\"))))))));\n    }\n  }]);\n\n  return Account;\n}(Component); //export default Register;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateAccount: updateAccount\n})(Account);","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/pages/account.jsx"],"names":["React","Component","connect","SimpleReactValidator","updateAccount","Breadcrumb","Account","props","handleChange","e","value","currentTarget","name","setState","replace","state","payment","id","username","password","first_name","last_name","phone","email","country","address_1","city","postcode","validator","handleSubmit","bind","console","log","user","fillFields","alert","history","push","userId","event","preventDefault","length","userData","userOldData","message","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { updateAccount } from \"../../actions/indexO\";\r\nimport Breadcrumb from \"../breadcrumb\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      payment: \"stripe\",\r\n      id: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      country: \"\",\r\n      address_1: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      postcode: \"\",\r\n    };\r\n\r\n    this.validator = new SimpleReactValidator();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(this.props);\r\n    console.log(this.props.state.user.log);\r\n\r\n    if (this.props.state.user.log.username) {\r\n      // alert(this.state.first_name + \" you are currently logged in !\");\r\n      this.fillFields();\r\n    } else {\r\n      alert(this.state.first_name + \" your account has been updated !\");\r\n\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  /**\r\n * \r\n *  componentDidUpdate() {\r\n    console.log(this.props);\r\n    console.log(this.props.state.user.log);\r\n\r\n    if (this.props.state.user.log.username) {\r\n      alert(this.state.first_name + \" you are currently logged in !\");\r\n      this.fillFields();\r\n    } else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  } \r\n * \r\n */\r\n\r\n  componentWillReceiveProps() {\r\n    console.log(this.props);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  fillFields() {\r\n    const {\r\n      username,\r\n      first_name,\r\n      password,\r\n      last_name,\r\n      phone,\r\n      email,\r\n      country,\r\n      address_1,\r\n      city,\r\n      state,\r\n      postcode,\r\n      userId,\r\n    } = this.props.state.user.log;\r\n    console.log(this.props.state.user.log);\r\n    this.setState(() => {\r\n      return {\r\n        username: username,\r\n        first_name: first_name,\r\n        password: password,\r\n        last_name: last_name,\r\n        phone: phone,\r\n        email: email,\r\n        country: country,\r\n        address_1: address_1,\r\n        city: city,\r\n        state: state,\r\n        postcode: postcode,\r\n        id: userId,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    var value = e.currentTarget.value;\r\n    const name = e.currentTarget.name;\r\n    if (e.currentTarget.name) {\r\n      if (name === \"postcode\" || name === \"phone\") {\r\n        this.setState(() => {\r\n          return { [name]: value.replace(/\\D/, \"\") };\r\n        });\r\n      } else {\r\n        this.setState(() => {\r\n          return { [name]: value };\r\n        });\r\n      }\r\n    } else return null;\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    console.log(event);\r\n    event.preventDefault();\r\n    if (this.state.first_name.length > 0) {\r\n      const {\r\n        id,\r\n        username,\r\n        first_name,\r\n        password,\r\n        last_name,\r\n        phone,\r\n        email,\r\n        country,\r\n        address_1,\r\n        city,\r\n        state,\r\n        postcode,\r\n      } = this.state;\r\n      //id, updatedUser, updatedShipping\r\n      const userData = {\r\n        id: id,\r\n        username: username,\r\n        first_name: first_name,\r\n        password: password,\r\n        last_name: last_name,\r\n        phone: phone,\r\n        email: email,\r\n        country: country,\r\n        address_1: address_1,\r\n        city: city,\r\n        state: state,\r\n        postcode: postcode,\r\n      };\r\n      const userOldData = this.props.state.user.log;\r\n      console.log(userOldData, userData);\r\n      this.props.updateAccount(userData, userOldData);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb title={\"Update Account Parameters\"} />\r\n\r\n        {/*Regsiter section*/}\r\n        <section className=\"register-page section-b-space\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <h3>Updata Account Parameters</h3>\r\n                <div className=\"theme-card\">\r\n                  <form className=\"theme-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email\">User Name</label>\r\n                        <input\r\n                          id=\"uname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"User Name\"\r\n                          required=\"\"\r\n                          name=\"username\"\r\n                          value={this.state.username}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"username\",\r\n                          this.state.username,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email2\">email</label>\r\n                        <input\r\n                          id=\"email2\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email\"\r\n                          required=\"\"\r\n                          name=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"email\",\r\n                          this.state.email,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\" />\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email\">First Name</label>\r\n                        <input\r\n                          id=\"fname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"First Name\"\r\n                          required=\"\"\r\n                          name=\"first_name\"\r\n                          value={this.state.first_name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"first_name\",\r\n                          this.state.first_name,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Last Name</label>\r\n                        <input\r\n                          id=\"lname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Last Name\"\r\n                          required=\"\"\r\n                          name=\"last_name\"\r\n                          value={this.state.last_name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"last_name\",\r\n                          this.state.last_name,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"checkout-title\">\r\n                      <h3>Billing Details</h3>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"country \">country </label>\r\n                        <input\r\n                          id=\"country\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Country\"\r\n                          required=\"\"\r\n                          name=\"country\"\r\n                          value={this.state.country}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"country \",\r\n                          this.state.country,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Phone</label>\r\n                        <input\r\n                          id=\"phone\"\r\n                          type=\"tel\"\r\n                          pattern=\"[0-9]{9}\"\r\n                          maxLength=\"9\"\r\n                          className=\"form-control\"\r\n                          required=\"\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter phone number\"\r\n                          value={this.state.phone}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"phone\",\r\n                          this.state.phone,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"address \">address </label>\r\n                        <input\r\n                          id=\"address_1\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Address\"\r\n                          required=\"\"\r\n                          name=\"address_1\"\r\n                          value={this.state.address_1}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"address_1 \",\r\n                          this.state.address_1,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">City</label>\r\n                        <input\r\n                          id=\"city\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"City\"\r\n                          required=\"\"\r\n                          name=\"city\"\r\n                          value={this.state.city}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"city\",\r\n                          this.state.city,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>{\" \"}\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"state \">state / province </label>\r\n                        <input\r\n                          id=\"state\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"State / Province \"\r\n                          required=\"\"\r\n                          name=\"state\"\r\n                          value={this.state.state}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"state \",\r\n                          this.state.state,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Postal</label>\r\n                        <input\r\n                          id=\"postcode\"\r\n                          type=\"tel\"\r\n                          pattern=\"[0-9]{5}\"\r\n                          maxLength=\"5\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Postal\"\r\n                          required=\"\"\r\n                          name=\"postcode\"\r\n                          value={this.state.postcode}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"postal\",\r\n                          this.state.postcode,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-solid\"\r\n                      onClick={this.handleSubmit}\r\n                    >\r\n                      Update Account\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Register;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    updateAccount,\r\n  }\r\n)(Account);\r\n"]},"metadata":{},"sourceType":"module"}