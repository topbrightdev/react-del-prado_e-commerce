{"ast":null,"code":"import _defineProperty from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/components/pages/account.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { signup } from \"../../actions/indexO\";\nimport Breadcrumb from \"../common/breadcrumb\";\n\nvar Account = /*#__PURE__*/function (_Component) {\n  _inherits(Account, _Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _this.handleChange = function (e) {\n      var newValue = \"\";\n      var value = e.currentTarget.value;\n      newValue = value.replace(/\\s/, \" \");\n      var name = e.currentTarget.name;\n\n      if (e.currentTarget.name) {\n        if (name === \"postcode\" || name === \"phone\") {\n          _this.setState(function () {\n            return _defineProperty({}, name, value.replace(/\\D/, \"\"));\n          });\n        } else {\n          _this.setState(function () {\n            return _defineProperty({}, name, value);\n          });\n        }\n      } else return null;\n    };\n\n    _this.state = {\n      payment: \"stripe\",\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      phone: \"\",\n      email: \"\",\n      country: \"\",\n      address_1: \"\",\n      city: \"\",\n      state: \"\",\n      postcode: \"\"\n    };\n    _this.validator = new SimpleReactValidator();\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.props);\n      console.log(this.props.state.user.log);\n\n      if (this.props.state.user.log.username) {\n        alert(this.state.first_name + \" you are currently logged in !\");\n        this.fillFields();\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.props);\n      console.log(this.props.state.user.log);\n\n      if (this.props.state.user.log.username) {\n        alert(this.state.first_name + \" you are currently logged in !\");\n        this.fillFields();\n      } else {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"fillFields\",\n    value: function fillFields() {\n      var _this$props$state$use = this.props.state.user.log,\n          username = _this$props$state$use.username,\n          first_name = _this$props$state$use.first_name,\n          password = _this$props$state$use.password,\n          last_name = _this$props$state$use.last_name,\n          phone = _this$props$state$use.phone,\n          email = _this$props$state$use.email,\n          country = _this$props$state$use.country,\n          address_1 = _this$props$state$use.address_1,\n          city = _this$props$state$use.city,\n          state = _this$props$state$use.state,\n          postcode = _this$props$state$use.postcode;\n      this.setState(function () {\n        return {\n          username: username,\n          first_name: first_name,\n          password: password,\n          last_name: last_name,\n          phone: phone,\n          email: email,\n          country: country,\n          address_1: address_1,\n          city: city,\n          state: state,\n          postcode: postcode\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n\n      if (this.state.first_name.length > 0 && this.state.password > 0) {\n        var _this$state = this.state,\n            payment = _this$state.payment,\n            username = _this$state.username,\n            first_name = _this$state.first_name,\n            password = _this$state.password,\n            last_name = _this$state.last_name,\n            phone = _this$state.phone,\n            email = _this$state.email,\n            country = _this$state.country,\n            address_1 = _this$state.address_1,\n            city = _this$state.city,\n            state = _this$state.state,\n            postcode = _this$state.postcode;\n        var userData = {\n          username: username,\n          first_name: first_name,\n          password: password,\n          last_name: last_name,\n          phone: phone,\n          email: email,\n          country: country,\n          address_1: address_1,\n          city: city,\n          state: state,\n          postcode: postcode\n        };\n        this.props.signup(userData);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        title: \"Update Account Parameters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"register-page section-b-space\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, \"Updata Account Parameters\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"theme-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"theme-form\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \"User Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"uname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"User Name\",\n        required: \"\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"username\", this.state.username, \"required|alpha\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        autoComplete: \"on\",\n        className: \"form-control\",\n        placeholder: \"Password\",\n        required: \"\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"password\", this.state.password, \"required|alpha\")), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Email\",\n        required: \"\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"email\", this.state.email, \"required|alpha\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"fname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"First Name\",\n        required: \"\",\n        name: \"first_name\",\n        value: this.state.first_name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"first_name\", this.state.first_name, \"required|alpha\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"lname\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Last Name\",\n        required: \"\",\n        name: \"last_name\",\n        value: this.state.last_name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"last_name\", this.state.last_name, \"required|alpha\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkout-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 23\n        }\n      }, \"Billing Details\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"country \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }\n      }, \"country \"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"country\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Country\",\n        required: \"\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"country \", this.state.country, \"required|alpha\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, \"Phone\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"phone\",\n        type: \"tel\",\n        pattern: \"[0-9]{9}\",\n        maxLength: \"9\",\n        className: \"form-control\",\n        required: \"\",\n        name: \"phone\",\n        placeholder: \"Enter phone number\",\n        value: this.state.phone,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"phone\", this.state.phone, \"required|alpha\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"address \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"address \"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"address_1\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Address\",\n        required: \"\",\n        name: \"address_1\",\n        value: this.state.address_1,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"address_1 \", this.state.address_1, \"required|alpha\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }\n      }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"city\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"City\",\n        required: \"\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"city\", this.state.city, \"required|alpha\")), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"state \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }\n      }, \"state / province \"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"state\",\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"State / Province \",\n        required: \"\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"state \", this.state.state, \"required|alpha\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }, \"Postal\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"postcode\",\n        type: \"tel\",\n        pattern: \"[0-9]{5}\",\n        maxLength: \"5\",\n        className: \"form-control\",\n        placeholder: \"Postal\",\n        required: \"\",\n        name: \"postcode\",\n        value: this.state.postcode,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }), this.validator.message(\"postal\", this.state.postcode, \"required|alpha\"))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-solid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }, \"Update Account\"))))))));\n    }\n  }]);\n\n  return Account;\n}(Component); //export default Register;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signup: signup\n})(Account);","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/components/pages/account.jsx"],"names":["React","Component","connect","SimpleReactValidator","signup","Breadcrumb","Account","props","handleChange","e","newValue","value","currentTarget","replace","name","setState","state","payment","username","password","first_name","last_name","phone","email","country","address_1","city","postcode","validator","handleSubmit","bind","console","log","user","alert","fillFields","history","push","event","preventDefault","length","userData","message","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {signup} from \"../../actions/indexO\";\r\nimport Breadcrumb from \"../common/breadcrumb\";\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      payment: \"stripe\",\r\n      username: \"\",\r\n      password: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      country: \"\",\r\n      address_1: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      postcode: \"\",\r\n    };\r\n\r\n    this.validator = new SimpleReactValidator();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(this.props);\r\n    console.log(this.props.state.user.log);\r\n\r\n    if (this.props.state.user.log.username) {\r\n      alert(this.state.first_name + \" you are currently logged in !\");\r\n      this.fillFields();\r\n    } else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props);\r\n    console.log(this.props.state.user.log);\r\n\r\n    if (this.props.state.user.log.username) {\r\n      alert(this.state.first_name + \" you are currently logged in !\");\r\n      this.fillFields();\r\n    } else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  fillFields() {\r\n    const {\r\n      username,\r\n      first_name,\r\n      password,\r\n      last_name,\r\n      phone,\r\n      email,\r\n      country,\r\n      address_1,\r\n      city,\r\n      state,\r\n      postcode,\r\n    } = this.props.state.user.log;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        username: username,\r\n        first_name: first_name,\r\n        password: password,\r\n        last_name: last_name,\r\n        phone: phone,\r\n        email: email,\r\n        country: country,\r\n        address_1: address_1,\r\n        city: city,\r\n        state: state,\r\n        postcode: postcode,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let newValue = \"\";\r\n    var value = e.currentTarget.value;\r\n    newValue = value.replace(/\\s/, \" \");\r\n    const name = e.currentTarget.name;\r\n    if (e.currentTarget.name) {\r\n      if (name === \"postcode\" || name === \"phone\") {\r\n        this.setState(() => {\r\n          return {[name]: value.replace(/\\D/, \"\")};\r\n        });\r\n      } else {\r\n        this.setState(() => {\r\n          return {[name]: value};\r\n        });\r\n      }\r\n    } else return null;\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.first_name.length > 0 && this.state.password > 0) {\r\n      const {\r\n        payment,\r\n        username,\r\n        first_name,\r\n        password,\r\n        last_name,\r\n        phone,\r\n        email,\r\n        country,\r\n        address_1,\r\n        city,\r\n        state,\r\n        postcode,\r\n      } = this.state;\r\n\r\n      const userData = {\r\n        username: username,\r\n        first_name: first_name,\r\n        password: password,\r\n        last_name: last_name,\r\n        phone: phone,\r\n        email: email,\r\n        country: country,\r\n        address_1: address_1,\r\n        city: city,\r\n        state: state,\r\n        postcode: postcode,\r\n      };\r\n      this.props.signup(userData);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb title={\"Update Account Parameters\"} />\r\n\r\n        {/*Regsiter section*/}\r\n        <section className=\"register-page section-b-space\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <h3>Updata Account Parameters</h3>\r\n                <div className=\"theme-card\">\r\n                  <form className=\"theme-form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email\">User Name</label>\r\n                        <input\r\n                          id=\"uname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"User Name\"\r\n                          required=\"\"\r\n                          name=\"username\"\r\n                          value={this.state.username}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"username\",\r\n                          this.state.username,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Password</label>\r\n                        <input\r\n                          id=\"password\"\r\n                          type=\"password\"\r\n                          autoComplete=\"on\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          required=\"\"\r\n                          name=\"password\"\r\n                          value={this.state.password}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"password\",\r\n                          this.state.password,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>{\" \"}\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email\">email</label>\r\n                        <input\r\n                          id=\"email\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email\"\r\n                          required=\"\"\r\n                          name=\"email\"\r\n                          value={this.state.email}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"email\",\r\n                          this.state.email,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"email\">First Name</label>\r\n                        <input\r\n                          id=\"fname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"First Name\"\r\n                          required=\"\"\r\n                          name=\"first_name\"\r\n                          value={this.state.first_name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"first_name\",\r\n                          this.state.first_name,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Last Name</label>\r\n                        <input\r\n                          id=\"lname\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Last Name\"\r\n                          required=\"\"\r\n                          name=\"last_name\"\r\n                          value={this.state.last_name}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"last_name\",\r\n                          this.state.last_name,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"checkout-title\">\r\n                      <h3>Billing Details</h3>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"country \">country </label>\r\n                        <input\r\n                          id=\"country\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Country\"\r\n                          required=\"\"\r\n                          name=\"country\"\r\n                          value={this.state.country}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"country \",\r\n                          this.state.country,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Phone</label>\r\n                        <input\r\n                          id=\"phone\"\r\n                          type=\"tel\"\r\n                          pattern=\"[0-9]{9}\"\r\n                          maxLength=\"9\"\r\n                          className=\"form-control\"\r\n                          required=\"\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter phone number\"\r\n                          value={this.state.phone}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"phone\",\r\n                          this.state.phone,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"address \">address </label>\r\n                        <input\r\n                          id=\"address_1\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Address\"\r\n                          required=\"\"\r\n                          name=\"address_1\"\r\n                          value={this.state.address_1}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"address_1 \",\r\n                          this.state.address_1,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">City</label>\r\n                        <input\r\n                          id=\"city\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"City\"\r\n                          required=\"\"\r\n                          name=\"city\"\r\n                          value={this.state.city}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"city\",\r\n                          this.state.city,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>{\" \"}\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"state \">state / province </label>\r\n                        <input\r\n                          id=\"state\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"State / Province \"\r\n                          required=\"\"\r\n                          name=\"state\"\r\n                          value={this.state.state}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"state \",\r\n                          this.state.state,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label htmlFor=\"review\">Postal</label>\r\n                        <input\r\n                          id=\"postcode\"\r\n                          type=\"tel\"\r\n                          pattern=\"[0-9]{5}\"\r\n                          maxLength=\"5\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Postal\"\r\n                          required=\"\"\r\n                          name=\"postcode\"\r\n                          value={this.state.postcode}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          \"postal\",\r\n                          this.state.postcode,\r\n                          \"required|alpha\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-solid\">\r\n                      Update Account\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default Register;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  signup,\r\n})(Account);\r\n"]},"metadata":{},"sourceType":"module"}