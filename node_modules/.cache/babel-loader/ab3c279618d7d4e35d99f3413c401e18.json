{"ast":null,"code":"import _regeneratorRuntime from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/checkout/CheckoutForm.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CardNumberElement, CardExpiryElement, CardCVCElement, injectStripe } from \"react-stripe-elements\";\nimport axios from \"axios\"; //4242424242424242\n\nvar send = false;\nvar email,\n    total,\n    amount = null;\nvar port = process.env.PORT || 7000;\nvar urlCharge = process.env.NODE_ENV.trim() === \"production\" ? \"https://waldenberginc.com/api/stripe/charge\" : \"http://localhost:7000/api/stripe/charge\"; //const urlCharge ='http://waldenberginc.com/api/stripe/charge'\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  var selectedProduct = _ref.selectedProduct,\n      stripe = _ref.stripe,\n      history = _ref.history,\n      total = _ref.total,\n      email = _ref.email;\n  if (selectedProduct === null) history.push(\"/\");\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      receiptUrl = _useState2[0],\n      setReceiptUrl = _useState2[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var amount, _ref3, error, token, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              console.log(total);\n              amount = total * 100;\n              amount = amount.toString();\n              console.log(amount);\n              _context.next = 7;\n              return stripe.createToken();\n\n            case 7:\n              _ref3 = _context.sent;\n              error = _ref3.error;\n              token = _ref3.token;\n\n              if (error) {\n                console.log(error);\n              }\n\n              if (token) {\n                console.log(token);\n              }\n\n              _context.next = 14;\n              return axios.post(\"http://localhost:9000/stripe\", {\n                amount: amount,\n                source: token.id,\n                receipt_email: email\n              }).catch(function (e) {\n                console.log(e);\n              });\n\n            case 14:\n              order = _context.sent;\n              setReceiptUrl(order.data.charge.receipt_url); // receiveReceipt(receiptUrl);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // if (receiptUrl) {\n  // if (receiptUrl) {\n  //  history.push(\n  //   `${process.env.PUBLIC_URL}/order-success`\n  //  );\n\n\n  var newTo = function newTo(receipt) {\n    return {\n      pathname: \"\".concat(process.env.PUBLIC_URL, \"/order-success\"),\n      receipt: receipt\n    };\n  }; // if (receiptUrl) {\n\n\n  if (receiptUrl) {\n    history.push(newTo(receiptUrl)); //    <Link to={this.newTo(\"Meat\")}>\n\n    /*   return (\n    <div className=\"success \">\n        <div className=\" success-form farm-19\">\n          {alert(\"Payment Successful!\")}\n          <h2 className=\"success-text\">Payment Successful!</h2>\n          <div className=\"success-links\">\n            <a href={receiptUrl} className=\"success-receipt links\">\n              View Receipt\n            </a>\n            <Link to=\"/\" className=\"success-home links\">\n              Shop\n            </Link>\n          </div>\n        </div>\n      </div>*/\n  }\n\n  return React.createElement(\"div\", {\n    className: \"checkout-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"checkout-form farm-19\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"checkout-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Introduce your Credit Card Information\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Amount: \", total, \" $ \"), React.createElement(\"div\", {\n    className: \"checkout-number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"checkout-label-number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Card details\", React.createElement(CardNumberElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"checkout-card-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"checkout-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Expiration date\", React.createElement(CardExpiryElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"checkout-label cvc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"CVC\", React.createElement(CardCVCElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"checkout-div-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-solid btn\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Pay\")));\n};\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/home/jarri/Desktop/lenovo2020/projects-web/eCommerce/store/frontEnd/src/components/checkout/CheckoutForm.jsx"],"names":["React","useState","Link","CardNumberElement","CardExpiryElement","CardCVCElement","injectStripe","axios","send","email","total","amount","port","process","env","PORT","urlCharge","NODE_ENV","trim","CheckoutForm","selectedProduct","stripe","history","push","receiptUrl","setReceiptUrl","handleSubmit","event","preventDefault","console","log","toString","createToken","error","token","post","source","id","receipt_email","catch","e","order","data","charge","receipt_url","newTo","receipt","pathname","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCVCElement,\n  injectStripe,\n} from \"react-stripe-elements\";\nimport axios from \"axios\";\n\n//4242424242424242\n\nvar send = false;\nvar email,\n  total,\n  amount = null;\n\nconst port = process.env.PORT || 7000;\n\nconst urlCharge =\n  process.env.NODE_ENV.trim() === \"production\"\n    ? `https://waldenberginc.com/api/stripe/charge`\n    : \"http://localhost:7000/api/stripe/charge\";\n//const urlCharge ='http://waldenberginc.com/api/stripe/charge'\n\nconst CheckoutForm = ({ selectedProduct, stripe, history, total, email }) => {\n  if (selectedProduct === null) history.push(\"/\");\n  const [receiptUrl, setReceiptUrl] = useState(\"\");\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(total);\n    var amount = total * 100;\n    amount = amount.toString();\n    console.log(amount);\n    const { error, token } = await stripe.createToken();\n    if (error) {\n      console.log(error);\n    }\n    if (token) {\n      console.log(token);\n    }\n    const order = await axios\n      .post(\"http://localhost:9000/stripe\", {\n        amount: amount,\n        source: token.id,\n        receipt_email: email,\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    setReceiptUrl(order.data.charge.receipt_url);\n    // receiveReceipt(receiptUrl);\n  };\n\n  // if (receiptUrl) {\n  // if (receiptUrl) {\n  //  history.push(\n  //   `${process.env.PUBLIC_URL}/order-success`\n  //  );\n\n  const newTo = (receipt) => {\n    return {\n      pathname: `${process.env.PUBLIC_URL}/order-success`,\n      receipt: receipt,\n    };\n  };\n\n  // if (receiptUrl) {\n  if (receiptUrl) {\n    history.push(newTo(receiptUrl));\n\n    //    <Link to={this.newTo(\"Meat\")}>\n\n    /*   return (\n\n  <div className=\"success \">\n        <div className=\" success-form farm-19\">\n          {alert(\"Payment Successful!\")}\n          <h2 className=\"success-text\">Payment Successful!</h2>\n          <div className=\"success-links\">\n            <a href={receiptUrl} className=\"success-receipt links\">\n              View Receipt\n            </a>\n            <Link to=\"/\" className=\"success-home links\">\n              Shop\n            </Link>\n          </div>\n        </div>\n      </div>*/\n  }\n\n  return (\n    <div className=\"checkout-details\">\n      <div className=\"checkout-form farm-19\">\n        <h6 className=\"checkout-text\">\n          Introduce your Credit Card Information\n        </h6>\n        <p>Amount: {total} $ </p>\n\n        <div className=\"checkout-number\">\n          <label className=\"checkout-label-number\">\n            Card details\n            <CardNumberElement />\n          </label>\n        </div>\n        <div className=\"checkout-card-details\">\n          <label className=\"checkout-label\">\n            Expiration date\n            <CardExpiryElement />\n          </label>\n\n          <label className=\"checkout-label cvc\">\n            CVC\n            <CardCVCElement />\n          </label>\n        </div>\n      </div>\n      <div className=\"checkout-div-button\">\n        <button type=\"button\" className=\"btn-solid btn\" onClick={handleSubmit}>\n          Pay\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default injectStripe(CheckoutForm);\n"]},"metadata":{},"sourceType":"module"}