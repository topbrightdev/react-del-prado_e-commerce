{"ast":null,"code":"import _objectSpread from \"/home/jarri/Desktop/projects-web/eCommerce/template-store1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_SINGLE_PRODUCT, CHANGE_CURRENCY, RECEIVE_PRODUCTS, SEARCH_PRODUCT } from \"../constants/ActionTypes\";\nvar initialState = {\n  products: [],\n  symbol: \"$\",\n  product_details: []\n};\n\nvar productReducer = function productReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return _objectSpread({}, state, {\n        products: action.products\n      });\n\n    case FETCH_SINGLE_PRODUCT:\n      if (state.products.findIndex(function (product) {\n        return product.id === action.productId;\n      }) !== -1) {\n        var singleItem = state.products.reduce(function (itemAcc, product) {\n          return product;\n        }, []);\n        return _objectSpread({}, state, {\n          product_details: singleItem\n        });\n      }\n\n    case SEARCH_PRODUCT:\n      console.log(action.productName);\n      var item = {};\n      state.products.map(function (product) {\n        console.log(product.name);\n        var thisName = product.name.toUpperCase();\n        var receivedName = action.productName.toUpperCase();\n        console.log(thisName, receivedName);\n\n        if (thisName === receivedName) {\n          item = product;\n        }\n      });\n\n      if (item.name) {\n        console.log(item);\n        return _objectSpread({}, state, {\n          product_details: item\n        });\n      }\n\n    case CHANGE_CURRENCY:\n      return _objectSpread({}, state, {\n        symbol: action.symbol\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/home/jarri/Desktop/projects-web/eCommerce/template-store1/src/reducers/products.js"],"names":["FETCH_SINGLE_PRODUCT","CHANGE_CURRENCY","RECEIVE_PRODUCTS","SEARCH_PRODUCT","initialState","products","symbol","product_details","productReducer","state","action","type","findIndex","product","id","productId","singleItem","reduce","itemAcc","console","log","productName","item","map","name","thisName","toUpperCase","receivedName"],"mappings":";AAAA,SACEA,oBADF,EAEEC,eAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,0BALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE,GAFW;AAGnBC,EAAAA,eAAe,EAAE;AAHE,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,gBAAL;AACE,+BACKO,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AAFnB;;AAIF,SAAKL,oBAAL;AACE,UACES,KAAK,CAACJ,QAAN,CAAeO,SAAf,CACE,UAACC,OAAD;AAAA,eAAaA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACK,SAAnC;AAAA,OADF,MAEM,CAAC,CAHT,EAIE;AACA,YAAMC,UAAU,GAAGP,KAAK,CAACJ,QAAN,CAAeY,MAAf,CAAsB,UAACC,OAAD,EAAUL,OAAV,EAAsB;AAC7D,iBAAOA,OAAP;AACD,SAFkB,EAEhB,EAFgB,CAAnB;AAGA,iCACKJ,KADL;AAEEF,UAAAA,eAAe,EAAES;AAFnB;AAID;;AAEH,SAAKb,cAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,WAAnB;AACA,UAAIC,IAAI,GAAG,EAAX;AACAb,MAAAA,KAAK,CAACJ,QAAN,CAAekB,GAAf,CAAmB,UAACV,OAAD,EAAa;AAC9BM,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACW,IAApB;AACA,YAAIC,QAAQ,GAAGZ,OAAO,CAACW,IAAR,CAAaE,WAAb,EAAf;AACA,YAAIC,YAAY,GAAGjB,MAAM,CAACW,WAAP,CAAmBK,WAAnB,EAAnB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ,EAAsBE,YAAtB;;AACA,YAAIF,QAAQ,KAAKE,YAAjB,EAA+B;AAC7BL,UAAAA,IAAI,GAAGT,OAAP;AACD;AACF,OARD;;AASA,UAAIS,IAAI,CAACE,IAAT,EAAe;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,iCACKb,KADL;AAEEF,UAAAA,eAAe,EAAEe;AAFnB;AAID;;AAEH,SAAKrB,eAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFjB;;AAIF;AACE,aAAOG,KAAP;AA/CJ;AAiDD,CAlDD;;AAmDA,eAAeD,cAAf","sourcesContent":["import {\n  FETCH_SINGLE_PRODUCT,\n  CHANGE_CURRENCY,\n  RECEIVE_PRODUCTS,\n  SEARCH_PRODUCT,\n} from \"../constants/ActionTypes\";\n\nconst initialState = {\n  products: [],\n  symbol: \"$\",\n  product_details: [],\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        products: action.products,\n      };\n    case FETCH_SINGLE_PRODUCT:\n      if (\n        state.products.findIndex(\n          (product) => product.id === action.productId\n        ) !== -1\n      ) {\n        const singleItem = state.products.reduce((itemAcc, product) => {\n          return product;\n        }, []);\n        return {\n          ...state,\n          product_details: singleItem,\n        };\n      }\n\n    case SEARCH_PRODUCT:\n      console.log(action.productName);\n      var item = {};\n      state.products.map((product) => {\n        console.log(product.name);\n        var thisName = product.name.toUpperCase();\n        var receivedName = action.productName.toUpperCase();\n        console.log(thisName, receivedName);\n        if (thisName === receivedName) {\n          item = product;\n        }\n      });\n      if (item.name) {\n        console.log(item);\n        return {\n          ...state,\n          product_details: item,\n        };\n      }\n\n    case CHANGE_CURRENCY:\n      return {\n        ...state,\n        symbol: action.symbol,\n      };\n    default:\n      return state;\n  }\n};\nexport default productReducer;\n"]},"metadata":{},"sourceType":"module"}