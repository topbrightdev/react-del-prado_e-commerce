{"ast":null,"code":"'use strict';\n\nvar request = require('request');\n\nvar OAuth = require('oauth-1.0a');\n\nvar createHmac = require('create-hmac');\n\nvar promise = require('bluebird');\n\nvar _url = require('url');\n\nmodule.exports = WooCommerceAPI;\n/**\n * WooCommerce REST API wrapper\n *\n * @param {Object} opt\n */\n\nfunction WooCommerceAPI(opt) {\n  if (!(this instanceof WooCommerceAPI)) {\n    return new WooCommerceAPI(opt);\n  }\n\n  opt = opt || {};\n\n  if (!opt.url) {\n    throw new Error('url is required');\n  }\n\n  if (!opt.consumerKey) {\n    throw new Error('consumerKey is required');\n  }\n\n  if (!opt.consumerSecret) {\n    throw new Error('consumerSecret is required');\n  }\n\n  this.classVersion = '1.5.0';\n\n  this._setDefaultsOptions(opt);\n}\n/**\n * Set default options\n *\n * @param {Object} opt\n */\n\n\nWooCommerceAPI.prototype._setDefaultsOptions = function (opt) {\n  this.url = opt.url;\n  this.wpAPI = opt.wpAPI || false;\n  this.wpAPIPrefix = opt.wpAPIPrefix || 'wp-json';\n  this.version = opt.version || 'v3';\n  this.isSsl = /^https/i.test(this.url);\n  this.consumerKey = opt.consumerKey;\n  this.consumerSecret = opt.consumerSecret;\n  this.verifySsl = false === opt.verifySsl ? false : true;\n  this.encoding = opt.encoding || 'utf8';\n  this.queryStringAuth = opt.queryStringAuth || false;\n  this.port = opt.port || '';\n  this.timeout = opt.timeout;\n  this.agent = opt.agent;\n};\n/**\n * Normalize query string for oAuth\n *\n * @param  {string} url\n * @return {string}\n */\n\n\nWooCommerceAPI.prototype._normalizeQueryString = function (url) {\n  // Exit if don't find query string\n  if (-1 === url.indexOf('?')) {\n    return url;\n  }\n\n  var query = _url.parse(url, true).query;\n\n  var params = [];\n  var queryString = '';\n\n  for (var p in query) {\n    params.push(p);\n  }\n\n  params.sort();\n\n  for (var i in params) {\n    if (queryString.length) {\n      queryString += '&';\n    }\n\n    queryString += encodeURIComponent(params[i]).replace(/%5B/g, '[').replace(/%5D/g, ']');\n    queryString += '=';\n    queryString += encodeURIComponent(query[params[i]]);\n  }\n\n  return url.split('?')[0] + '?' + queryString;\n};\n/**\n * Get URL\n *\n * @param  {String} endpoint\n *\n * @return {String}\n */\n\n\nWooCommerceAPI.prototype._getUrl = function (endpoint) {\n  var url = '/' === this.url.slice(-1) ? this.url : this.url + '/';\n  var api = this.wpAPI ? this.wpAPIPrefix + '/' : 'wc-api/';\n  url = url + api + this.version + '/' + endpoint; // Include port.\n\n  if ('' !== this.port) {\n    var hostname = _url.parse(url, true).hostname;\n\n    url = url.replace(hostname, hostname + ':' + this.port);\n  }\n\n  if (!this.isSsl) {\n    return this._normalizeQueryString(url);\n  }\n\n  return url;\n};\n/**\n * Get OAuth\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype._getOAuth = function () {\n  var data = {\n    consumer: {\n      key: this.consumerKey,\n      secret: this.consumerSecret\n    },\n    signature_method: 'HMAC-SHA256',\n    hash_function: function hash_function(base_string, key) {\n      return createHmac('sha256', key).update(base_string).digest('base64');\n    }\n  };\n\n  if (-1 < ['v1', 'v2'].indexOf(this.version)) {\n    data.last_ampersand = false;\n  }\n\n  return new OAuth(data);\n};\n/**\n * Do requests\n *\n * @param  {String}   method\n * @param  {String}   endpoint\n * @param  {Object}   data\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype._request = function (method, endpoint, data, callback) {\n  var url = this._getUrl(endpoint);\n\n  var params = {\n    url: url,\n    method: method,\n    encoding: this.encoding,\n    timeout: this.timeout,\n    headers: {\n      'User-Agent': 'WooCommerce API Client-Node.js/' + this.classVersion,\n      'Accept': 'application/json'\n    }\n  }; // Allow a keep-alive (or other) agent\n\n  if (this.agent) {\n    params.agent = this.agent;\n  }\n\n  if (this.isSsl) {\n    if (this.queryStringAuth) {\n      params.qs = {\n        consumer_key: this.consumerKey,\n        consumer_secret: this.consumerSecret\n      };\n    } else {\n      params.auth = {\n        user: this.consumerKey,\n        pass: this.consumerSecret\n      };\n    }\n\n    if (!this.verifySsl) {\n      params.strictSSL = false;\n    }\n  } else {\n    params.qs = this._getOAuth().authorize({\n      url: url,\n      method: method\n    });\n  }\n\n  if (data) {\n    params.headers['Content-Type'] = 'application/json;charset=utf-8';\n    params.body = JSON.stringify(data);\n  }\n\n  if (!callback) {\n    return request(params);\n  }\n\n  return request(params, callback);\n};\n/**\n * GET requests\n *\n * @param  {String}   endpoint\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype.get = function (endpoint, callback) {\n  return this._request('GET', endpoint, null, callback);\n};\n/**\n * POST requests\n *\n * @param  {String}   endpoint\n * @param  {Object}   data\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype.post = function (endpoint, data, callback) {\n  return this._request('POST', endpoint, data, callback);\n};\n/**\n * PUT requests\n *\n * @param  {String}   endpoint\n * @param  {Object}   data\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype.put = function (endpoint, data, callback) {\n  return this._request('PUT', endpoint, data, callback);\n};\n/**\n * DELETE requests\n *\n * @param  {String}   endpoint\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype.delete = function (endpoint, callback) {\n  return this._request('DELETE', endpoint, null, callback);\n};\n/**\n * OPTIONS requests\n *\n * @param  {String}   endpoint\n * @param  {Function} callback\n *\n * @return {Object}\n */\n\n\nWooCommerceAPI.prototype.options = function (endpoint, callback) {\n  return this._request('OPTIONS', endpoint, null, callback);\n};\n/**\n * Promifying all requests exposing new methods\n * named [method]Async like in getAsync()\n */\n\n\npromise.promisifyAll(WooCommerceAPI.prototype);","map":null,"metadata":{},"sourceType":"script"}